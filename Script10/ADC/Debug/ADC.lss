
ADC.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000078  00800100  00002972  00002a06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002972  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000449  00800178  00800178  00002a7e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002a7e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002adc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002a8  00000000  00000000  00002b20  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000050cd  00000000  00000000  00002dc8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000da8  00000000  00000000  00007e95  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000230a  00000000  00000000  00008c3d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000bbc  00000000  00000000  0000af48  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000dd7  00000000  00000000  0000bb04  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005853  00000000  00000000  0000c8db  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000460  00000000  00000000  0001212e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 54 01 	jmp	0x2a8	; 0x2a8 <__ctors_end>
       4:	0c 94 13 02 	jmp	0x426	; 0x426 <__vector_1>
       8:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
       c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      10:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__vector_4>
      14:	0c 94 d9 02 	jmp	0x5b2	; 0x5b2 <__vector_5>
      18:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      1c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      20:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      24:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      28:	0c 94 4b 03 	jmp	0x696	; 0x696 <__vector_10>
      2c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      30:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      34:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      38:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__vector_14>
      3c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      40:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      44:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      48:	0c 94 d8 04 	jmp	0x9b0	; 0x9b0 <__vector_18>
      4c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      50:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      54:	0c 94 c2 03 	jmp	0x784	; 0x784 <__vector_21>
      58:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      5c:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      60:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>
      64:	0c 94 71 01 	jmp	0x2e2	; 0x2e2 <__bad_interrupt>

00000068 <Font5x8>:
      68:	05 00 00 00 00 00 05 00 00 5f 00 00 05 00 07 00     ........._......
      78:	07 00 05 14 7f 14 7f 14 05 24 2a 7f 2a 12 05 23     .........$*.*..#
      88:	13 08 64 62 05 36 49 56 20 50 05 08 07 03 00 00     ..db.6IV P......
      98:	05 00 1c 22 41 00 05 00 41 22 1c 00 05 14 08 3e     ..."A...A".....>
      a8:	08 14 05 08 08 3e 08 08 05 00 b0 70 00 00 05 08     .....>.....p....
      b8:	08 08 08 08 05 00 60 60 00 00 05 20 10 08 04 02     ......``... ....
      c8:	05 3e 51 49 45 3e 05 00 42 7f 40 00 05 72 49 49     .>QIE>..B.@..rII
      d8:	49 46 05 21 41 49 4d 33 05 18 14 12 7f 10 05 27     IF.!AIM3.......'
      e8:	45 45 45 39 05 3c 4a 49 49 31 05 41 21 11 09 07     EEE9.<JII1.A!...
      f8:	05 36 49 49 49 36 05 46 49 49 29 1e 05 00 00 14     .6III6.FII).....
     108:	00 00 05 00 40 34 00 00 05 08 14 22 41 00 05 14     ....@4....."A...
     118:	14 14 14 14 05 41 22 14 08 00 05 02 01 59 09 06     .....A"......Y..
     128:	05 3e 41 5d 59 4e 05 7c 12 11 12 7c 05 7f 49 49     .>A]YN.|...|..II
     138:	49 36 05 3e 41 41 41 22 05 7f 41 41 41 3e 05 7f     I6.>AAA"..AAA>..
     148:	49 49 49 49 05 7f 09 09 09 09 05 3e 41 41 51 73     IIII.......>AAQs
     158:	05 7f 08 08 08 7f 05 00 41 7f 41 00 05 20 40 41     ........A.A.. @A
     168:	3f 01 05 7f 08 14 22 41 05 7f 40 40 40 40 05 7f     ?....."A..@@@@..
     178:	02 0c 02 7f 05 7f 04 08 10 7f 05 3e 41 41 41 3e     ...........>AAA>
     188:	05 7f 09 09 09 06 05 3e 41 51 21 5e 05 7f 09 19     .......>AQ!^....
     198:	29 46 05 26 49 49 49 32 05 01 01 7f 01 01 05 3f     )F.&III2.......?
     1a8:	40 40 40 3f 05 1f 20 40 20 1f 05 3f 40 38 40 3f     @@@?.. @ ..?@8@?
     1b8:	05 63 14 08 14 63 05 03 04 78 04 03 05 61 51 49     .c...c...x...aQI
     1c8:	45 43 05 00 7f 41 41 00 05 02 04 08 10 20 05 00     EC...AA...... ..
     1d8:	41 41 7f 00 05 04 02 01 02 04 05 40 40 40 40 40     AA.........@@@@@
     1e8:	05 07 0b 00 00 00 05 20 54 54 78 40 05 7f 28 44     ....... TTx@..(D
     1f8:	44 38 05 38 44 44 44 28 05 38 44 44 28 7f 05 38     D8.8DDD(.8DD(..8
     208:	54 54 54 18 05 00 08 7e 09 02 05 18 a4 a4 9c 78     TTT....~.......x
     218:	05 7f 08 04 04 78 05 00 44 7d 40 00 05 20 40 40     .....x..D}@.. @@
     228:	3d 00 05 7f 10 28 44 00 05 00 41 7f 40 00 05 7c     =....(D...A.@..|
     238:	04 78 04 78 05 7c 08 04 04 78 05 38 44 44 44 38     .x.x.|...x.8DDD8
     248:	05 fc 18 24 24 18 05 18 24 24 18 fc 05 7c 08 04     ...$$...$$...|..
     258:	04 08 05 48 54 54 54 24 05 04 04 3f 44 24 05 3c     ...HTTT$...?D$.<
     268:	40 40 20 7c 05 1c 20 40 20 1c 05 3c 40 30 40 3c     @@ |.. @ ..<@0@<
     278:	05 44 28 10 28 44 05 4c 90 90 90 7c 05 44 64 54     .D(.(D.L...|.DdT
     288:	4c 44 05 00 08 36 41 00 05 00 00 77 00 00 05 00     LD...6A....w....
     298:	41 36 08 00 05 04 02 04 08 04 05 00 7f 41 7f 00     A6...........A..

000002a8 <__ctors_end>:
     2a8:	11 24       	eor	r1, r1
     2aa:	1f be       	out	0x3f, r1	; 63
     2ac:	cf ef       	ldi	r28, 0xFF	; 255
     2ae:	d8 e0       	ldi	r29, 0x08	; 8
     2b0:	de bf       	out	0x3e, r29	; 62
     2b2:	cd bf       	out	0x3d, r28	; 61

000002b4 <__do_copy_data>:
     2b4:	11 e0       	ldi	r17, 0x01	; 1
     2b6:	a0 e0       	ldi	r26, 0x00	; 0
     2b8:	b1 e0       	ldi	r27, 0x01	; 1
     2ba:	e2 e7       	ldi	r30, 0x72	; 114
     2bc:	f9 e2       	ldi	r31, 0x29	; 41
     2be:	02 c0       	rjmp	.+4      	; 0x2c4 <__do_copy_data+0x10>
     2c0:	05 90       	lpm	r0, Z+
     2c2:	0d 92       	st	X+, r0
     2c4:	a8 37       	cpi	r26, 0x78	; 120
     2c6:	b1 07       	cpc	r27, r17
     2c8:	d9 f7       	brne	.-10     	; 0x2c0 <__do_copy_data+0xc>

000002ca <__do_clear_bss>:
     2ca:	25 e0       	ldi	r18, 0x05	; 5
     2cc:	a8 e7       	ldi	r26, 0x78	; 120
     2ce:	b1 e0       	ldi	r27, 0x01	; 1
     2d0:	01 c0       	rjmp	.+2      	; 0x2d4 <.do_clear_bss_start>

000002d2 <.do_clear_bss_loop>:
     2d2:	1d 92       	st	X+, r1

000002d4 <.do_clear_bss_start>:
     2d4:	a1 3c       	cpi	r26, 0xC1	; 193
     2d6:	b2 07       	cpc	r27, r18
     2d8:	e1 f7       	brne	.-8      	; 0x2d2 <.do_clear_bss_loop>
     2da:	0e 94 c2 08 	call	0x1184	; 0x1184 <main>
     2de:	0c 94 b7 14 	jmp	0x296e	; 0x296e <_exit>

000002e2 <__bad_interrupt>:
     2e2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000002e6 <__vector_4>:
// Função de recebimento do USART
unsigned char USART_Receive(void)
{
	while(!(UCSR0A & (1<<RXC0))); //Espera o dado ser recebido
	return UDR0; //Lê o dado recebido e retorna
}
     2e6:	1f 92       	push	r1
     2e8:	0f 92       	push	r0
     2ea:	0f b6       	in	r0, 0x3f	; 63
     2ec:	0f 92       	push	r0
     2ee:	11 24       	eor	r1, r1
     2f0:	2f 93       	push	r18
     2f2:	3f 93       	push	r19
     2f4:	4f 93       	push	r20
     2f6:	5f 93       	push	r21
     2f8:	6f 93       	push	r22
     2fa:	7f 93       	push	r23
     2fc:	8f 93       	push	r24
     2fe:	9f 93       	push	r25
     300:	af 93       	push	r26
     302:	bf 93       	push	r27
     304:	ef 93       	push	r30
     306:	ff 93       	push	r31
     308:	36 99       	sbic	0x06, 6	; 6
     30a:	0d c0       	rjmp	.+26     	; 0x326 <__vector_4+0x40>
     30c:	10 92 90 01 	sts	0x0190, r1	; 0x800190 <kilometragemAtual>
     310:	10 92 91 01 	sts	0x0191, r1	; 0x800191 <kilometragemAtual+0x1>
     314:	10 92 92 01 	sts	0x0192, r1	; 0x800192 <kilometragemAtual+0x2>
     318:	10 92 93 01 	sts	0x0193, r1	; 0x800193 <kilometragemAtual+0x3>
     31c:	60 e0       	ldi	r22, 0x00	; 0
     31e:	83 e0       	ldi	r24, 0x03	; 3
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     326:	33 99       	sbic	0x06, 3	; 6
     328:	10 c0       	rjmp	.+32     	; 0x34a <__vector_4+0x64>
     32a:	60 91 7e 01 	lds	r22, 0x017E	; 0x80017e <farol>
     32e:	70 91 7f 01 	lds	r23, 0x017F	; 0x80017f <farol+0x1>
     332:	6f 5f       	subi	r22, 0xFF	; 255
     334:	7f 4f       	sbci	r23, 0xFF	; 255
     336:	63 70       	andi	r22, 0x03	; 3
     338:	77 27       	eor	r23, r23
     33a:	70 93 7f 01 	sts	0x017F, r23	; 0x80017f <farol+0x1>
     33e:	60 93 7e 01 	sts	0x017E, r22	; 0x80017e <farol>
     342:	84 e0       	ldi	r24, 0x04	; 4
     344:	90 e0       	ldi	r25, 0x00	; 0
     346:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     34a:	ff 91       	pop	r31
     34c:	ef 91       	pop	r30
     34e:	bf 91       	pop	r27
     350:	af 91       	pop	r26
     352:	9f 91       	pop	r25
     354:	8f 91       	pop	r24
     356:	7f 91       	pop	r23
     358:	6f 91       	pop	r22
     35a:	5f 91       	pop	r21
     35c:	4f 91       	pop	r20
     35e:	3f 91       	pop	r19
     360:	2f 91       	pop	r18
     362:	0f 90       	pop	r0
     364:	0f be       	out	0x3f, r0	; 63
     366:	0f 90       	pop	r0
     368:	1f 90       	pop	r1
     36a:	18 95       	reti

0000036c <__vector_14>:
     36c:	1f 92       	push	r1
     36e:	0f 92       	push	r0
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	0f 92       	push	r0
     374:	11 24       	eor	r1, r1
     376:	cf 92       	push	r12
     378:	df 92       	push	r13
     37a:	ef 92       	push	r14
     37c:	ff 92       	push	r15
     37e:	2f 93       	push	r18
     380:	3f 93       	push	r19
     382:	4f 93       	push	r20
     384:	5f 93       	push	r21
     386:	6f 93       	push	r22
     388:	7f 93       	push	r23
     38a:	8f 93       	push	r24
     38c:	9f 93       	push	r25
     38e:	af 93       	push	r26
     390:	bf 93       	push	r27
     392:	ef 93       	push	r30
     394:	ff 93       	push	r31
     396:	c0 90 a0 01 	lds	r12, 0x01A0	; 0x8001a0 <tempo_ms>
     39a:	d0 90 a1 01 	lds	r13, 0x01A1	; 0x8001a1 <tempo_ms+0x1>
     39e:	e0 90 a2 01 	lds	r14, 0x01A2	; 0x8001a2 <tempo_ms+0x2>
     3a2:	f0 90 a3 01 	lds	r15, 0x01A3	; 0x8001a3 <tempo_ms+0x3>
     3a6:	8f ef       	ldi	r24, 0xFF	; 255
     3a8:	c8 1a       	sub	r12, r24
     3aa:	d8 0a       	sbc	r13, r24
     3ac:	e8 0a       	sbc	r14, r24
     3ae:	f8 0a       	sbc	r15, r24
     3b0:	c0 92 a0 01 	sts	0x01A0, r12	; 0x8001a0 <tempo_ms>
     3b4:	d0 92 a1 01 	sts	0x01A1, r13	; 0x8001a1 <tempo_ms+0x1>
     3b8:	e0 92 a2 01 	sts	0x01A2, r14	; 0x8001a2 <tempo_ms+0x2>
     3bc:	f0 92 a3 01 	sts	0x01A3, r15	; 0x8001a3 <tempo_ms+0x3>
     3c0:	c7 01       	movw	r24, r14
     3c2:	b6 01       	movw	r22, r12
     3c4:	25 e0       	ldi	r18, 0x05	; 5
     3c6:	30 e0       	ldi	r19, 0x00	; 0
     3c8:	40 e0       	ldi	r20, 0x00	; 0
     3ca:	50 e0       	ldi	r21, 0x00	; 0
     3cc:	0e 94 67 11 	call	0x22ce	; 0x22ce <__udivmodsi4>
     3d0:	67 2b       	or	r22, r23
     3d2:	68 2b       	or	r22, r24
     3d4:	69 2b       	or	r22, r25
     3d6:	19 f4       	brne	.+6      	; 0x3de <__vector_14+0x72>
     3d8:	81 e0       	ldi	r24, 0x01	; 1
     3da:	80 93 af 01 	sts	0x01AF, r24	; 0x8001af <flag_5ms>
     3de:	c7 01       	movw	r24, r14
     3e0:	b6 01       	movw	r22, r12
     3e2:	24 ef       	ldi	r18, 0xF4	; 244
     3e4:	31 e0       	ldi	r19, 0x01	; 1
     3e6:	40 e0       	ldi	r20, 0x00	; 0
     3e8:	50 e0       	ldi	r21, 0x00	; 0
     3ea:	0e 94 67 11 	call	0x22ce	; 0x22ce <__udivmodsi4>
     3ee:	67 2b       	or	r22, r23
     3f0:	68 2b       	or	r22, r24
     3f2:	69 2b       	or	r22, r25
     3f4:	19 f4       	brne	.+6      	; 0x3fc <__vector_14+0x90>
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	80 93 ae 01 	sts	0x01AE, r24	; 0x8001ae <flag_500ms>
     3fc:	ff 91       	pop	r31
     3fe:	ef 91       	pop	r30
     400:	bf 91       	pop	r27
     402:	af 91       	pop	r26
     404:	9f 91       	pop	r25
     406:	8f 91       	pop	r24
     408:	7f 91       	pop	r23
     40a:	6f 91       	pop	r22
     40c:	5f 91       	pop	r21
     40e:	4f 91       	pop	r20
     410:	3f 91       	pop	r19
     412:	2f 91       	pop	r18
     414:	ff 90       	pop	r15
     416:	ef 90       	pop	r14
     418:	df 90       	pop	r13
     41a:	cf 90       	pop	r12
     41c:	0f 90       	pop	r0
     41e:	0f be       	out	0x3f, r0	; 63
     420:	0f 90       	pop	r0
     422:	1f 90       	pop	r1
     424:	18 95       	reti

00000426 <__vector_1>:
     426:	1f 92       	push	r1
     428:	0f 92       	push	r0
     42a:	0f b6       	in	r0, 0x3f	; 63
     42c:	0f 92       	push	r0
     42e:	11 24       	eor	r1, r1
     430:	8f 92       	push	r8
     432:	9f 92       	push	r9
     434:	af 92       	push	r10
     436:	bf 92       	push	r11
     438:	cf 92       	push	r12
     43a:	df 92       	push	r13
     43c:	ef 92       	push	r14
     43e:	ff 92       	push	r15
     440:	2f 93       	push	r18
     442:	3f 93       	push	r19
     444:	4f 93       	push	r20
     446:	5f 93       	push	r21
     448:	6f 93       	push	r22
     44a:	7f 93       	push	r23
     44c:	8f 93       	push	r24
     44e:	9f 93       	push	r25
     450:	af 93       	push	r26
     452:	bf 93       	push	r27
     454:	ef 93       	push	r30
     456:	ff 93       	push	r31
     458:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <cont_5voltas.2582>
     45c:	85 30       	cpi	r24, 0x05	; 5
     45e:	b9 f5       	brne	.+110    	; 0x4ce <__vector_1+0xa8>
     460:	80 90 a0 01 	lds	r8, 0x01A0	; 0x8001a0 <tempo_ms>
     464:	90 90 a1 01 	lds	r9, 0x01A1	; 0x8001a1 <tempo_ms+0x1>
     468:	a0 90 a2 01 	lds	r10, 0x01A2	; 0x8001a2 <tempo_ms+0x2>
     46c:	b0 90 a3 01 	lds	r11, 0x01A3	; 0x8001a3 <tempo_ms+0x3>
     470:	80 91 79 01 	lds	r24, 0x0179	; 0x800179 <tempo_ms_anterior.2583>
     474:	90 91 7a 01 	lds	r25, 0x017A	; 0x80017a <tempo_ms_anterior.2583+0x1>
     478:	64 01       	movw	r12, r8
     47a:	c8 1a       	sub	r12, r24
     47c:	d9 0a       	sbc	r13, r25
     47e:	e1 2c       	mov	r14, r1
     480:	f1 2c       	mov	r15, r1
     482:	60 ee       	ldi	r22, 0xE0	; 224
     484:	73 e9       	ldi	r23, 0x93	; 147
     486:	84 e0       	ldi	r24, 0x04	; 4
     488:	90 e0       	ldi	r25, 0x00	; 0
     48a:	a7 01       	movw	r20, r14
     48c:	96 01       	movw	r18, r12
     48e:	0e 94 89 11 	call	0x2312	; 0x2312 <__divmodsi4>
     492:	30 93 ad 01 	sts	0x01AD, r19	; 0x8001ad <RPM_motor+0x1>
     496:	20 93 ac 01 	sts	0x01AC, r18	; 0x8001ac <RPM_motor>
     49a:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     49e:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4a2:	a5 e3       	ldi	r26, 0x35	; 53
     4a4:	b2 e0       	ldi	r27, 0x02	; 2
     4a6:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     4aa:	a7 01       	movw	r20, r14
     4ac:	96 01       	movw	r18, r12
     4ae:	0e 94 67 11 	call	0x22ce	; 0x22ce <__udivmodsi4>
     4b2:	30 93 03 01 	sts	0x0103, r19	; 0x800103 <Velocidade_carro_KmH+0x1>
     4b6:	20 93 02 01 	sts	0x0102, r18	; 0x800102 <Velocidade_carro_KmH>
     4ba:	80 92 79 01 	sts	0x0179, r8	; 0x800179 <tempo_ms_anterior.2583>
     4be:	90 92 7a 01 	sts	0x017A, r9	; 0x80017a <tempo_ms_anterior.2583+0x1>
     4c2:	a0 92 7b 01 	sts	0x017B, r10	; 0x80017b <tempo_ms_anterior.2583+0x2>
     4c6:	b0 92 7c 01 	sts	0x017C, r11	; 0x80017c <tempo_ms_anterior.2583+0x3>
     4ca:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <cont_5voltas.2582>
     4ce:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <cont_5voltas.2582>
     4d2:	8f 5f       	subi	r24, 0xFF	; 255
     4d4:	80 93 7d 01 	sts	0x017D, r24	; 0x80017d <cont_5voltas.2582>
     4d8:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4dc:	70 91 01 01 	lds	r23, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4e0:	80 e0       	ldi	r24, 0x00	; 0
     4e2:	90 e0       	ldi	r25, 0x00	; 0
     4e4:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__floatunsisf>
     4e8:	26 e5       	ldi	r18, 0x56	; 86
     4ea:	3e e0       	ldi	r19, 0x0E	; 14
     4ec:	49 e4       	ldi	r20, 0x49	; 73
     4ee:	50 e4       	ldi	r21, 0x40	; 64
     4f0:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__mulsf3>
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e5       	ldi	r19, 0x50	; 80
     4f8:	43 ec       	ldi	r20, 0xC3	; 195
     4fa:	57 e4       	ldi	r21, 0x47	; 71
     4fc:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__divsf3>
     500:	4b 01       	movw	r8, r22
     502:	5c 01       	movw	r10, r24
     504:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <Distancia_hodometro_km>
     508:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <Distancia_hodometro_km+0x1>
     50c:	40 91 96 01 	lds	r20, 0x0196	; 0x800196 <Distancia_hodometro_km+0x2>
     510:	50 91 97 01 	lds	r21, 0x0197	; 0x800197 <Distancia_hodometro_km+0x3>
     514:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__addsf3>
     518:	6b 01       	movw	r12, r22
     51a:	7c 01       	movw	r14, r24
     51c:	60 93 94 01 	sts	0x0194, r22	; 0x800194 <Distancia_hodometro_km>
     520:	70 93 95 01 	sts	0x0195, r23	; 0x800195 <Distancia_hodometro_km+0x1>
     524:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <Distancia_hodometro_km+0x2>
     528:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <Distancia_hodometro_km+0x3>
     52c:	a5 01       	movw	r20, r10
     52e:	94 01       	movw	r18, r8
     530:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <kilometragemAtual>
     534:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <kilometragemAtual+0x1>
     538:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <kilometragemAtual+0x2>
     53c:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <kilometragemAtual+0x3>
     540:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__addsf3>
     544:	60 93 90 01 	sts	0x0190, r22	; 0x800190 <kilometragemAtual>
     548:	70 93 91 01 	sts	0x0191, r23	; 0x800191 <kilometragemAtual+0x1>
     54c:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <kilometragemAtual+0x2>
     550:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <kilometragemAtual+0x3>
     554:	c7 01       	movw	r24, r14
     556:	b6 01       	movw	r22, r12
     558:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     55c:	80 e0       	ldi	r24, 0x00	; 0
     55e:	90 e0       	ldi	r25, 0x00	; 0
     560:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     564:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <kilometragemAtual>
     568:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <kilometragemAtual+0x1>
     56c:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <kilometragemAtual+0x2>
     570:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <kilometragemAtual+0x3>
     574:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     578:	83 e0       	ldi	r24, 0x03	; 3
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     580:	ff 91       	pop	r31
     582:	ef 91       	pop	r30
     584:	bf 91       	pop	r27
     586:	af 91       	pop	r26
     588:	9f 91       	pop	r25
     58a:	8f 91       	pop	r24
     58c:	7f 91       	pop	r23
     58e:	6f 91       	pop	r22
     590:	5f 91       	pop	r21
     592:	4f 91       	pop	r20
     594:	3f 91       	pop	r19
     596:	2f 91       	pop	r18
     598:	ff 90       	pop	r15
     59a:	ef 90       	pop	r14
     59c:	df 90       	pop	r13
     59e:	cf 90       	pop	r12
     5a0:	bf 90       	pop	r11
     5a2:	af 90       	pop	r10
     5a4:	9f 90       	pop	r9
     5a6:	8f 90       	pop	r8
     5a8:	0f 90       	pop	r0
     5aa:	0f be       	out	0x3f, r0	; 63
     5ac:	0f 90       	pop	r0
     5ae:	1f 90       	pop	r1
     5b0:	18 95       	reti

000005b2 <__vector_5>:
     5b2:	1f 92       	push	r1
     5b4:	0f 92       	push	r0
     5b6:	0f b6       	in	r0, 0x3f	; 63
     5b8:	0f 92       	push	r0
     5ba:	11 24       	eor	r1, r1
     5bc:	2f 93       	push	r18
     5be:	3f 93       	push	r19
     5c0:	4f 93       	push	r20
     5c2:	5f 93       	push	r21
     5c4:	6f 93       	push	r22
     5c6:	7f 93       	push	r23
     5c8:	8f 93       	push	r24
     5ca:	9f 93       	push	r25
     5cc:	af 93       	push	r26
     5ce:	bf 93       	push	r27
     5d0:	ef 93       	push	r30
     5d2:	ff 93       	push	r31
     5d4:	4c 99       	sbic	0x09, 4	; 9
     5d6:	12 c0       	rjmp	.+36     	; 0x5fc <__vector_5+0x4a>
     5d8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5dc:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5e0:	88 3c       	cpi	r24, 0xC8	; 200
     5e2:	91 05       	cpc	r25, r1
     5e4:	28 f4       	brcc	.+10     	; 0x5f0 <__vector_5+0x3e>
     5e6:	01 96       	adiw	r24, 0x01	; 1
     5e8:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     5ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     5f0:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     5f4:	81 e0       	ldi	r24, 0x01	; 1
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     5fc:	4d 99       	sbic	0x09, 5	; 9
     5fe:	12 c0       	rjmp	.+36     	; 0x624 <__vector_5+0x72>
     600:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     604:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     608:	82 30       	cpi	r24, 0x02	; 2
     60a:	91 05       	cpc	r25, r1
     60c:	28 f0       	brcs	.+10     	; 0x618 <__vector_5+0x66>
     60e:	01 97       	sbiw	r24, 0x01	; 1
     610:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     614:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     618:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     61c:	81 e0       	ldi	r24, 0x01	; 1
     61e:	90 e0       	ldi	r25, 0x00	; 0
     620:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     624:	89 b1       	in	r24, 0x09	; 9
     626:	80 73       	andi	r24, 0x30	; 48
     628:	59 f4       	brne	.+22     	; 0x640 <__vector_5+0x8e>
     62a:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <tela>
     62e:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <tela+0x1>
     632:	01 96       	adiw	r24, 0x01	; 1
     634:	81 70       	andi	r24, 0x01	; 1
     636:	99 27       	eor	r25, r25
     638:	90 93 81 01 	sts	0x0181, r25	; 0x800181 <tela+0x1>
     63c:	80 93 80 01 	sts	0x0180, r24	; 0x800180 <tela>
     640:	4e 99       	sbic	0x09, 6	; 9
     642:	05 c0       	rjmp	.+10     	; 0x64e <__vector_5+0x9c>
     644:	10 92 ab 01 	sts	0x01AB, r1	; 0x8001ab <Modo_operacao+0x1>
     648:	10 92 aa 01 	sts	0x01AA, r1	; 0x8001aa <Modo_operacao>
     64c:	06 c0       	rjmp	.+12     	; 0x65a <__vector_5+0xa8>
     64e:	81 e0       	ldi	r24, 0x01	; 1
     650:	90 e0       	ldi	r25, 0x00	; 0
     652:	90 93 ab 01 	sts	0x01AB, r25	; 0x8001ab <Modo_operacao+0x1>
     656:	80 93 aa 01 	sts	0x01AA, r24	; 0x8001aa <Modo_operacao>
     65a:	4f 99       	sbic	0x09, 7	; 9
     65c:	07 c0       	rjmp	.+14     	; 0x66c <__vector_5+0xba>
     65e:	81 e0       	ldi	r24, 0x01	; 1
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	90 93 a9 01 	sts	0x01A9, r25	; 0x8001a9 <Modo_operacao1+0x1>
     666:	80 93 a8 01 	sts	0x01A8, r24	; 0x8001a8 <Modo_operacao1>
     66a:	04 c0       	rjmp	.+8      	; 0x674 <__vector_5+0xc2>
     66c:	10 92 a9 01 	sts	0x01A9, r1	; 0x8001a9 <Modo_operacao1+0x1>
     670:	10 92 a8 01 	sts	0x01A8, r1	; 0x8001a8 <Modo_operacao1>
     674:	ff 91       	pop	r31
     676:	ef 91       	pop	r30
     678:	bf 91       	pop	r27
     67a:	af 91       	pop	r26
     67c:	9f 91       	pop	r25
     67e:	8f 91       	pop	r24
     680:	7f 91       	pop	r23
     682:	6f 91       	pop	r22
     684:	5f 91       	pop	r21
     686:	4f 91       	pop	r20
     688:	3f 91       	pop	r19
     68a:	2f 91       	pop	r18
     68c:	0f 90       	pop	r0
     68e:	0f be       	out	0x3f, r0	; 63
     690:	0f 90       	pop	r0
     692:	1f 90       	pop	r1
     694:	18 95       	reti

00000696 <__vector_10>:
     696:	1f 92       	push	r1
     698:	0f 92       	push	r0
     69a:	0f b6       	in	r0, 0x3f	; 63
     69c:	0f 92       	push	r0
     69e:	11 24       	eor	r1, r1
     6a0:	2f 93       	push	r18
     6a2:	3f 93       	push	r19
     6a4:	4f 93       	push	r20
     6a6:	5f 93       	push	r21
     6a8:	6f 93       	push	r22
     6aa:	7f 93       	push	r23
     6ac:	8f 93       	push	r24
     6ae:	9f 93       	push	r25
     6b0:	af 93       	push	r26
     6b2:	bf 93       	push	r27
     6b4:	ef 93       	push	r30
     6b6:	ff 93       	push	r31
     6b8:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
     6bc:	86 ff       	sbrs	r24, 6
     6be:	0f c0       	rjmp	.+30     	; 0x6de <__vector_10+0x48>
     6c0:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     6c4:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     6c8:	a0 e0       	ldi	r26, 0x00	; 0
     6ca:	b0 e0       	ldi	r27, 0x00	; 0
     6cc:	80 93 b4 01 	sts	0x01B4, r24	; 0x8001b4 <tempo_borda_subida>
     6d0:	90 93 b5 01 	sts	0x01B5, r25	; 0x8001b5 <tempo_borda_subida+0x1>
     6d4:	a0 93 b6 01 	sts	0x01B6, r26	; 0x8001b6 <tempo_borda_subida+0x2>
     6d8:	b0 93 b7 01 	sts	0x01B7, r27	; 0x8001b7 <tempo_borda_subida+0x3>
     6dc:	22 c0       	rjmp	.+68     	; 0x722 <__vector_10+0x8c>
     6de:	80 91 86 00 	lds	r24, 0x0086	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     6e2:	90 91 87 00 	lds	r25, 0x0087	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     6e6:	a0 e0       	ldi	r26, 0x00	; 0
     6e8:	b0 e0       	ldi	r27, 0x00	; 0
     6ea:	40 91 b4 01 	lds	r20, 0x01B4	; 0x8001b4 <tempo_borda_subida>
     6ee:	50 91 b5 01 	lds	r21, 0x01B5	; 0x8001b5 <tempo_borda_subida+0x1>
     6f2:	60 91 b6 01 	lds	r22, 0x01B6	; 0x8001b6 <tempo_borda_subida+0x2>
     6f6:	70 91 b7 01 	lds	r23, 0x01B7	; 0x8001b7 <tempo_borda_subida+0x3>
     6fa:	84 1b       	sub	r24, r20
     6fc:	95 0b       	sbc	r25, r21
     6fe:	a6 0b       	sbc	r26, r22
     700:	b7 0b       	sbc	r27, r23
     702:	88 0f       	add	r24, r24
     704:	99 1f       	adc	r25, r25
     706:	aa 1f       	adc	r26, r26
     708:	bb 1f       	adc	r27, r27
     70a:	88 0f       	add	r24, r24
     70c:	99 1f       	adc	r25, r25
     70e:	aa 1f       	adc	r26, r26
     710:	bb 1f       	adc	r27, r27
     712:	80 93 b0 01 	sts	0x01B0, r24	; 0x8001b0 <tempo_delta>
     716:	90 93 b1 01 	sts	0x01B1, r25	; 0x8001b1 <tempo_delta+0x1>
     71a:	a0 93 b2 01 	sts	0x01B2, r26	; 0x8001b2 <tempo_delta+0x2>
     71e:	b0 93 b3 01 	sts	0x01B3, r27	; 0x8001b3 <tempo_delta+0x3>
     722:	60 91 b0 01 	lds	r22, 0x01B0	; 0x8001b0 <tempo_delta>
     726:	70 91 b1 01 	lds	r23, 0x01B1	; 0x8001b1 <tempo_delta+0x1>
     72a:	80 91 b2 01 	lds	r24, 0x01B2	; 0x8001b2 <tempo_delta+0x2>
     72e:	90 91 b3 01 	lds	r25, 0x01B3	; 0x8001b3 <tempo_delta+0x3>
     732:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__floatunsisf>
     736:	21 ee       	ldi	r18, 0xE1	; 225
     738:	3a e7       	ldi	r19, 0x7A	; 122
     73a:	48 e6       	ldi	r20, 0x68	; 104
     73c:	51 e4       	ldi	r21, 0x41	; 65
     73e:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__divsf3>
     742:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     746:	60 93 98 01 	sts	0x0198, r22	; 0x800198 <distancia_sonar>
     74a:	70 93 99 01 	sts	0x0199, r23	; 0x800199 <distancia_sonar+0x1>
     74e:	80 93 9a 01 	sts	0x019A, r24	; 0x80019a <distancia_sonar+0x2>
     752:	90 93 9b 01 	sts	0x019B, r25	; 0x80019b <distancia_sonar+0x3>
     756:	e1 e8       	ldi	r30, 0x81	; 129
     758:	f0 e0       	ldi	r31, 0x00	; 0
     75a:	90 81       	ld	r25, Z
     75c:	80 e4       	ldi	r24, 0x40	; 64
     75e:	89 27       	eor	r24, r25
     760:	80 83       	st	Z, r24
     762:	ff 91       	pop	r31
     764:	ef 91       	pop	r30
     766:	bf 91       	pop	r27
     768:	af 91       	pop	r26
     76a:	9f 91       	pop	r25
     76c:	8f 91       	pop	r24
     76e:	7f 91       	pop	r23
     770:	6f 91       	pop	r22
     772:	5f 91       	pop	r21
     774:	4f 91       	pop	r20
     776:	3f 91       	pop	r19
     778:	2f 91       	pop	r18
     77a:	0f 90       	pop	r0
     77c:	0f be       	out	0x3f, r0	; 63
     77e:	0f 90       	pop	r0
     780:	1f 90       	pop	r1
     782:	18 95       	reti

00000784 <__vector_21>:
     784:	1f 92       	push	r1
     786:	0f 92       	push	r0
     788:	0f b6       	in	r0, 0x3f	; 63
     78a:	0f 92       	push	r0
     78c:	11 24       	eor	r1, r1
     78e:	8f 92       	push	r8
     790:	9f 92       	push	r9
     792:	af 92       	push	r10
     794:	bf 92       	push	r11
     796:	cf 92       	push	r12
     798:	df 92       	push	r13
     79a:	ef 92       	push	r14
     79c:	ff 92       	push	r15
     79e:	0f 93       	push	r16
     7a0:	1f 93       	push	r17
     7a2:	2f 93       	push	r18
     7a4:	3f 93       	push	r19
     7a6:	4f 93       	push	r20
     7a8:	5f 93       	push	r21
     7aa:	6f 93       	push	r22
     7ac:	7f 93       	push	r23
     7ae:	8f 93       	push	r24
     7b0:	9f 93       	push	r25
     7b2:	af 93       	push	r26
     7b4:	bf 93       	push	r27
     7b6:	ef 93       	push	r30
     7b8:	ff 93       	push	r31
     7ba:	80 91 a0 01 	lds	r24, 0x01A0	; 0x8001a0 <tempo_ms>
     7be:	90 91 a1 01 	lds	r25, 0x01A1	; 0x8001a1 <tempo_ms+0x1>
     7c2:	a0 91 a2 01 	lds	r26, 0x01A2	; 0x8001a2 <tempo_ms+0x2>
     7c6:	b0 91 a3 01 	lds	r27, 0x01A3	; 0x8001a3 <tempo_ms+0x3>
     7ca:	40 91 9c 01 	lds	r20, 0x019C	; 0x80019c <tempo_novo>
     7ce:	50 91 9d 01 	lds	r21, 0x019D	; 0x80019d <tempo_novo+0x1>
     7d2:	60 91 9e 01 	lds	r22, 0x019E	; 0x80019e <tempo_novo+0x2>
     7d6:	70 91 9f 01 	lds	r23, 0x019F	; 0x80019f <tempo_novo+0x3>
     7da:	8c 01       	movw	r16, r24
     7dc:	9d 01       	movw	r18, r26
     7de:	04 1b       	sub	r16, r20
     7e0:	15 0b       	sbc	r17, r21
     7e2:	26 0b       	sbc	r18, r22
     7e4:	37 0b       	sbc	r19, r23
     7e6:	03 33       	cpi	r16, 0x33	; 51
     7e8:	11 05       	cpc	r17, r1
     7ea:	21 05       	cpc	r18, r1
     7ec:	31 05       	cpc	r19, r1
     7ee:	40 f0       	brcs	.+16     	; 0x800 <__DATA_REGION_LENGTH__>
     7f0:	80 93 9c 01 	sts	0x019C, r24	; 0x80019c <tempo_novo>
     7f4:	90 93 9d 01 	sts	0x019D, r25	; 0x80019d <tempo_novo+0x1>
     7f8:	a0 93 9e 01 	sts	0x019E, r26	; 0x80019e <tempo_novo+0x2>
     7fc:	b0 93 9f 01 	sts	0x019F, r27	; 0x80019f <tempo_novo+0x3>
     800:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <adc_flag>
     804:	81 30       	cpi	r24, 0x01	; 1
     806:	a1 f5       	brne	.+104    	; 0x870 <__DATA_REGION_LENGTH__+0x70>
     808:	80 e4       	ldi	r24, 0x40	; 64
     80a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     80e:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distancia_sonar>
     812:	90 91 99 01 	lds	r25, 0x0199	; 0x800199 <distancia_sonar+0x1>
     816:	a0 91 9a 01 	lds	r26, 0x019A	; 0x80019a <distancia_sonar+0x2>
     81a:	b0 91 9b 01 	lds	r27, 0x019B	; 0x80019b <distancia_sonar+0x3>
     81e:	8d 32       	cpi	r24, 0x2D	; 45
     820:	11 e0       	ldi	r17, 0x01	; 1
     822:	91 07       	cpc	r25, r17
     824:	a1 05       	cpc	r26, r1
     826:	b1 05       	cpc	r27, r1
     828:	78 f0       	brcs	.+30     	; 0x848 <__DATA_REGION_LENGTH__+0x48>
     82a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     82e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     832:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <leitura_ADC+0x1>
     836:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <leitura_ADC>
     83a:	96 95       	lsr	r25
     83c:	87 95       	ror	r24
     83e:	96 95       	lsr	r25
     840:	87 95       	ror	r24
     842:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     846:	10 c0       	rjmp	.+32     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
     848:	8c 32       	cpi	r24, 0x2C	; 44
     84a:	91 40       	sbci	r25, 0x01	; 1
     84c:	a1 05       	cpc	r26, r1
     84e:	b1 05       	cpc	r27, r1
     850:	58 f4       	brcc	.+22     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
     852:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     856:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     85a:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <leitura_ADC+0x1>
     85e:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <leitura_ADC>
     862:	8a e1       	ldi	r24, 0x1A	; 26
     864:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
     868:	82 e0       	ldi	r24, 0x02	; 2
     86a:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <adc_flag>
     86e:	72 c0       	rjmp	.+228    	; 0x954 <__stack+0x55>
     870:	82 30       	cpi	r24, 0x02	; 2
     872:	a9 f4       	brne	.+42     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
     874:	81 e4       	ldi	r24, 0x41	; 65
     876:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     87a:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     87e:	30 91 79 00 	lds	r19, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     882:	49 e1       	ldi	r20, 0x19	; 25
     884:	42 9f       	mul	r20, r18
     886:	c0 01       	movw	r24, r0
     888:	43 9f       	mul	r20, r19
     88a:	90 0d       	add	r25, r0
     88c:	11 24       	eor	r1, r1
     88e:	90 93 84 01 	sts	0x0184, r25	; 0x800184 <leitura_ADC1>
     892:	10 92 85 01 	sts	0x0185, r1	; 0x800185 <leitura_ADC1+0x1>
     896:	83 e0       	ldi	r24, 0x03	; 3
     898:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <adc_flag>
     89c:	5b c0       	rjmp	.+182    	; 0x954 <__stack+0x55>
     89e:	83 30       	cpi	r24, 0x03	; 3
     8a0:	09 f0       	breq	.+2      	; 0x8a4 <__DATA_REGION_LENGTH__+0xa4>
     8a2:	58 c0       	rjmp	.+176    	; 0x954 <__stack+0x55>
     8a4:	82 e4       	ldi	r24, 0x42	; 66
     8a6:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     8aa:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7f8078>
     8ae:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     8b2:	80 e0       	ldi	r24, 0x00	; 0
     8b4:	90 e0       	ldi	r25, 0x00	; 0
     8b6:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__floatunsisf>
     8ba:	23 ee       	ldi	r18, 0xE3	; 227
     8bc:	35 ea       	ldi	r19, 0xA5	; 165
     8be:	4b e9       	ldi	r20, 0x9B	; 155
     8c0:	5b e3       	ldi	r21, 0x3B	; 59
     8c2:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__mulsf3>
     8c6:	25 e0       	ldi	r18, 0x05	; 5
     8c8:	33 ea       	ldi	r19, 0xA3	; 163
     8ca:	42 e9       	ldi	r20, 0x92	; 146
     8cc:	5c e3       	ldi	r21, 0x3C	; 60
     8ce:	0e 94 5f 0f 	call	0x1ebe	; 0x1ebe <__addsf3>
     8d2:	6b 01       	movw	r12, r22
     8d4:	7c 01       	movw	r14, r24
     8d6:	60 93 8c 01 	sts	0x018C, r22	; 0x80018c <apoio>
     8da:	70 93 8d 01 	sts	0x018D, r23	; 0x80018d <apoio+0x1>
     8de:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <apoio+0x2>
     8e2:	90 93 8f 01 	sts	0x018F, r25	; 0x80018f <apoio+0x3>
     8e6:	20 e0       	ldi	r18, 0x00	; 0
     8e8:	30 e0       	ldi	r19, 0x00	; 0
     8ea:	4a e7       	ldi	r20, 0x7A	; 122
     8ec:	54 e4       	ldi	r21, 0x44	; 68
     8ee:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__mulsf3>
     8f2:	4b 01       	movw	r8, r22
     8f4:	5c 01       	movw	r10, r24
     8f6:	a7 01       	movw	r20, r14
     8f8:	96 01       	movw	r18, r12
     8fa:	60 e0       	ldi	r22, 0x00	; 0
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	80 ea       	ldi	r24, 0xA0	; 160
     900:	90 e4       	ldi	r25, 0x40	; 64
     902:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__subsf3>
     906:	9b 01       	movw	r18, r22
     908:	ac 01       	movw	r20, r24
     90a:	c5 01       	movw	r24, r10
     90c:	b4 01       	movw	r22, r8
     90e:	0e 94 cb 0f 	call	0x1f96	; 0x1f96 <__divsf3>
     912:	60 93 88 01 	sts	0x0188, r22	; 0x800188 <apoio1>
     916:	70 93 89 01 	sts	0x0189, r23	; 0x800189 <apoio1+0x1>
     91a:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <apoio1+0x2>
     91e:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <apoio1+0x3>
     922:	21 e7       	ldi	r18, 0x71	; 113
     924:	3d e3       	ldi	r19, 0x3D	; 61
     926:	4a e2       	ldi	r20, 0x2A	; 42
     928:	50 e4       	ldi	r21, 0x40	; 64
     92a:	0e 94 fa 10 	call	0x21f4	; 0x21f4 <__mulsf3>
     92e:	23 e3       	ldi	r18, 0x33	; 51
     930:	33 ed       	ldi	r19, 0xD3	; 211
     932:	46 e8       	ldi	r20, 0x86	; 134
     934:	53 e4       	ldi	r21, 0x43	; 67
     936:	0e 94 5e 0f 	call	0x1ebc	; 0x1ebc <__subsf3>
     93a:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     93e:	60 93 a4 01 	sts	0x01A4, r22	; 0x8001a4 <leitura_ADC2>
     942:	70 93 a5 01 	sts	0x01A5, r23	; 0x8001a5 <leitura_ADC2+0x1>
     946:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <leitura_ADC2+0x2>
     94a:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <leitura_ADC2+0x3>
     94e:	81 e0       	ldi	r24, 0x01	; 1
     950:	80 93 04 01 	sts	0x0104, r24	; 0x800104 <adc_flag>
     954:	ff 91       	pop	r31
     956:	ef 91       	pop	r30
     958:	bf 91       	pop	r27
     95a:	af 91       	pop	r26
     95c:	9f 91       	pop	r25
     95e:	8f 91       	pop	r24
     960:	7f 91       	pop	r23
     962:	6f 91       	pop	r22
     964:	5f 91       	pop	r21
     966:	4f 91       	pop	r20
     968:	3f 91       	pop	r19
     96a:	2f 91       	pop	r18
     96c:	1f 91       	pop	r17
     96e:	0f 91       	pop	r16
     970:	ff 90       	pop	r15
     972:	ef 90       	pop	r14
     974:	df 90       	pop	r13
     976:	cf 90       	pop	r12
     978:	bf 90       	pop	r11
     97a:	af 90       	pop	r10
     97c:	9f 90       	pop	r9
     97e:	8f 90       	pop	r8
     980:	0f 90       	pop	r0
     982:	0f be       	out	0x3f, r0	; 63
     984:	0f 90       	pop	r0
     986:	1f 90       	pop	r1
     988:	18 95       	reti

0000098a <USART_Init>:
     98a:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     98e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     992:	88 e9       	ldi	r24, 0x98	; 152
     994:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7f80c1>
     998:	86 e0       	ldi	r24, 0x06	; 6
     99a:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7f80c2>
     99e:	08 95       	ret

000009a0 <USART_Transmit>:
     9a0:	e0 ec       	ldi	r30, 0xC0	; 192
     9a2:	f0 e0       	ldi	r31, 0x00	; 0
     9a4:	90 81       	ld	r25, Z
     9a6:	95 ff       	sbrs	r25, 5
     9a8:	fd cf       	rjmp	.-6      	; 0x9a4 <USART_Transmit+0x4>
     9aa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     9ae:	08 95       	ret

000009b0 <__vector_18>:
     9b0:	1f 92       	push	r1
     9b2:	0f 92       	push	r0
     9b4:	0f b6       	in	r0, 0x3f	; 63
     9b6:	0f 92       	push	r0
     9b8:	11 24       	eor	r1, r1
     9ba:	2f 93       	push	r18
     9bc:	3f 93       	push	r19
     9be:	4f 93       	push	r20
     9c0:	5f 93       	push	r21
     9c2:	6f 93       	push	r22
     9c4:	7f 93       	push	r23
     9c6:	8f 93       	push	r24
     9c8:	9f 93       	push	r25
     9ca:	af 93       	push	r26
     9cc:	bf 93       	push	r27
     9ce:	ef 93       	push	r30
     9d0:	ff 93       	push	r31
     9d2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
     9d6:	84 36       	cpi	r24, 0x64	; 100
     9d8:	91 f4       	brne	.+36     	; 0x9fe <__vector_18+0x4e>
     9da:	60 91 a4 01 	lds	r22, 0x01A4	; 0x8001a4 <leitura_ADC2>
     9de:	82 e0       	ldi	r24, 0x02	; 2
     9e0:	90 e0       	ldi	r25, 0x00	; 0
     9e2:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     9e6:	82 e0       	ldi	r24, 0x02	; 2
     9e8:	90 e0       	ldi	r25, 0x00	; 0
     9ea:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <eeprom_read_byte>
     9ee:	90 e0       	ldi	r25, 0x00	; 0
     9f0:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <USART_Transmit>
     9f4:	85 e0       	ldi	r24, 0x05	; 5
     9f6:	91 e0       	ldi	r25, 0x01	; 1
     9f8:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <USART_Transmit>
     9fc:	08 c0       	rjmp	.+16     	; 0xa0e <__vector_18+0x5e>
     9fe:	8c 36       	cpi	r24, 0x6C	; 108
     a00:	31 f4       	brne	.+12     	; 0xa0e <__vector_18+0x5e>
     a02:	60 91 82 01 	lds	r22, 0x0182	; 0x800182 <limpaeeprom>
     a06:	82 e0       	ldi	r24, 0x02	; 2
     a08:	90 e0       	ldi	r25, 0x00	; 0
     a0a:	0e 94 72 14 	call	0x28e4	; 0x28e4 <eeprom_write_byte>
     a0e:	ff 91       	pop	r31
     a10:	ef 91       	pop	r30
     a12:	bf 91       	pop	r27
     a14:	af 91       	pop	r26
     a16:	9f 91       	pop	r25
     a18:	8f 91       	pop	r24
     a1a:	7f 91       	pop	r23
     a1c:	6f 91       	pop	r22
     a1e:	5f 91       	pop	r21
     a20:	4f 91       	pop	r20
     a22:	3f 91       	pop	r19
     a24:	2f 91       	pop	r18
     a26:	0f 90       	pop	r0
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	0f 90       	pop	r0
     a2c:	1f 90       	pop	r1
     a2e:	18 95       	reti

00000a30 <anima_velocidade>:

void anima_velocidade(uint16_t velocidade_carro, uint8_t *flag_disparo)
{
     a30:	cf 93       	push	r28
     a32:	ac 01       	movw	r20, r24
     a34:	fb 01       	movw	r30, r22
	static int8_t cont_dig = 0;
	if(*flag_disparo)
     a36:	80 81       	ld	r24, Z
     a38:	88 23       	and	r24, r24
     a3a:	09 f4       	brne	.+2      	; 0xa3e <anima_velocidade+0xe>
     a3c:	90 c0       	rjmp	.+288    	; 0xb5e <anima_velocidade+0x12e>
	{
		switch (cont_dig)
     a3e:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     a42:	81 30       	cpi	r24, 0x01	; 1
     a44:	41 f1       	breq	.+80     	; 0xa96 <anima_velocidade+0x66>
     a46:	82 30       	cpi	r24, 0x02	; 2
     a48:	09 f4       	brne	.+2      	; 0xa4c <anima_velocidade+0x1c>
     a4a:	52 c0       	rjmp	.+164    	; 0xaf0 <anima_velocidade+0xc0>
     a4c:	81 11       	cpse	r24, r1
     a4e:	81 c0       	rjmp	.+258    	; 0xb52 <anima_velocidade+0x122>
		{
			case 0:
				PORTB &= 0b00000001;
     a50:	85 b1       	in	r24, 0x05	; 5
     a52:	81 70       	andi	r24, 0x01	; 1
     a54:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b11000000;
     a56:	85 b1       	in	r24, 0x05	; 5
     a58:	80 6c       	ori	r24, 0xC0	; 192
     a5a:	85 b9       	out	0x05, r24	; 5
				PORTB |= (((velocidade_carro/1)%10) & 0b00011110);
     a5c:	c5 b1       	in	r28, 0x05	; 5
     a5e:	9a 01       	movw	r18, r20
     a60:	ad ec       	ldi	r26, 0xCD	; 205
     a62:	bc ec       	ldi	r27, 0xCC	; 204
     a64:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     a68:	96 95       	lsr	r25
     a6a:	87 95       	ror	r24
     a6c:	96 95       	lsr	r25
     a6e:	87 95       	ror	r24
     a70:	96 95       	lsr	r25
     a72:	87 95       	ror	r24
     a74:	9c 01       	movw	r18, r24
     a76:	22 0f       	add	r18, r18
     a78:	33 1f       	adc	r19, r19
     a7a:	88 0f       	add	r24, r24
     a7c:	99 1f       	adc	r25, r25
     a7e:	88 0f       	add	r24, r24
     a80:	99 1f       	adc	r25, r25
     a82:	88 0f       	add	r24, r24
     a84:	99 1f       	adc	r25, r25
     a86:	82 0f       	add	r24, r18
     a88:	93 1f       	adc	r25, r19
     a8a:	48 1b       	sub	r20, r24
     a8c:	59 0b       	sbc	r21, r25
     a8e:	4e 71       	andi	r20, 0x1E	; 30
     a90:	c4 2b       	or	r28, r20
     a92:	c5 b9       	out	0x05, r28	; 5
				break;
     a94:	5e c0       	rjmp	.+188    	; 0xb52 <anima_velocidade+0x122>
			case 1:
				PORTB &= 0b00000001;
     a96:	85 b1       	in	r24, 0x05	; 5
     a98:	81 70       	andi	r24, 0x01	; 1
     a9a:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b10100000;
     a9c:	85 b1       	in	r24, 0x05	; 5
     a9e:	80 6a       	ori	r24, 0xA0	; 160
     aa0:	85 b9       	out	0x05, r24	; 5
				PORTB |= (((velocidade_carro/10)%10) & 0b00011110);
     aa2:	c5 b1       	in	r28, 0x05	; 5
     aa4:	9a 01       	movw	r18, r20
     aa6:	ad ec       	ldi	r26, 0xCD	; 205
     aa8:	bc ec       	ldi	r27, 0xCC	; 204
     aaa:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     aae:	ac 01       	movw	r20, r24
     ab0:	56 95       	lsr	r21
     ab2:	47 95       	ror	r20
     ab4:	56 95       	lsr	r21
     ab6:	47 95       	ror	r20
     ab8:	56 95       	lsr	r21
     aba:	47 95       	ror	r20
     abc:	9a 01       	movw	r18, r20
     abe:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     ac2:	96 95       	lsr	r25
     ac4:	87 95       	ror	r24
     ac6:	96 95       	lsr	r25
     ac8:	87 95       	ror	r24
     aca:	96 95       	lsr	r25
     acc:	87 95       	ror	r24
     ace:	9c 01       	movw	r18, r24
     ad0:	22 0f       	add	r18, r18
     ad2:	33 1f       	adc	r19, r19
     ad4:	88 0f       	add	r24, r24
     ad6:	99 1f       	adc	r25, r25
     ad8:	88 0f       	add	r24, r24
     ada:	99 1f       	adc	r25, r25
     adc:	88 0f       	add	r24, r24
     ade:	99 1f       	adc	r25, r25
     ae0:	82 0f       	add	r24, r18
     ae2:	93 1f       	adc	r25, r19
     ae4:	48 1b       	sub	r20, r24
     ae6:	59 0b       	sbc	r21, r25
     ae8:	4e 71       	andi	r20, 0x1E	; 30
     aea:	4c 2b       	or	r20, r28
     aec:	45 b9       	out	0x05, r20	; 5
				break;
     aee:	31 c0       	rjmp	.+98     	; 0xb52 <anima_velocidade+0x122>
			case 2:
				PORTB &= 0b00000001;
     af0:	85 b1       	in	r24, 0x05	; 5
     af2:	81 70       	andi	r24, 0x01	; 1
     af4:	85 b9       	out	0x05, r24	; 5
				PORTB |= 0b01100000;
     af6:	85 b1       	in	r24, 0x05	; 5
     af8:	80 66       	ori	r24, 0x60	; 96
     afa:	85 b9       	out	0x05, r24	; 5
				PORTB |= (((velocidade_carro/100)%10) & 0b00011110);
     afc:	c5 b1       	in	r28, 0x05	; 5
     afe:	9a 01       	movw	r18, r20
     b00:	36 95       	lsr	r19
     b02:	27 95       	ror	r18
     b04:	36 95       	lsr	r19
     b06:	27 95       	ror	r18
     b08:	ab e7       	ldi	r26, 0x7B	; 123
     b0a:	b4 e1       	ldi	r27, 0x14	; 20
     b0c:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     b10:	ac 01       	movw	r20, r24
     b12:	56 95       	lsr	r21
     b14:	47 95       	ror	r20
     b16:	9a 01       	movw	r18, r20
     b18:	ad ec       	ldi	r26, 0xCD	; 205
     b1a:	bc ec       	ldi	r27, 0xCC	; 204
     b1c:	0e 94 a8 11 	call	0x2350	; 0x2350 <__umulhisi3>
     b20:	96 95       	lsr	r25
     b22:	87 95       	ror	r24
     b24:	96 95       	lsr	r25
     b26:	87 95       	ror	r24
     b28:	96 95       	lsr	r25
     b2a:	87 95       	ror	r24
     b2c:	9c 01       	movw	r18, r24
     b2e:	22 0f       	add	r18, r18
     b30:	33 1f       	adc	r19, r19
     b32:	88 0f       	add	r24, r24
     b34:	99 1f       	adc	r25, r25
     b36:	88 0f       	add	r24, r24
     b38:	99 1f       	adc	r25, r25
     b3a:	88 0f       	add	r24, r24
     b3c:	99 1f       	adc	r25, r25
     b3e:	82 0f       	add	r24, r18
     b40:	93 1f       	adc	r25, r19
     b42:	48 1b       	sub	r20, r24
     b44:	59 0b       	sbc	r21, r25
     b46:	4e 71       	andi	r20, 0x1E	; 30
     b48:	4c 2b       	or	r20, r28
     b4a:	45 b9       	out	0x05, r20	; 5
				cont_dig = -1;
     b4c:	8f ef       	ldi	r24, 0xFF	; 255
     b4e:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
				break;
		}
		cont_dig++;
     b52:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <__data_end>
     b56:	8f 5f       	subi	r24, 0xFF	; 255
     b58:	80 93 78 01 	sts	0x0178, r24	; 0x800178 <__data_end>
		*flag_disparo = 0;
     b5c:	10 82       	st	Z, r1
	}
}
     b5e:	cf 91       	pop	r28
     b60:	08 95       	ret

00000b62 <anima_LCD>:
void anima_LCD(uint16_t diametro_pneu_cm, uint16_t rpm_motor, float distancia_hodometro_km, uint8_t *flag_disparo)
{
     b62:	af 92       	push	r10
     b64:	bf 92       	push	r11
     b66:	cf 92       	push	r12
     b68:	df 92       	push	r13
     b6a:	ef 92       	push	r14
     b6c:	ff 92       	push	r15
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	cf 93       	push	r28
     b74:	df 93       	push	r29
     b76:	cd b7       	in	r28, 0x3d	; 61
     b78:	de b7       	in	r29, 0x3e	; 62
     b7a:	a7 97       	sbiw	r28, 0x27	; 39
     b7c:	0f b6       	in	r0, 0x3f	; 63
     b7e:	f8 94       	cli
     b80:	de bf       	out	0x3e, r29	; 62
     b82:	0f be       	out	0x3f, r0	; 63
     b84:	cd bf       	out	0x3d, r28	; 61
	if(*flag_disparo)
     b86:	f8 01       	movw	r30, r16
     b88:	80 81       	ld	r24, Z
     b8a:	88 23       	and	r24, r24
     b8c:	09 f4       	brne	.+2      	; 0xb90 <anima_LCD+0x2e>
     b8e:	e9 c2       	rjmp	.+1490   	; 0x1162 <anima_LCD+0x600>
     b90:	58 01       	movw	r10, r16
     b92:	69 01       	movw	r12, r18
     b94:	7a 01       	movw	r14, r20
		unsigned char distancia_sonar_string[4];
		unsigned char distancia_hodometro_km_string[8];
		unsigned char kilometragemAtual_string[5];
		
		
		sprintf(diametro_pneu_cm_string, "%u", Diametro_pneu_cm);
     b96:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     b9a:	8f 93       	push	r24
     b9c:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     ba0:	8f 93       	push	r24
     ba2:	07 e0       	ldi	r16, 0x07	; 7
     ba4:	11 e0       	ldi	r17, 0x01	; 1
     ba6:	1f 93       	push	r17
     ba8:	0f 93       	push	r16
     baa:	ce 01       	movw	r24, r28
     bac:	84 96       	adiw	r24, 0x24	; 36
     bae:	9f 93       	push	r25
     bb0:	8f 93       	push	r24
     bb2:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(distancia_sonar_string, "%u", distancia_sonar);
     bb6:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <distancia_sonar+0x3>
     bba:	8f 93       	push	r24
     bbc:	80 91 9a 01 	lds	r24, 0x019A	; 0x80019a <distancia_sonar+0x2>
     bc0:	8f 93       	push	r24
     bc2:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <distancia_sonar+0x1>
     bc6:	8f 93       	push	r24
     bc8:	80 91 98 01 	lds	r24, 0x0198	; 0x800198 <distancia_sonar>
     bcc:	8f 93       	push	r24
     bce:	1f 93       	push	r17
     bd0:	0f 93       	push	r16
     bd2:	ce 01       	movw	r24, r28
     bd4:	44 96       	adiw	r24, 0x14	; 20
     bd6:	9f 93       	push	r25
     bd8:	8f 93       	push	r24
     bda:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(rpm_motor_string, "%u", RPM_motor);
     bde:	80 91 ad 01 	lds	r24, 0x01AD	; 0x8001ad <RPM_motor+0x1>
     be2:	8f 93       	push	r24
     be4:	80 91 ac 01 	lds	r24, 0x01AC	; 0x8001ac <RPM_motor>
     be8:	8f 93       	push	r24
     bea:	1f 93       	push	r17
     bec:	0f 93       	push	r16
     bee:	ce 01       	movw	r24, r28
     bf0:	09 96       	adiw	r24, 0x09	; 9
     bf2:	9f 93       	push	r25
     bf4:	8f 93       	push	r24
     bf6:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(leitura_ADC_string, "%u", leitura_ADC);
     bfa:	80 91 87 01 	lds	r24, 0x0187	; 0x800187 <leitura_ADC+0x1>
     bfe:	8f 93       	push	r24
     c00:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <leitura_ADC>
     c04:	8f 93       	push	r24
     c06:	1f 93       	push	r17
     c08:	0f 93       	push	r16
     c0a:	ce 01       	movw	r24, r28
     c0c:	80 96       	adiw	r24, 0x20	; 32
     c0e:	9f 93       	push	r25
     c10:	8f 93       	push	r24
     c12:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(leitura_ADC1_string, "%u", leitura_ADC1);
     c16:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <leitura_ADC1+0x1>
     c1a:	8f 93       	push	r24
     c1c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <leitura_ADC1>
     c20:	8f 93       	push	r24
     c22:	1f 93       	push	r17
     c24:	0f 93       	push	r16
     c26:	ce 01       	movw	r24, r28
     c28:	4c 96       	adiw	r24, 0x1c	; 28
     c2a:	9f 93       	push	r25
     c2c:	8f 93       	push	r24
     c2e:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(leitura_ADC2_string, "%u", leitura_ADC2);
     c32:	0f b6       	in	r0, 0x3f	; 63
     c34:	f8 94       	cli
     c36:	de bf       	out	0x3e, r29	; 62
     c38:	0f be       	out	0x3f, r0	; 63
     c3a:	cd bf       	out	0x3d, r28	; 61
     c3c:	80 91 a7 01 	lds	r24, 0x01A7	; 0x8001a7 <leitura_ADC2+0x3>
     c40:	8f 93       	push	r24
     c42:	80 91 a6 01 	lds	r24, 0x01A6	; 0x8001a6 <leitura_ADC2+0x2>
     c46:	8f 93       	push	r24
     c48:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <leitura_ADC2+0x1>
     c4c:	8f 93       	push	r24
     c4e:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <leitura_ADC2>
     c52:	8f 93       	push	r24
     c54:	1f 93       	push	r17
     c56:	0f 93       	push	r16
     c58:	ce 01       	movw	r24, r28
     c5a:	48 96       	adiw	r24, 0x18	; 24
     c5c:	9f 93       	push	r25
     c5e:	8f 93       	push	r24
     c60:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(distancia_hodometro_km_string, "%u", (uint16_t)distancia_hodometro_km);
     c64:	c7 01       	movw	r24, r14
     c66:	b6 01       	movw	r22, r12
     c68:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     c6c:	7f 93       	push	r23
     c6e:	6f 93       	push	r22
     c70:	1f 93       	push	r17
     c72:	0f 93       	push	r16
     c74:	ce 01       	movw	r24, r28
     c76:	01 96       	adiw	r24, 0x01	; 1
     c78:	9f 93       	push	r25
     c7a:	8f 93       	push	r24
     c7c:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		sprintf(kilometragemAtual_string, "%u", (uint16_t)kilometragemAtual);
     c80:	60 91 90 01 	lds	r22, 0x0190	; 0x800190 <kilometragemAtual>
     c84:	70 91 91 01 	lds	r23, 0x0191	; 0x800191 <kilometragemAtual+0x1>
     c88:	80 91 92 01 	lds	r24, 0x0192	; 0x800192 <kilometragemAtual+0x2>
     c8c:	90 91 93 01 	lds	r25, 0x0193	; 0x800193 <kilometragemAtual+0x3>
     c90:	0e 94 3d 10 	call	0x207a	; 0x207a <__fixunssfsi>
     c94:	7f 93       	push	r23
     c96:	6f 93       	push	r22
     c98:	1f 93       	push	r17
     c9a:	0f 93       	push	r16
     c9c:	ce 01       	movw	r24, r28
     c9e:	0f 96       	adiw	r24, 0x0f	; 15
     ca0:	9f 93       	push	r25
     ca2:	8f 93       	push	r24
     ca4:	0e 94 b7 11 	call	0x236e	; 0x236e <sprintf>
		
		// Design do visor GLCD
		GLCD_Clear();
     ca8:	0e 94 7d 0d 	call	0x1afa	; 0x1afa <GLCD_Clear>
		if (tela == 0)
     cac:	80 91 80 01 	lds	r24, 0x0180	; 0x800180 <tela>
     cb0:	90 91 81 01 	lds	r25, 0x0181	; 0x800181 <tela+0x1>
     cb4:	0f b6       	in	r0, 0x3f	; 63
     cb6:	f8 94       	cli
     cb8:	de bf       	out	0x3e, r29	; 62
     cba:	0f be       	out	0x3f, r0	; 63
     cbc:	cd bf       	out	0x3d, r28	; 61
     cbe:	00 97       	sbiw	r24, 0x00	; 0
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <anima_LCD+0x162>
     cc2:	a2 c0       	rjmp	.+324    	; 0xe08 <anima_LCD+0x2a6>
		{
		
		GLCD_GotoXY(0,0);
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("LASD CAR");
     ccc:	8a e0       	ldi	r24, 0x0A	; 10
     cce:	91 e0       	ldi	r25, 0x01	; 1
     cd0:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_DrawLine(0, 8, 50, 8, GLCD_Black);
     cd4:	0f ef       	ldi	r16, 0xFF	; 255
     cd6:	28 e0       	ldi	r18, 0x08	; 8
     cd8:	42 e3       	ldi	r20, 0x32	; 50
     cda:	68 e0       	ldi	r22, 0x08	; 8
     cdc:	80 e0       	ldi	r24, 0x00	; 0
     cde:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
		GLCD_GotoXY(0,20);
     ce2:	64 e1       	ldi	r22, 0x14	; 20
     ce4:	80 e0       	ldi	r24, 0x00	; 0
     ce6:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(rpm_motor_string);
     cea:	ce 01       	movw	r24, r28
     cec:	09 96       	adiw	r24, 0x09	; 9
     cee:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(30,20);
     cf2:	64 e1       	ldi	r22, 0x14	; 20
     cf4:	8e e1       	ldi	r24, 0x1E	; 30
     cf6:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("RPM");
     cfa:	83 e1       	ldi	r24, 0x13	; 19
     cfc:	91 e0       	ldi	r25, 0x01	; 1
     cfe:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(0,35);
     d02:	63 e2       	ldi	r22, 0x23	; 35
     d04:	80 e0       	ldi	r24, 0x00	; 0
     d06:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("Sonar:");
     d0a:	87 e1       	ldi	r24, 0x17	; 23
     d0c:	91 e0       	ldi	r25, 0x01	; 1
     d0e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(35,35);
     d12:	63 e2       	ldi	r22, 0x23	; 35
     d14:	83 e2       	ldi	r24, 0x23	; 35
     d16:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(distancia_sonar_string);
     d1a:	ce 01       	movw	r24, r28
     d1c:	44 96       	adiw	r24, 0x14	; 20
     d1e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(0,50);
     d22:	62 e3       	ldi	r22, 0x32	; 50
     d24:	80 e0       	ldi	r24, 0x00	; 0
     d26:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("D.pneu:");
     d2a:	8e e1       	ldi	r24, 0x1E	; 30
     d2c:	91 e0       	ldi	r25, 0x01	; 1
     d2e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(40,50);
     d32:	62 e3       	ldi	r22, 0x32	; 50
     d34:	88 e2       	ldi	r24, 0x28	; 40
     d36:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(diametro_pneu_cm_string);
     d3a:	ce 01       	movw	r24, r28
     d3c:	84 96       	adiw	r24, 0x24	; 36
     d3e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(85,40);
     d42:	68 e2       	ldi	r22, 0x28	; 40
     d44:	85 e5       	ldi	r24, 0x55	; 85
     d46:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(distancia_hodometro_km_string);
     d4a:	ce 01       	movw	r24, r28
     d4c:	01 96       	adiw	r24, 0x01	; 1
     d4e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(105,40);
     d52:	68 e2       	ldi	r22, 0x28	; 40
     d54:	89 e6       	ldi	r24, 0x69	; 105
     d56:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("KM");
     d5a:	86 e2       	ldi	r24, 0x26	; 38
     d5c:	91 e0       	ldi	r25, 0x01	; 1
     d5e:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_DrawRectangle(80,0,122,30, GLCD_Black);
     d62:	2e e1       	ldi	r18, 0x1E	; 30
     d64:	4a e7       	ldi	r20, 0x7A	; 122
     d66:	60 e0       	ldi	r22, 0x00	; 0
     d68:	80 e5       	ldi	r24, 0x50	; 80
     d6a:	0e 94 07 0c 	call	0x180e	; 0x180e <GLCD_DrawRectangle>
		GLCD_GotoXY(85,5);
     d6e:	65 e0       	ldi	r22, 0x05	; 5
     d70:	85 e5       	ldi	r24, 0x55	; 85
     d72:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(leitura_ADC1_string);
     d76:	ce 01       	movw	r24, r28
     d78:	4c 96       	adiw	r24, 0x1c	; 28
     d7a:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(100,5);
     d7e:	65 e0       	ldi	r22, 0x05	; 5
     d80:	84 e6       	ldi	r24, 0x64	; 100
     d82:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("%");
     d86:	89 e2       	ldi	r24, 0x29	; 41
     d88:	91 e0       	ldi	r25, 0x01	; 1
     d8a:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(85,20);
     d8e:	64 e1       	ldi	r22, 0x14	; 20
     d90:	85 e5       	ldi	r24, 0x55	; 85
     d92:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString(leitura_ADC2_string);
     d96:	ce 01       	movw	r24, r28
     d98:	48 96       	adiw	r24, 0x18	; 24
     d9a:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		GLCD_GotoXY(105,20);
     d9e:	64 e1       	ldi	r22, 0x14	; 20
     da0:	89 e6       	ldi	r24, 0x69	; 105
     da2:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		GLCD_PrintString("C");
     da6:	8b e2       	ldi	r24, 0x2B	; 43
     da8:	91 e0       	ldi	r25, 0x01	; 1
     daa:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		
		if (Modo_operacao1 ==0)
     dae:	80 91 a8 01 	lds	r24, 0x01A8	; 0x8001a8 <Modo_operacao1>
     db2:	90 91 a9 01 	lds	r25, 0x01A9	; 0x8001a9 <Modo_operacao1+0x1>
     db6:	89 2b       	or	r24, r25
     db8:	d1 f4       	brne	.+52     	; 0xdee <anima_LCD+0x28c>
		{
			if (Modo_operacao==0)
     dba:	80 91 aa 01 	lds	r24, 0x01AA	; 0x8001aa <Modo_operacao>
     dbe:	90 91 ab 01 	lds	r25, 0x01AB	; 0x8001ab <Modo_operacao+0x1>
     dc2:	00 97       	sbiw	r24, 0x00	; 0
     dc4:	49 f4       	brne	.+18     	; 0xdd8 <anima_LCD+0x276>
			{
				GLCD_GotoXY(120,50);
     dc6:	62 e3       	ldi	r22, 0x32	; 50
     dc8:	88 e7       	ldi	r24, 0x78	; 120
     dca:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
				GLCD_PrintString("D");
     dce:	8d e2       	ldi	r24, 0x2D	; 45
     dd0:	91 e0       	ldi	r25, 0x01	; 1
     dd2:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
     dd6:	13 c0       	rjmp	.+38     	; 0xdfe <anima_LCD+0x29c>
			}
			else if (Modo_operacao ==1)
     dd8:	01 97       	sbiw	r24, 0x01	; 1
     dda:	89 f4       	brne	.+34     	; 0xdfe <anima_LCD+0x29c>
			{ 
			GLCD_GotoXY(120,50);
     ddc:	62 e3       	ldi	r22, 0x32	; 50
     dde:	88 e7       	ldi	r24, 0x78	; 120
     de0:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("R");
     de4:	81 e1       	ldi	r24, 0x11	; 17
     de6:	91 e0       	ldi	r25, 0x01	; 1
     de8:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
     dec:	08 c0       	rjmp	.+16     	; 0xdfe <anima_LCD+0x29c>
			}
		}
		else{
			GLCD_GotoXY(120,50);
     dee:	62 e3       	ldi	r22, 0x32	; 50
     df0:	88 e7       	ldi	r24, 0x78	; 120
     df2:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("P");
     df6:	8f e2       	ldi	r24, 0x2F	; 47
     df8:	91 e0       	ldi	r25, 0x01	; 1
     dfa:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
		}
		
		
		
		GLCD_Render();
     dfe:	0e 94 a2 09 	call	0x1344	; 0x1344 <GLCD_Render>
		*flag_disparo = 0;
     e02:	f5 01       	movw	r30, r10
     e04:	10 82       	st	Z, r1
     e06:	ad c1       	rjmp	.+858    	; 0x1162 <anima_LCD+0x600>
		}else if (tela == 1)
     e08:	01 97       	sbiw	r24, 0x01	; 1
     e0a:	09 f0       	breq	.+2      	; 0xe0e <anima_LCD+0x2ac>
     e0c:	aa c1       	rjmp	.+852    	; 0x1162 <anima_LCD+0x600>
		{
			GLCD_GotoXY(0,0);
     e0e:	60 e0       	ldi	r22, 0x00	; 0
     e10:	80 e0       	ldi	r24, 0x00	; 0
     e12:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("LASD CAR");
     e16:	8a e0       	ldi	r24, 0x0A	; 10
     e18:	91 e0       	ldi	r25, 0x01	; 1
     e1a:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_DrawLine(0, 8, 50, 8, GLCD_Black);
     e1e:	0f ef       	ldi	r16, 0xFF	; 255
     e20:	28 e0       	ldi	r18, 0x08	; 8
     e22:	42 e3       	ldi	r20, 0x32	; 50
     e24:	68 e0       	ldi	r22, 0x08	; 8
     e26:	80 e0       	ldi	r24, 0x00	; 0
     e28:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
			GLCD_GotoXY(85,0);
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	85 e5       	ldi	r24, 0x55	; 85
     e30:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString(leitura_ADC1_string);
     e34:	ce 01       	movw	r24, r28
     e36:	4c 96       	adiw	r24, 0x1c	; 28
     e38:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(100,0);
     e3c:	60 e0       	ldi	r22, 0x00	; 0
     e3e:	84 e6       	ldi	r24, 0x64	; 100
     e40:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("%");
     e44:	89 e2       	ldi	r24, 0x29	; 41
     e46:	91 e0       	ldi	r25, 0x01	; 1
     e48:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(85,10);
     e4c:	6a e0       	ldi	r22, 0x0A	; 10
     e4e:	85 e5       	ldi	r24, 0x55	; 85
     e50:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString(leitura_ADC2_string);
     e54:	ce 01       	movw	r24, r28
     e56:	48 96       	adiw	r24, 0x18	; 24
     e58:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(105,10);
     e5c:	6a e0       	ldi	r22, 0x0A	; 10
     e5e:	89 e6       	ldi	r24, 0x69	; 105
     e60:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("C");
     e64:	8b e2       	ldi	r24, 0x2B	; 43
     e66:	91 e0       	ldi	r25, 0x01	; 1
     e68:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(0,15);
     e6c:	6f e0       	ldi	r22, 0x0F	; 15
     e6e:	80 e0       	ldi	r24, 0x00	; 0
     e70:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("Percurso:");
     e74:	81 e3       	ldi	r24, 0x31	; 49
     e76:	91 e0       	ldi	r25, 0x01	; 1
     e78:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(54,15);
     e7c:	6f e0       	ldi	r22, 0x0F	; 15
     e7e:	86 e3       	ldi	r24, 0x36	; 54
     e80:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString(kilometragemAtual_string);
     e84:	ce 01       	movw	r24, r28
     e86:	0f 96       	adiw	r24, 0x0f	; 15
     e88:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(70,15);
     e8c:	6f e0       	ldi	r22, 0x0F	; 15
     e8e:	86 e4       	ldi	r24, 0x46	; 70
     e90:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("Km");
     e94:	8b e3       	ldi	r24, 0x3B	; 59
     e96:	91 e0       	ldi	r25, 0x01	; 1
     e98:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			switch (farol){
     e9c:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <farol>
     ea0:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <farol+0x1>
     ea4:	81 30       	cpi	r24, 0x01	; 1
     ea6:	91 05       	cpc	r25, r1
     ea8:	d1 f0       	breq	.+52     	; 0xede <anima_LCD+0x37c>
     eaa:	40 f0       	brcs	.+16     	; 0xebc <anima_LCD+0x35a>
     eac:	82 30       	cpi	r24, 0x02	; 2
     eae:	91 05       	cpc	r25, r1
     eb0:	09 f4       	brne	.+2      	; 0xeb4 <anima_LCD+0x352>
     eb2:	65 c0       	rjmp	.+202    	; 0xf7e <anima_LCD+0x41c>
     eb4:	03 97       	sbiw	r24, 0x03	; 3
     eb6:	09 f4       	brne	.+2      	; 0xeba <anima_LCD+0x358>
     eb8:	b8 c0       	rjmp	.+368    	; 0x102a <anima_LCD+0x4c8>
     eba:	0c c1       	rjmp	.+536    	; 0x10d4 <anima_LCD+0x572>
				case 0:
					GLCD_GotoXY(20,30);
     ebc:	6e e1       	ldi	r22, 0x1E	; 30
     ebe:	84 e1       	ldi	r24, 0x14	; 20
     ec0:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
					GLCD_PrintString("Farol");
     ec4:	8e e3       	ldi	r24, 0x3E	; 62
     ec6:	91 e0       	ldi	r25, 0x01	; 1
     ec8:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
					GLCD_GotoXY(10,40);
     ecc:	68 e2       	ldi	r22, 0x28	; 40
     ece:	8a e0       	ldi	r24, 0x0A	; 10
     ed0:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
					GLCD_PrintString("Desligado");
     ed4:	84 e4       	ldi	r24, 0x44	; 68
     ed6:	91 e0       	ldi	r25, 0x01	; 1
     ed8:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
					break;
     edc:	fb c0       	rjmp	.+502    	; 0x10d4 <anima_LCD+0x572>
				case 1:
					GLCD_DrawRoundRectangle(10,30,30,50,8,GLCD_Black);
     ede:	ee 24       	eor	r14, r14
     ee0:	ea 94       	dec	r14
     ee2:	08 e0       	ldi	r16, 0x08	; 8
     ee4:	22 e3       	ldi	r18, 0x32	; 50
     ee6:	4e e1       	ldi	r20, 0x1E	; 30
     ee8:	6e e1       	ldi	r22, 0x1E	; 30
     eea:	8a e0       	ldi	r24, 0x0A	; 10
     eec:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <GLCD_DrawRoundRectangle>
					GLCD_DrawLine(25,30,20,50,GLCD_Black);
     ef0:	0f ef       	ldi	r16, 0xFF	; 255
     ef2:	22 e3       	ldi	r18, 0x32	; 50
     ef4:	44 e1       	ldi	r20, 0x14	; 20
     ef6:	6e e1       	ldi	r22, 0x1E	; 30
     ef8:	89 e1       	ldi	r24, 0x19	; 25
     efa:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(28,35,40,40,GLCD_Black);
     efe:	28 e2       	ldi	r18, 0x28	; 40
     f00:	48 e2       	ldi	r20, 0x28	; 40
     f02:	63 e2       	ldi	r22, 0x23	; 35
     f04:	8c e1       	ldi	r24, 0x1C	; 28
     f06:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					//GLCD_DrawLine(28,38,40,43,GLCD_Black);
					GLCD_DrawLine(28,41,40,46,GLCD_Black);
     f0a:	2e e2       	ldi	r18, 0x2E	; 46
     f0c:	48 e2       	ldi	r20, 0x28	; 40
     f0e:	69 e2       	ldi	r22, 0x29	; 41
     f10:	8c e1       	ldi	r24, 0x1C	; 28
     f12:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					//GLCD_DrawLine(28,44,40,49,GLCD_Black);
					GLCD_DrawLine(28,47,40,52,GLCD_Black);
     f16:	24 e3       	ldi	r18, 0x34	; 52
     f18:	48 e2       	ldi	r20, 0x28	; 40
     f1a:	6f e2       	ldi	r22, 0x2F	; 47
     f1c:	8c e1       	ldi	r24, 0x1C	; 28
     f1e:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(34,30,34,55,GLCD_Black); //corta neblina
     f22:	27 e3       	ldi	r18, 0x37	; 55
     f24:	42 e2       	ldi	r20, 0x22	; 34
     f26:	6e e1       	ldi	r22, 0x1E	; 30
     f28:	82 e2       	ldi	r24, 0x22	; 34
     f2a:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(25,30,35,38,GLCD_White);
     f2e:	00 e0       	ldi	r16, 0x00	; 0
     f30:	26 e2       	ldi	r18, 0x26	; 38
     f32:	43 e2       	ldi	r20, 0x23	; 35
     f34:	6e e1       	ldi	r22, 0x1E	; 30
     f36:	89 e1       	ldi	r24, 0x19	; 25
     f38:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(25,50,35,38,GLCD_White);
     f3c:	26 e2       	ldi	r18, 0x26	; 38
     f3e:	43 e2       	ldi	r20, 0x23	; 35
     f40:	62 e3       	ldi	r22, 0x32	; 50
     f42:	89 e1       	ldi	r24, 0x19	; 25
     f44:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(21,50,28,50,GLCD_White);
     f48:	22 e3       	ldi	r18, 0x32	; 50
     f4a:	4c e1       	ldi	r20, 0x1C	; 28
     f4c:	62 e3       	ldi	r22, 0x32	; 50
     f4e:	85 e1       	ldi	r24, 0x15	; 21
     f50:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(28,45,32,50,GLCD_White);
     f54:	22 e3       	ldi	r18, 0x32	; 50
     f56:	40 e2       	ldi	r20, 0x20	; 32
     f58:	6d e2       	ldi	r22, 0x2D	; 45
     f5a:	8c e1       	ldi	r24, 0x1C	; 28
     f5c:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_DrawLine(30,30,30,50,GLCD_White);
     f60:	22 e3       	ldi	r18, 0x32	; 50
     f62:	4e e1       	ldi	r20, 0x1E	; 30
     f64:	6e e1       	ldi	r22, 0x1E	; 30
     f66:	8e e1       	ldi	r24, 0x1E	; 30
     f68:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
					GLCD_GotoXY(2,56);
     f6c:	68 e3       	ldi	r22, 0x38	; 56
     f6e:	82 e0       	ldi	r24, 0x02	; 2
     f70:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
					GLCD_PrintString("Neblina");
     f74:	8e e4       	ldi	r24, 0x4E	; 78
     f76:	91 e0       	ldi	r25, 0x01	; 1
     f78:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
					break;
     f7c:	ab c0       	rjmp	.+342    	; 0x10d4 <anima_LCD+0x572>
				case 2:
						GLCD_DrawRoundRectangle(10,30,30,50,8,GLCD_Black);
     f7e:	ee 24       	eor	r14, r14
     f80:	ea 94       	dec	r14
     f82:	08 e0       	ldi	r16, 0x08	; 8
     f84:	22 e3       	ldi	r18, 0x32	; 50
     f86:	4e e1       	ldi	r20, 0x1E	; 30
     f88:	6e e1       	ldi	r22, 0x1E	; 30
     f8a:	8a e0       	ldi	r24, 0x0A	; 10
     f8c:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <GLCD_DrawRoundRectangle>
						GLCD_DrawLine(25,30,20,50,GLCD_Black);
     f90:	0f ef       	ldi	r16, 0xFF	; 255
     f92:	22 e3       	ldi	r18, 0x32	; 50
     f94:	44 e1       	ldi	r20, 0x14	; 20
     f96:	6e e1       	ldi	r22, 0x1E	; 30
     f98:	89 e1       	ldi	r24, 0x19	; 25
     f9a:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,35,40,40,GLCD_Black);
     f9e:	28 e2       	ldi	r18, 0x28	; 40
     fa0:	48 e2       	ldi	r20, 0x28	; 40
     fa2:	63 e2       	ldi	r22, 0x23	; 35
     fa4:	8c e1       	ldi	r24, 0x1C	; 28
     fa6:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,38,40,43,GLCD_Black);
     faa:	2b e2       	ldi	r18, 0x2B	; 43
     fac:	48 e2       	ldi	r20, 0x28	; 40
     fae:	66 e2       	ldi	r22, 0x26	; 38
     fb0:	8c e1       	ldi	r24, 0x1C	; 28
     fb2:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,41,40,46,GLCD_Black);
     fb6:	2e e2       	ldi	r18, 0x2E	; 46
     fb8:	48 e2       	ldi	r20, 0x28	; 40
     fba:	69 e2       	ldi	r22, 0x29	; 41
     fbc:	8c e1       	ldi	r24, 0x1C	; 28
     fbe:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,44,40,49,GLCD_Black);
     fc2:	21 e3       	ldi	r18, 0x31	; 49
     fc4:	48 e2       	ldi	r20, 0x28	; 40
     fc6:	6c e2       	ldi	r22, 0x2C	; 44
     fc8:	8c e1       	ldi	r24, 0x1C	; 28
     fca:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,47,40,52,GLCD_Black);
     fce:	24 e3       	ldi	r18, 0x34	; 52
     fd0:	48 e2       	ldi	r20, 0x28	; 40
     fd2:	6f e2       	ldi	r22, 0x2F	; 47
     fd4:	8c e1       	ldi	r24, 0x1C	; 28
     fd6:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(25,30,35,38,GLCD_White);
     fda:	00 e0       	ldi	r16, 0x00	; 0
     fdc:	26 e2       	ldi	r18, 0x26	; 38
     fde:	43 e2       	ldi	r20, 0x23	; 35
     fe0:	6e e1       	ldi	r22, 0x1E	; 30
     fe2:	89 e1       	ldi	r24, 0x19	; 25
     fe4:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(25,50,35,38,GLCD_White);
     fe8:	26 e2       	ldi	r18, 0x26	; 38
     fea:	43 e2       	ldi	r20, 0x23	; 35
     fec:	62 e3       	ldi	r22, 0x32	; 50
     fee:	89 e1       	ldi	r24, 0x19	; 25
     ff0:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(21,50,28,50,GLCD_White);
     ff4:	22 e3       	ldi	r18, 0x32	; 50
     ff6:	4c e1       	ldi	r20, 0x1C	; 28
     ff8:	62 e3       	ldi	r22, 0x32	; 50
     ffa:	85 e1       	ldi	r24, 0x15	; 21
     ffc:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,45,32,50,GLCD_White);
    1000:	22 e3       	ldi	r18, 0x32	; 50
    1002:	40 e2       	ldi	r20, 0x20	; 32
    1004:	6d e2       	ldi	r22, 0x2D	; 45
    1006:	8c e1       	ldi	r24, 0x1C	; 28
    1008:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(30,30,30,50,GLCD_White);
    100c:	22 e3       	ldi	r18, 0x32	; 50
    100e:	4e e1       	ldi	r20, 0x1E	; 30
    1010:	6e e1       	ldi	r22, 0x1E	; 30
    1012:	8e e1       	ldi	r24, 0x1E	; 30
    1014:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_GotoXY(2,56);
    1018:	68 e3       	ldi	r22, 0x38	; 56
    101a:	82 e0       	ldi	r24, 0x02	; 2
    101c:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
						GLCD_PrintString("Baixo");
    1020:	86 e5       	ldi	r24, 0x56	; 86
    1022:	91 e0       	ldi	r25, 0x01	; 1
    1024:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
					break;
    1028:	55 c0       	rjmp	.+170    	; 0x10d4 <anima_LCD+0x572>
				case 3:
						GLCD_DrawRoundRectangle(10,30,30,50,8,GLCD_Black);
    102a:	ee 24       	eor	r14, r14
    102c:	ea 94       	dec	r14
    102e:	08 e0       	ldi	r16, 0x08	; 8
    1030:	22 e3       	ldi	r18, 0x32	; 50
    1032:	4e e1       	ldi	r20, 0x1E	; 30
    1034:	6e e1       	ldi	r22, 0x1E	; 30
    1036:	8a e0       	ldi	r24, 0x0A	; 10
    1038:	0e 94 62 0c 	call	0x18c4	; 0x18c4 <GLCD_DrawRoundRectangle>
						GLCD_DrawLine(25,30,20,50,GLCD_Black);
    103c:	0f ef       	ldi	r16, 0xFF	; 255
    103e:	22 e3       	ldi	r18, 0x32	; 50
    1040:	44 e1       	ldi	r20, 0x14	; 20
    1042:	6e e1       	ldi	r22, 0x1E	; 30
    1044:	89 e1       	ldi	r24, 0x19	; 25
    1046:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,35,40,35,GLCD_Black);
    104a:	23 e2       	ldi	r18, 0x23	; 35
    104c:	48 e2       	ldi	r20, 0x28	; 40
    104e:	63 e2       	ldi	r22, 0x23	; 35
    1050:	8c e1       	ldi	r24, 0x1C	; 28
    1052:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,38,40,38,GLCD_Black);
    1056:	26 e2       	ldi	r18, 0x26	; 38
    1058:	48 e2       	ldi	r20, 0x28	; 40
    105a:	66 e2       	ldi	r22, 0x26	; 38
    105c:	8c e1       	ldi	r24, 0x1C	; 28
    105e:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,41,40,41,GLCD_Black);
    1062:	29 e2       	ldi	r18, 0x29	; 41
    1064:	48 e2       	ldi	r20, 0x28	; 40
    1066:	69 e2       	ldi	r22, 0x29	; 41
    1068:	8c e1       	ldi	r24, 0x1C	; 28
    106a:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,44,40,44,GLCD_Black);
    106e:	2c e2       	ldi	r18, 0x2C	; 44
    1070:	48 e2       	ldi	r20, 0x28	; 40
    1072:	6c e2       	ldi	r22, 0x2C	; 44
    1074:	8c e1       	ldi	r24, 0x1C	; 28
    1076:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,47,40,47,GLCD_Black);
    107a:	2f e2       	ldi	r18, 0x2F	; 47
    107c:	48 e2       	ldi	r20, 0x28	; 40
    107e:	6f e2       	ldi	r22, 0x2F	; 47
    1080:	8c e1       	ldi	r24, 0x1C	; 28
    1082:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(25,30,35,38,GLCD_White);
    1086:	00 e0       	ldi	r16, 0x00	; 0
    1088:	26 e2       	ldi	r18, 0x26	; 38
    108a:	43 e2       	ldi	r20, 0x23	; 35
    108c:	6e e1       	ldi	r22, 0x1E	; 30
    108e:	89 e1       	ldi	r24, 0x19	; 25
    1090:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(25,50,35,38,GLCD_White);
    1094:	26 e2       	ldi	r18, 0x26	; 38
    1096:	43 e2       	ldi	r20, 0x23	; 35
    1098:	62 e3       	ldi	r22, 0x32	; 50
    109a:	89 e1       	ldi	r24, 0x19	; 25
    109c:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(21,50,28,50,GLCD_White);
    10a0:	22 e3       	ldi	r18, 0x32	; 50
    10a2:	4c e1       	ldi	r20, 0x1C	; 28
    10a4:	62 e3       	ldi	r22, 0x32	; 50
    10a6:	85 e1       	ldi	r24, 0x15	; 21
    10a8:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(28,45,32,50,GLCD_White);
    10ac:	22 e3       	ldi	r18, 0x32	; 50
    10ae:	40 e2       	ldi	r20, 0x20	; 32
    10b0:	6d e2       	ldi	r22, 0x2D	; 45
    10b2:	8c e1       	ldi	r24, 0x1C	; 28
    10b4:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_DrawLine(30,30,30,50,GLCD_White);
    10b8:	22 e3       	ldi	r18, 0x32	; 50
    10ba:	4e e1       	ldi	r20, 0x1E	; 30
    10bc:	6e e1       	ldi	r22, 0x1E	; 30
    10be:	8e e1       	ldi	r24, 0x1E	; 30
    10c0:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
						GLCD_GotoXY(2,56);
    10c4:	68 e3       	ldi	r22, 0x38	; 56
    10c6:	82 e0       	ldi	r24, 0x02	; 2
    10c8:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
						GLCD_PrintString("Alto");
    10cc:	8c e5       	ldi	r24, 0x5C	; 92
    10ce:	91 e0       	ldi	r25, 0x01	; 1
    10d0:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
					break;
			}
			
			if (leitura_ADC2>= 100)
    10d4:	80 91 a4 01 	lds	r24, 0x01A4	; 0x8001a4 <leitura_ADC2>
    10d8:	90 91 a5 01 	lds	r25, 0x01A5	; 0x8001a5 <leitura_ADC2+0x1>
    10dc:	a0 91 a6 01 	lds	r26, 0x01A6	; 0x8001a6 <leitura_ADC2+0x2>
    10e0:	b0 91 a7 01 	lds	r27, 0x01A7	; 0x8001a7 <leitura_ADC2+0x3>
    10e4:	84 36       	cpi	r24, 0x64	; 100
    10e6:	91 05       	cpc	r25, r1
    10e8:	a1 05       	cpc	r26, r1
    10ea:	b1 05       	cpc	r27, r1
    10ec:	b0 f1       	brcs	.+108    	; 0x115a <anima_LCD+0x5f8>
			{
			GLCD_DrawTriangle(80,45,100,20,120,45,GLCD_Black);
    10ee:	cc 24       	eor	r12, r12
    10f0:	ca 94       	dec	r12
    10f2:	0f 2e       	mov	r0, r31
    10f4:	fd e2       	ldi	r31, 0x2D	; 45
    10f6:	ef 2e       	mov	r14, r31
    10f8:	f0 2d       	mov	r31, r0
    10fa:	08 e7       	ldi	r16, 0x78	; 120
    10fc:	24 e1       	ldi	r18, 0x14	; 20
    10fe:	44 e6       	ldi	r20, 0x64	; 100
    1100:	6d e2       	ldi	r22, 0x2D	; 45
    1102:	80 e5       	ldi	r24, 0x50	; 80
    1104:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <GLCD_DrawTriangle>
			GLCD_DrawRectangle(98,38,102,24,GLCD_Black);
    1108:	0f ef       	ldi	r16, 0xFF	; 255
    110a:	28 e1       	ldi	r18, 0x18	; 24
    110c:	46 e6       	ldi	r20, 0x66	; 102
    110e:	66 e2       	ldi	r22, 0x26	; 38
    1110:	82 e6       	ldi	r24, 0x62	; 98
    1112:	0e 94 07 0c 	call	0x180e	; 0x180e <GLCD_DrawRectangle>
			GLCD_FillRectangle(98,24,102,38,GLCD_Black);
    1116:	26 e2       	ldi	r18, 0x26	; 38
    1118:	46 e6       	ldi	r20, 0x66	; 102
    111a:	68 e1       	ldi	r22, 0x18	; 24
    111c:	82 e6       	ldi	r24, 0x62	; 98
    111e:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <GLCD_FillRectangle>
			GLCD_DrawRectangle(98,41,102,44,GLCD_Black);
    1122:	2c e2       	ldi	r18, 0x2C	; 44
    1124:	46 e6       	ldi	r20, 0x66	; 102
    1126:	69 e2       	ldi	r22, 0x29	; 41
    1128:	82 e6       	ldi	r24, 0x62	; 98
    112a:	0e 94 07 0c 	call	0x180e	; 0x180e <GLCD_DrawRectangle>
			GLCD_FillRectangle(98,41,102,44,GLCD_Black);
    112e:	2c e2       	ldi	r18, 0x2C	; 44
    1130:	46 e6       	ldi	r20, 0x66	; 102
    1132:	69 e2       	ldi	r22, 0x29	; 41
    1134:	82 e6       	ldi	r24, 0x62	; 98
    1136:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <GLCD_FillRectangle>
			GLCD_GotoXY(75,48);
    113a:	60 e3       	ldi	r22, 0x30	; 48
    113c:	8b e4       	ldi	r24, 0x4B	; 75
    113e:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("Bateria");
    1142:	81 e6       	ldi	r24, 0x61	; 97
    1144:	91 e0       	ldi	r25, 0x01	; 1
    1146:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
			GLCD_GotoXY(50,56);
    114a:	68 e3       	ldi	r22, 0x38	; 56
    114c:	82 e3       	ldi	r24, 0x32	; 50
    114e:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
			GLCD_PrintString("Superaquecida");
    1152:	89 e6       	ldi	r24, 0x69	; 105
    1154:	91 e0       	ldi	r25, 0x01	; 1
    1156:	0e 94 06 0f 	call	0x1e0c	; 0x1e0c <GLCD_PrintString>
	
			}
						GLCD_Render();
    115a:	0e 94 a2 09 	call	0x1344	; 0x1344 <GLCD_Render>
			*flag_disparo = 0;
    115e:	f5 01       	movw	r30, r10
    1160:	10 82       	st	Z, r1
		}
	}
}
    1162:	a7 96       	adiw	r28, 0x27	; 39
    1164:	0f b6       	in	r0, 0x3f	; 63
    1166:	f8 94       	cli
    1168:	de bf       	out	0x3e, r29	; 62
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	cd bf       	out	0x3d, r28	; 61
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	0f 91       	pop	r16
    1176:	ff 90       	pop	r15
    1178:	ef 90       	pop	r14
    117a:	df 90       	pop	r13
    117c:	cf 90       	pop	r12
    117e:	bf 90       	pop	r11
    1180:	af 90       	pop	r10
    1182:	08 95       	ret

00001184 <main>:
}


int main(void)
{
	USART_Init(MYUBRR);
    1184:	67 e6       	ldi	r22, 0x67	; 103
    1186:	70 e0       	ldi	r23, 0x00	; 0
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0e 94 c5 04 	call	0x98a	; 0x98a <USART_Init>

	OCR2B = 128; //controle do ciclo ativo do PWM OCR2B (PD5)
    1190:	80 e8       	ldi	r24, 0x80	; 128
    1192:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7f80b4>
	
	//Definições de GPID
		//Direção dos pinos
	DDRB |= 0b11111110; //Habilita os pinos PB0..6 como saídas
    1196:	84 b1       	in	r24, 0x04	; 4
    1198:	8e 6f       	ori	r24, 0xFE	; 254
    119a:	84 b9       	out	0x04, r24	; 4
	DDRD = 0xFF;
    119c:	8f ef       	ldi	r24, 0xFF	; 255
    119e:	8a b9       	out	0x0a, r24	; 10
	DDRD &= 0b00001011; //Habilita PD2 ... PD7 como entradas
    11a0:	8a b1       	in	r24, 0x0a	; 10
    11a2:	8b 70       	andi	r24, 0x0B	; 11
    11a4:	8a b9       	out	0x0a, r24	; 10
	DDRC &= 0b11111110; // Habilita PD0
    11a6:	38 98       	cbi	0x07, 0	; 7
	
		//Pullups das entradas
	PORTD = 0b00111100; //Habilita pullups de PD2..5
    11a8:	8c e3       	ldi	r24, 0x3C	; 60
    11aa:	8b b9       	out	0x0b, r24	; 11
	PORTC = 0xFE; //Desabilita o pullup do PC0
    11ac:	8e ef       	ldi	r24, 0xFE	; 254
    11ae:	88 b9       	out	0x08, r24	; 8
	
	//configuração das interrupções externas
	EICRA = 0b00000010; //interrupção externa INT0 na borda de descida
    11b0:	82 e0       	ldi	r24, 0x02	; 2
    11b2:	80 93 69 00 	sts	0x0069, r24	; 0x800069 <__TEXT_REGION_LENGTH__+0x7f8069>
	EIMSK = 0b00000001; //Habilita a interrupção externa INT0
    11b6:	91 e0       	ldi	r25, 0x01	; 1
    11b8:	9d bb       	out	0x1d, r25	; 29
	PCICR = 0b00000110; //habilita interrup pin change 2 (porta D e porta C) 'video
    11ba:	26 e0       	ldi	r18, 0x06	; 6
    11bc:	20 93 68 00 	sts	0x0068, r18	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
	PCMSK2= 0b11111100; //habilita interrup PnChange PD
    11c0:	2c ef       	ldi	r18, 0xFC	; 252
    11c2:	20 93 6d 00 	sts	0x006D, r18	; 0x80006d <__TEXT_REGION_LENGTH__+0x7f806d>
	PCMSK1= 0b01001000; //Habilita interrup PnChange PC6 e PC3
    11c6:	28 e4       	ldi	r18, 0x48	; 72
    11c8:	20 93 6c 00 	sts	0x006C, r18	; 0x80006c <__TEXT_REGION_LENGTH__+0x7f806c>
	
	//configuração do Timer 0
	TCCR0A = 0b00000010; //habilita modo CTC do TC0
    11cc:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0b00000011; //liga TC0 com prescaler = 256
    11ce:	23 e0       	ldi	r18, 0x03	; 3
    11d0:	25 bd       	out	0x25, r18	; 37
	OCR0A = 249;		 //ajusta o comparador para TC0 contar até 249
    11d2:	29 ef       	ldi	r18, 0xF9	; 249
    11d4:	27 bd       	out	0x27, r18	; 39
	TIMSK0 = 0b00000010; //habilita a interrupção na igualdade de comparação com OCR0A. A interrupção ocorre a cada 1ms
    11d6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x7f806e>
	TIMSK1 = 1<<ICIE1;
    11da:	80 e2       	ldi	r24, 0x20	; 32
    11dc:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7f806f>
	//Configuração do PWM
	TCCR2A = 0b00100011; //habilita modo CTC do TC2
    11e0:	83 e2       	ldi	r24, 0x23	; 35
    11e2:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7f80b0>
	TCCR2B = 0b00000100; //liga TC2 com prescaler = 256
    11e6:	84 e0       	ldi	r24, 0x04	; 4
    11e8:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7f80b1>
	TCCR1B = (1<<ICES1)| (1<<CS12);
    11ec:	84 e4       	ldi	r24, 0x44	; 68
    11ee:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	
	//Configura ADC
	ADMUX = 0b01000000; //Tensão interna de ref (1.1V), canal 0
    11f2:	80 e4       	ldi	r24, 0x40	; 64
    11f4:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
	ADCSRA = 0b11101111; //habilita o AD, habilita interrupção, modo de conversão contínua, prescaler = 128
    11f8:	8f ee       	ldi	r24, 0xEF	; 239
    11fa:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7f807a>
	ADCSRB = 0x00; //modo de conversão contínua
    11fe:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
	DIDR0 = 0b00000001; //habilita pino PC0 como entrada do ADC0
    1202:	90 93 7e 00 	sts	0x007E, r25	; 0x80007e <__TEXT_REGION_LENGTH__+0x7f807e>
	
	//Atualizando as variaveis atraves do eeprom
	Distancia_hodometro_km = eeprom_read_byte(0);
    1206:	80 e0       	ldi	r24, 0x00	; 0
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <eeprom_read_byte>
    120e:	68 2f       	mov	r22, r24
    1210:	70 e0       	ldi	r23, 0x00	; 0
    1212:	80 e0       	ldi	r24, 0x00	; 0
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__floatunsisf>
    121a:	60 93 94 01 	sts	0x0194, r22	; 0x800194 <Distancia_hodometro_km>
    121e:	70 93 95 01 	sts	0x0195, r23	; 0x800195 <Distancia_hodometro_km+0x1>
    1222:	80 93 96 01 	sts	0x0196, r24	; 0x800196 <Distancia_hodometro_km+0x2>
    1226:	90 93 97 01 	sts	0x0197, r25	; 0x800197 <Distancia_hodometro_km+0x3>
	Diametro_pneu_cm = eeprom_read_byte(1);
    122a:	81 e0       	ldi	r24, 0x01	; 1
    122c:	90 e0       	ldi	r25, 0x00	; 0
    122e:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <eeprom_read_byte>
    1232:	90 e0       	ldi	r25, 0x00	; 0
    1234:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    1238:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
	kilometragemAtual = eeprom_read_byte(3);
    123c:	83 e0       	ldi	r24, 0x03	; 3
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <eeprom_read_byte>
    1244:	68 2f       	mov	r22, r24
    1246:	70 e0       	ldi	r23, 0x00	; 0
    1248:	80 e0       	ldi	r24, 0x00	; 0
    124a:	90 e0       	ldi	r25, 0x00	; 0
    124c:	0e 94 6c 10 	call	0x20d8	; 0x20d8 <__floatunsisf>
    1250:	60 93 90 01 	sts	0x0190, r22	; 0x800190 <kilometragemAtual>
    1254:	70 93 91 01 	sts	0x0191, r23	; 0x800191 <kilometragemAtual+0x1>
    1258:	80 93 92 01 	sts	0x0192, r24	; 0x800192 <kilometragemAtual+0x2>
    125c:	90 93 93 01 	sts	0x0193, r25	; 0x800193 <kilometragemAtual+0x3>
	farol = eeprom_read_byte(4);
    1260:	84 e0       	ldi	r24, 0x04	; 4
    1262:	90 e0       	ldi	r25, 0x00	; 0
    1264:	0e 94 6a 14 	call	0x28d4	; 0x28d4 <eeprom_read_byte>
    1268:	90 e0       	ldi	r25, 0x00	; 0
    126a:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <farol+0x1>
    126e:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <farol>
	
	
	UCSR0B |= (1<<RXCIE0);//Habilita a interrupção de recepção da USART
    1272:	e1 ec       	ldi	r30, 0xC1	; 193
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	80 81       	ld	r24, Z
    1278:	80 68       	ori	r24, 0x80	; 128
    127a:	80 83       	st	Z, r24
	//Habilita o flag de interrupções globais
	sei();
    127c:	78 94       	sei
	//inicialização do LCD
			GLCD_Setup();
    127e:	0e 94 df 09 	call	0x13be	; 0x13be <GLCD_Setup>
			GLCD_SetFont(Font5x8, 5, 8, GLCD_Overwrite);
    1282:	20 e0       	ldi	r18, 0x00	; 0
    1284:	48 e0       	ldi	r20, 0x08	; 8
    1286:	65 e0       	ldi	r22, 0x05	; 5
    1288:	88 e6       	ldi	r24, 0x68	; 104
    128a:	90 e0       	ldi	r25, 0x00	; 0
    128c:	0e 94 96 0d 	call	0x1b2c	; 0x1b2c <GLCD_SetFont>
			GLCD_InvertScreen(); //de preto pra branco 
    1290:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <GLCD_InvertScreen>
	
	while(1)
	{
		anima_velocidade(Velocidade_carro_KmH, &flag_5ms);
    1294:	6f ea       	ldi	r22, 0xAF	; 175
    1296:	71 e0       	ldi	r23, 0x01	; 1
    1298:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <Velocidade_carro_KmH>
    129c:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <Velocidade_carro_KmH+0x1>
    12a0:	0e 94 18 05 	call	0xa30	; 0xa30 <anima_velocidade>
		anima_LCD(Diametro_pneu_cm, RPM_motor, Distancia_hodometro_km, &flag_500ms);
    12a4:	20 91 94 01 	lds	r18, 0x0194	; 0x800194 <Distancia_hodometro_km>
    12a8:	30 91 95 01 	lds	r19, 0x0195	; 0x800195 <Distancia_hodometro_km+0x1>
    12ac:	40 91 96 01 	lds	r20, 0x0196	; 0x800196 <Distancia_hodometro_km+0x2>
    12b0:	50 91 97 01 	lds	r21, 0x0197	; 0x800197 <Distancia_hodometro_km+0x3>
    12b4:	60 91 ac 01 	lds	r22, 0x01AC	; 0x8001ac <RPM_motor>
    12b8:	70 91 ad 01 	lds	r23, 0x01AD	; 0x8001ad <RPM_motor+0x1>
    12bc:	0e ea       	ldi	r16, 0xAE	; 174
    12be:	11 e0       	ldi	r17, 0x01	; 1
    12c0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
    12c4:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
    12c8:	0e 94 b1 05 	call	0xb62	; 0xb62 <anima_LCD>
    12cc:	e3 cf       	rjmp	.-58     	; 0x1294 <main+0x110>

000012ce <GLCD_Send>:
		width += GLCD_GetWidthChar(r);
		r = pgm_read_byte(Text++);
	}
	
	return width;
}
    12ce:	ef 92       	push	r14
    12d0:	ff 92       	push	r15
    12d2:	0f 93       	push	r16
    12d4:	1f 93       	push	r17
    12d6:	cf 93       	push	r28
    12d8:	df 93       	push	r29
    12da:	c8 2f       	mov	r28, r24
    12dc:	7b 01       	movw	r14, r22
    12de:	14 2f       	mov	r17, r20
    12e0:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <TWI_BeginTransmission>
    12e4:	88 e7       	ldi	r24, 0x78	; 120
    12e6:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <TWI_Transmit>
    12ea:	8c 2f       	mov	r24, r28
    12ec:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <TWI_Transmit>
    12f0:	11 23       	and	r17, r17
    12f2:	71 f0       	breq	.+28     	; 0x1310 <GLCD_Send+0x42>
    12f4:	e7 01       	movw	r28, r14
    12f6:	11 50       	subi	r17, 0x01	; 1
    12f8:	01 2f       	mov	r16, r17
    12fa:	10 e0       	ldi	r17, 0x00	; 0
    12fc:	0f 5f       	subi	r16, 0xFF	; 255
    12fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1300:	0e 0d       	add	r16, r14
    1302:	1f 1d       	adc	r17, r15
    1304:	89 91       	ld	r24, Y+
    1306:	0e 94 50 0f 	call	0x1ea0	; 0x1ea0 <TWI_Transmit>
    130a:	c0 17       	cp	r28, r16
    130c:	d1 07       	cpc	r29, r17
    130e:	d1 f7       	brne	.-12     	; 0x1304 <GLCD_Send+0x36>
    1310:	0e 94 47 0f 	call	0x1e8e	; 0x1e8e <TWI_EndTransmission>
    1314:	df 91       	pop	r29
    1316:	cf 91       	pop	r28
    1318:	1f 91       	pop	r17
    131a:	0f 91       	pop	r16
    131c:	ff 90       	pop	r15
    131e:	ef 90       	pop	r14
    1320:	08 95       	ret

00001322 <GLCD_SendCommand>:
    1322:	cf 93       	push	r28
    1324:	df 93       	push	r29
    1326:	1f 92       	push	r1
    1328:	cd b7       	in	r28, 0x3d	; 61
    132a:	de b7       	in	r29, 0x3e	; 62
    132c:	89 83       	std	Y+1, r24	; 0x01
    132e:	41 e0       	ldi	r20, 0x01	; 1
    1330:	be 01       	movw	r22, r28
    1332:	6f 5f       	subi	r22, 0xFF	; 255
    1334:	7f 4f       	sbci	r23, 0xFF	; 255
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	0e 94 67 09 	call	0x12ce	; 0x12ce <GLCD_Send>
    133c:	0f 90       	pop	r0
    133e:	df 91       	pop	r29
    1340:	cf 91       	pop	r28
    1342:	08 95       	ret

00001344 <GLCD_Render>:
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
    1348:	81 e2       	ldi	r24, 0x21	; 33
    134a:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    134e:	80 e0       	ldi	r24, 0x00	; 0
    1350:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1354:	8f e7       	ldi	r24, 0x7F	; 127
    1356:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    135a:	82 e2       	ldi	r24, 0x22	; 34
    135c:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1366:	87 e0       	ldi	r24, 0x07	; 7
    1368:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    136c:	c0 e0       	ldi	r28, 0x00	; 0
    136e:	d0 e0       	ldi	r29, 0x00	; 0
    1370:	be 01       	movw	r22, r28
    1372:	62 95       	swap	r22
    1374:	72 95       	swap	r23
    1376:	70 7f       	andi	r23, 0xF0	; 240
    1378:	76 27       	eor	r23, r22
    137a:	60 7f       	andi	r22, 0xF0	; 240
    137c:	76 27       	eor	r23, r22
    137e:	6f 53       	subi	r22, 0x3F	; 63
    1380:	7e 4f       	sbci	r23, 0xFE	; 254
    1382:	40 e1       	ldi	r20, 0x10	; 16
    1384:	80 e4       	ldi	r24, 0x40	; 64
    1386:	0e 94 67 09 	call	0x12ce	; 0x12ce <GLCD_Send>
    138a:	21 96       	adiw	r28, 0x01	; 1
    138c:	c0 34       	cpi	r28, 0x40	; 64
    138e:	d1 05       	cpc	r29, r1
    1390:	79 f7       	brne	.-34     	; 0x1370 <GLCD_Render+0x2c>
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	08 95       	ret

00001398 <GLCD_GotoX>:
    1398:	88 23       	and	r24, r24
    139a:	14 f0       	brlt	.+4      	; 0x13a0 <GLCD_GotoX+0x8>
    139c:	80 93 b8 01 	sts	0x01B8, r24	; 0x8001b8 <__GLCD>
    13a0:	08 95       	ret

000013a2 <GLCD_GotoY>:
    13a2:	80 34       	cpi	r24, 0x40	; 64
    13a4:	10 f4       	brcc	.+4      	; 0x13aa <GLCD_GotoY+0x8>
    13a6:	80 93 b9 01 	sts	0x01B9, r24	; 0x8001b9 <__GLCD+0x1>
    13aa:	08 95       	ret

000013ac <GLCD_GotoXY>:
    13ac:	cf 93       	push	r28
    13ae:	c6 2f       	mov	r28, r22
    13b0:	0e 94 cc 09 	call	0x1398	; 0x1398 <GLCD_GotoX>
    13b4:	8c 2f       	mov	r24, r28
    13b6:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <GLCD_GotoY>
    13ba:	cf 91       	pop	r28
    13bc:	08 95       	ret

000013be <GLCD_Setup>:
    13be:	0e 94 2e 0f 	call	0x1e5c	; 0x1e5c <TWI_Setup>
    13c2:	8e ea       	ldi	r24, 0xAE	; 174
    13c4:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13c8:	85 ed       	ldi	r24, 0xD5	; 213
    13ca:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13ce:	80 ef       	ldi	r24, 0xF0	; 240
    13d0:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13d4:	88 ea       	ldi	r24, 0xA8	; 168
    13d6:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13da:	8f e3       	ldi	r24, 0x3F	; 63
    13dc:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13e0:	83 ed       	ldi	r24, 0xD3	; 211
    13e2:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13e6:	80 e0       	ldi	r24, 0x00	; 0
    13e8:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13ec:	8d e8       	ldi	r24, 0x8D	; 141
    13ee:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13f2:	84 e1       	ldi	r24, 0x14	; 20
    13f4:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13f8:	80 e4       	ldi	r24, 0x40	; 64
    13fa:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    13fe:	80 e2       	ldi	r24, 0x20	; 32
    1400:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    140a:	81 ea       	ldi	r24, 0xA1	; 161
    140c:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1410:	88 ec       	ldi	r24, 0xC8	; 200
    1412:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1416:	8a ed       	ldi	r24, 0xDA	; 218
    1418:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    141c:	82 e1       	ldi	r24, 0x12	; 18
    141e:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1422:	81 e8       	ldi	r24, 0x81	; 129
    1424:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    142e:	89 ed       	ldi	r24, 0xD9	; 217
    1430:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1434:	81 ef       	ldi	r24, 0xF1	; 241
    1436:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    143a:	8b ed       	ldi	r24, 0xDB	; 219
    143c:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1440:	80 e2       	ldi	r24, 0x20	; 32
    1442:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1446:	84 ea       	ldi	r24, 0xA4	; 164
    1448:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    144c:	86 ea       	ldi	r24, 0xA6	; 166
    144e:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1452:	8e e2       	ldi	r24, 0x2E	; 46
    1454:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1458:	8f ea       	ldi	r24, 0xAF	; 175
    145a:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    145e:	60 e0       	ldi	r22, 0x00	; 0
    1460:	80 e0       	ldi	r24, 0x00	; 0
    1462:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
    1466:	e8 eb       	ldi	r30, 0xB8	; 184
    1468:	f1 e0       	ldi	r31, 0x01	; 1
    146a:	86 ea       	ldi	r24, 0xA6	; 166
    146c:	82 83       	std	Z+2, r24	; 0x02
    146e:	17 82       	std	Z+7, r1	; 0x07
    1470:	16 82       	std	Z+6, r1	; 0x06
    1472:	15 82       	std	Z+5, r1	; 0x05
    1474:	11 82       	std	Z+1, r1	; 0x01
    1476:	10 82       	st	Z, r1
    1478:	08 95       	ret

0000147a <GLCD_SetPixel>:
    147a:	cf 93       	push	r28
    147c:	df 93       	push	r29
    147e:	c6 2f       	mov	r28, r22
    1480:	d4 2f       	mov	r29, r20
    1482:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
    1486:	e8 eb       	ldi	r30, 0xB8	; 184
    1488:	f1 e0       	ldi	r31, 0x01	; 1
    148a:	21 81       	ldd	r18, Z+1	; 0x01
    148c:	26 95       	lsr	r18
    148e:	26 95       	lsr	r18
    1490:	26 95       	lsr	r18
    1492:	80 81       	ld	r24, Z
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	30 e8       	ldi	r19, 0x80	; 128
    1498:	23 9f       	mul	r18, r19
    149a:	80 0d       	add	r24, r0
    149c:	91 1d       	adc	r25, r1
    149e:	11 24       	eor	r1, r1
    14a0:	fc 01       	movw	r30, r24
    14a2:	ef 53       	subi	r30, 0x3F	; 63
    14a4:	fe 4f       	sbci	r31, 0xFE	; 254
    14a6:	20 81       	ld	r18, Z
    14a8:	df 3f       	cpi	r29, 0xFF	; 255
    14aa:	71 f4       	brne	.+28     	; 0x14c8 <GLCD_SetPixel+0x4e>
    14ac:	c7 70       	andi	r28, 0x07	; 7
    14ae:	41 e0       	ldi	r20, 0x01	; 1
    14b0:	50 e0       	ldi	r21, 0x00	; 0
    14b2:	60 e0       	ldi	r22, 0x00	; 0
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	04 c0       	rjmp	.+8      	; 0x14c0 <GLCD_SetPixel+0x46>
    14b8:	44 0f       	add	r20, r20
    14ba:	55 1f       	adc	r21, r21
    14bc:	66 1f       	adc	r22, r22
    14be:	77 1f       	adc	r23, r23
    14c0:	ca 95       	dec	r28
    14c2:	d2 f7       	brpl	.-12     	; 0x14b8 <GLCD_SetPixel+0x3e>
    14c4:	42 2b       	or	r20, r18
    14c6:	0e c0       	rjmp	.+28     	; 0x14e4 <GLCD_SetPixel+0x6a>
    14c8:	c7 70       	andi	r28, 0x07	; 7
    14ca:	41 e0       	ldi	r20, 0x01	; 1
    14cc:	50 e0       	ldi	r21, 0x00	; 0
    14ce:	60 e0       	ldi	r22, 0x00	; 0
    14d0:	70 e0       	ldi	r23, 0x00	; 0
    14d2:	04 c0       	rjmp	.+8      	; 0x14dc <GLCD_SetPixel+0x62>
    14d4:	44 0f       	add	r20, r20
    14d6:	55 1f       	adc	r21, r21
    14d8:	66 1f       	adc	r22, r22
    14da:	77 1f       	adc	r23, r23
    14dc:	ca 95       	dec	r28
    14de:	d2 f7       	brpl	.-12     	; 0x14d4 <GLCD_SetPixel+0x5a>
    14e0:	40 95       	com	r20
    14e2:	42 23       	and	r20, r18
    14e4:	fc 01       	movw	r30, r24
    14e6:	ef 53       	subi	r30, 0x3F	; 63
    14e8:	fe 4f       	sbci	r31, 0xFE	; 254
    14ea:	40 83       	st	Z, r20
    14ec:	df 91       	pop	r29
    14ee:	cf 91       	pop	r28
    14f0:	08 95       	ret

000014f2 <GLCD_SetPixels>:
    14f2:	9f 92       	push	r9
    14f4:	af 92       	push	r10
    14f6:	bf 92       	push	r11
    14f8:	cf 92       	push	r12
    14fa:	df 92       	push	r13
    14fc:	ef 92       	push	r14
    14fe:	ff 92       	push	r15
    1500:	0f 93       	push	r16
    1502:	1f 93       	push	r17
    1504:	cf 93       	push	r28
    1506:	df 93       	push	r29
    1508:	88 23       	and	r24, r24
    150a:	0c f4       	brge	.+2      	; 0x150e <GLCD_SetPixels+0x1c>
    150c:	c0 c0       	rjmp	.+384    	; 0x168e <GLCD_SetPixels+0x19c>
    150e:	44 23       	and	r20, r20
    1510:	0c f4       	brge	.+2      	; 0x1514 <GLCD_SetPixels+0x22>
    1512:	bd c0       	rjmp	.+378    	; 0x168e <GLCD_SetPixels+0x19c>
    1514:	60 34       	cpi	r22, 0x40	; 64
    1516:	08 f0       	brcs	.+2      	; 0x151a <GLCD_SetPixels+0x28>
    1518:	ba c0       	rjmp	.+372    	; 0x168e <GLCD_SetPixels+0x19c>
    151a:	20 34       	cpi	r18, 0x40	; 64
    151c:	08 f0       	brcs	.+2      	; 0x1520 <GLCD_SetPixels+0x2e>
    151e:	b7 c0       	rjmp	.+366    	; 0x168e <GLCD_SetPixels+0x19c>
    1520:	2f 5f       	subi	r18, 0xFF	; 255
    1522:	a2 2e       	mov	r10, r18
    1524:	a6 1a       	sub	r10, r22
    1526:	4f 5f       	subi	r20, 0xFF	; 255
    1528:	d4 2e       	mov	r13, r20
    152a:	d8 1a       	sub	r13, r24
    152c:	96 2f       	mov	r25, r22
    152e:	97 70       	andi	r25, 0x07	; 7
    1530:	96 2e       	mov	r9, r22
    1532:	99 1a       	sub	r9, r25
    1534:	ea 2c       	mov	r14, r10
    1536:	f1 2c       	mov	r15, r1
    1538:	28 e0       	ldi	r18, 0x08	; 8
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	29 1b       	sub	r18, r25
    153e:	31 09       	sbc	r19, r1
    1540:	e2 16       	cp	r14, r18
    1542:	f3 06       	cpc	r15, r19
    1544:	6c f4       	brge	.+26     	; 0x1560 <GLCD_SetPixels+0x6e>
    1546:	28 e0       	ldi	r18, 0x08	; 8
    1548:	30 e0       	ldi	r19, 0x00	; 0
    154a:	2e 19       	sub	r18, r14
    154c:	3f 09       	sbc	r19, r15
    154e:	cf ef       	ldi	r28, 0xFF	; 255
    1550:	d0 e0       	ldi	r29, 0x00	; 0
    1552:	02 c0       	rjmp	.+4      	; 0x1558 <GLCD_SetPixels+0x66>
    1554:	d5 95       	asr	r29
    1556:	c7 95       	ror	r28
    1558:	2a 95       	dec	r18
    155a:	e2 f7       	brpl	.-8      	; 0x1554 <GLCD_SetPixels+0x62>
    155c:	ba 2c       	mov	r11, r10
    155e:	04 c0       	rjmp	.+8      	; 0x1568 <GLCD_SetPixels+0x76>
    1560:	28 e0       	ldi	r18, 0x08	; 8
    1562:	b2 2e       	mov	r11, r18
    1564:	b9 1a       	sub	r11, r25
    1566:	cf ef       	ldi	r28, 0xFF	; 255
    1568:	c8 2e       	mov	r12, r24
    156a:	d0 e0       	ldi	r29, 0x00	; 0
    156c:	02 c0       	rjmp	.+4      	; 0x1572 <GLCD_SetPixels+0x80>
    156e:	cc 0f       	add	r28, r28
    1570:	dd 1f       	adc	r29, r29
    1572:	9a 95       	dec	r25
    1574:	e2 f7       	brpl	.-8      	; 0x156e <GLCD_SetPixels+0x7c>
    1576:	1c 2f       	mov	r17, r28
    1578:	69 2d       	mov	r22, r9
    157a:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
    157e:	dd 20       	and	r13, r13
    1580:	09 f4       	brne	.+2      	; 0x1584 <GLCD_SetPixels+0x92>
    1582:	41 c0       	rjmp	.+130    	; 0x1606 <GLCD_SetPixels+0x114>
    1584:	e8 eb       	ldi	r30, 0xB8	; 184
    1586:	f1 e0       	ldi	r31, 0x01	; 1
    1588:	20 81       	ld	r18, Z
    158a:	41 81       	ldd	r20, Z+1	; 0x01
    158c:	46 95       	lsr	r20
    158e:	46 95       	lsr	r20
    1590:	46 95       	lsr	r20
    1592:	80 e8       	ldi	r24, 0x80	; 128
    1594:	48 9f       	mul	r20, r24
    1596:	a0 01       	movw	r20, r0
    1598:	11 24       	eor	r1, r1
    159a:	6d 2d       	mov	r22, r13
    159c:	62 0f       	add	r22, r18
    159e:	c0 95       	com	r28
    15a0:	ca 01       	movw	r24, r20
    15a2:	82 0f       	add	r24, r18
    15a4:	91 1d       	adc	r25, r1
    15a6:	fc 01       	movw	r30, r24
    15a8:	ef 53       	subi	r30, 0x3F	; 63
    15aa:	fe 4f       	sbci	r31, 0xFE	; 254
    15ac:	30 81       	ld	r19, Z
    15ae:	0f 3f       	cpi	r16, 0xFF	; 255
    15b0:	11 f4       	brne	.+4      	; 0x15b6 <GLCD_SetPixels+0xc4>
    15b2:	31 2b       	or	r19, r17
    15b4:	01 c0       	rjmp	.+2      	; 0x15b8 <GLCD_SetPixels+0xc6>
    15b6:	3c 23       	and	r19, r28
    15b8:	fc 01       	movw	r30, r24
    15ba:	ef 53       	subi	r30, 0x3F	; 63
    15bc:	fe 4f       	sbci	r31, 0xFE	; 254
    15be:	30 83       	st	Z, r19
    15c0:	2f 5f       	subi	r18, 0xFF	; 255
    15c2:	62 13       	cpse	r22, r18
    15c4:	ed cf       	rjmp	.-38     	; 0x15a0 <GLCD_SetPixels+0xae>
    15c6:	60 93 b8 01 	sts	0x01B8, r22	; 0x8001b8 <__GLCD>
    15ca:	1d c0       	rjmp	.+58     	; 0x1606 <GLCD_SetPixels+0x114>
    15cc:	18 5f       	subi	r17, 0xF8	; 248
    15ce:	61 2f       	mov	r22, r17
    15d0:	8c 2d       	mov	r24, r12
    15d2:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
    15d6:	dd 20       	and	r13, r13
    15d8:	d1 f0       	breq	.+52     	; 0x160e <GLCD_SetPixels+0x11c>
    15da:	98 81       	ld	r25, Y
    15dc:	29 81       	ldd	r18, Y+1	; 0x01
    15de:	26 95       	lsr	r18
    15e0:	26 95       	lsr	r18
    15e2:	26 95       	lsr	r18
    15e4:	80 e8       	ldi	r24, 0x80	; 128
    15e6:	28 9f       	mul	r18, r24
    15e8:	90 01       	movw	r18, r0
    15ea:	11 24       	eor	r1, r1
    15ec:	89 2f       	mov	r24, r25
    15ee:	8d 0d       	add	r24, r13
    15f0:	2f 53       	subi	r18, 0x3F	; 63
    15f2:	3e 4f       	sbci	r19, 0xFE	; 254
    15f4:	f9 01       	movw	r30, r18
    15f6:	e9 0f       	add	r30, r25
    15f8:	f1 1d       	adc	r31, r1
    15fa:	00 83       	st	Z, r16
    15fc:	9f 5f       	subi	r25, 0xFF	; 255
    15fe:	89 13       	cpse	r24, r25
    1600:	f9 cf       	rjmp	.-14     	; 0x15f4 <GLCD_SetPixels+0x102>
    1602:	88 83       	st	Y, r24
    1604:	04 c0       	rjmp	.+8      	; 0x160e <GLCD_SetPixels+0x11c>
    1606:	19 2d       	mov	r17, r9
    1608:	b9 18       	sub	r11, r9
    160a:	c8 eb       	ldi	r28, 0xB8	; 184
    160c:	d1 e0       	ldi	r29, 0x01	; 1
    160e:	8b 2d       	mov	r24, r11
    1610:	81 0f       	add	r24, r17
    1612:	28 2f       	mov	r18, r24
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	a9 01       	movw	r20, r18
    1618:	48 5f       	subi	r20, 0xF8	; 248
    161a:	5f 4f       	sbci	r21, 0xFF	; 255
    161c:	e4 16       	cp	r14, r20
    161e:	f5 06       	cpc	r15, r21
    1620:	ac f6       	brge	.-86     	; 0x15cc <GLCD_SetPixels+0xda>
    1622:	8a 15       	cp	r24, r10
    1624:	a0 f5       	brcc	.+104    	; 0x168e <GLCD_SetPixels+0x19c>
    1626:	e2 1a       	sub	r14, r18
    1628:	f3 0a       	sbc	r15, r19
    162a:	cf ef       	ldi	r28, 0xFF	; 255
    162c:	d0 e0       	ldi	r29, 0x00	; 0
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <GLCD_SetPixels+0x142>
    1630:	cc 0f       	add	r28, r28
    1632:	dd 1f       	adc	r29, r29
    1634:	ea 94       	dec	r14
    1636:	e2 f7       	brpl	.-8      	; 0x1630 <GLCD_SetPixels+0x13e>
    1638:	c0 95       	com	r28
    163a:	68 e0       	ldi	r22, 0x08	; 8
    163c:	61 0f       	add	r22, r17
    163e:	8c 2d       	mov	r24, r12
    1640:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
    1644:	dd 20       	and	r13, r13
    1646:	19 f1       	breq	.+70     	; 0x168e <GLCD_SetPixels+0x19c>
    1648:	e8 eb       	ldi	r30, 0xB8	; 184
    164a:	f1 e0       	ldi	r31, 0x01	; 1
    164c:	20 81       	ld	r18, Z
    164e:	41 81       	ldd	r20, Z+1	; 0x01
    1650:	46 95       	lsr	r20
    1652:	46 95       	lsr	r20
    1654:	46 95       	lsr	r20
    1656:	80 e8       	ldi	r24, 0x80	; 128
    1658:	48 9f       	mul	r20, r24
    165a:	a0 01       	movw	r20, r0
    165c:	11 24       	eor	r1, r1
    165e:	d2 0e       	add	r13, r18
    1660:	6c 2f       	mov	r22, r28
    1662:	60 95       	com	r22
    1664:	ca 01       	movw	r24, r20
    1666:	82 0f       	add	r24, r18
    1668:	91 1d       	adc	r25, r1
    166a:	fc 01       	movw	r30, r24
    166c:	ef 53       	subi	r30, 0x3F	; 63
    166e:	fe 4f       	sbci	r31, 0xFE	; 254
    1670:	30 81       	ld	r19, Z
    1672:	0f 3f       	cpi	r16, 0xFF	; 255
    1674:	11 f4       	brne	.+4      	; 0x167a <GLCD_SetPixels+0x188>
    1676:	3c 2b       	or	r19, r28
    1678:	01 c0       	rjmp	.+2      	; 0x167c <GLCD_SetPixels+0x18a>
    167a:	36 23       	and	r19, r22
    167c:	fc 01       	movw	r30, r24
    167e:	ef 53       	subi	r30, 0x3F	; 63
    1680:	fe 4f       	sbci	r31, 0xFE	; 254
    1682:	30 83       	st	Z, r19
    1684:	2f 5f       	subi	r18, 0xFF	; 255
    1686:	d2 12       	cpse	r13, r18
    1688:	ed cf       	rjmp	.-38     	; 0x1664 <GLCD_SetPixels+0x172>
    168a:	d0 92 b8 01 	sts	0x01B8, r13	; 0x8001b8 <__GLCD>
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	1f 91       	pop	r17
    1694:	0f 91       	pop	r16
    1696:	ff 90       	pop	r15
    1698:	ef 90       	pop	r14
    169a:	df 90       	pop	r13
    169c:	cf 90       	pop	r12
    169e:	bf 90       	pop	r11
    16a0:	af 90       	pop	r10
    16a2:	9f 90       	pop	r9
    16a4:	08 95       	ret

000016a6 <GLCD_DrawLine>:
    16a6:	8f 92       	push	r8
    16a8:	9f 92       	push	r9
    16aa:	af 92       	push	r10
    16ac:	bf 92       	push	r11
    16ae:	cf 92       	push	r12
    16b0:	df 92       	push	r13
    16b2:	ef 92       	push	r14
    16b4:	ff 92       	push	r15
    16b6:	0f 93       	push	r16
    16b8:	1f 93       	push	r17
    16ba:	cf 93       	push	r28
    16bc:	df 93       	push	r29
    16be:	c8 2f       	mov	r28, r24
    16c0:	d6 2f       	mov	r29, r22
    16c2:	f4 2e       	mov	r15, r20
    16c4:	88 23       	and	r24, r24
    16c6:	0c f4       	brge	.+2      	; 0x16ca <GLCD_DrawLine+0x24>
    16c8:	95 c0       	rjmp	.+298    	; 0x17f4 <GLCD_DrawLine+0x14e>
    16ca:	44 23       	and	r20, r20
    16cc:	0c f4       	brge	.+2      	; 0x16d0 <GLCD_DrawLine+0x2a>
    16ce:	92 c0       	rjmp	.+292    	; 0x17f4 <GLCD_DrawLine+0x14e>
    16d0:	60 34       	cpi	r22, 0x40	; 64
    16d2:	08 f0       	brcs	.+2      	; 0x16d6 <GLCD_DrawLine+0x30>
    16d4:	8f c0       	rjmp	.+286    	; 0x17f4 <GLCD_DrawLine+0x14e>
    16d6:	20 34       	cpi	r18, 0x40	; 64
    16d8:	08 f0       	brcs	.+2      	; 0x16dc <GLCD_DrawLine+0x36>
    16da:	8c c0       	rjmp	.+280    	; 0x17f4 <GLCD_DrawLine+0x14e>
    16dc:	84 13       	cpse	r24, r20
    16de:	0a c0       	rjmp	.+20     	; 0x16f4 <GLCD_DrawLine+0x4e>
    16e0:	26 17       	cp	r18, r22
    16e2:	10 f4       	brcc	.+4      	; 0x16e8 <GLCD_DrawLine+0x42>
    16e4:	d2 2f       	mov	r29, r18
    16e6:	26 2f       	mov	r18, r22
    16e8:	4c 2f       	mov	r20, r28
    16ea:	6d 2f       	mov	r22, r29
    16ec:	8c 2f       	mov	r24, r28
    16ee:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    16f2:	80 c0       	rjmp	.+256    	; 0x17f4 <GLCD_DrawLine+0x14e>
    16f4:	62 13       	cpse	r22, r18
    16f6:	0d c0       	rjmp	.+26     	; 0x1712 <GLCD_DrawLine+0x6c>
    16f8:	48 17       	cp	r20, r24
    16fa:	10 f4       	brcc	.+4      	; 0x1700 <GLCD_DrawLine+0x5a>
    16fc:	c4 2f       	mov	r28, r20
    16fe:	f8 2e       	mov	r15, r24
    1700:	40 2f       	mov	r20, r16
    1702:	6d 2f       	mov	r22, r29
    1704:	8c 2f       	mov	r24, r28
    1706:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    170a:	cf 5f       	subi	r28, 0xFF	; 255
    170c:	fc 16       	cp	r15, r28
    170e:	c0 f7       	brcc	.-16     	; 0x1700 <GLCD_DrawLine+0x5a>
    1710:	71 c0       	rjmp	.+226    	; 0x17f4 <GLCD_DrawLine+0x14e>
    1712:	26 17       	cp	r18, r22
    1714:	28 f4       	brcc	.+10     	; 0x1720 <GLCD_DrawLine+0x7a>
    1716:	c6 2e       	mov	r12, r22
    1718:	d1 2c       	mov	r13, r1
    171a:	c2 1a       	sub	r12, r18
    171c:	d1 08       	sbc	r13, r1
    171e:	04 c0       	rjmp	.+8      	; 0x1728 <GLCD_DrawLine+0x82>
    1720:	c2 2e       	mov	r12, r18
    1722:	d1 2c       	mov	r13, r1
    1724:	c6 1a       	sub	r12, r22
    1726:	d1 08       	sbc	r13, r1
    1728:	fc 16       	cp	r15, r28
    172a:	78 f4       	brcc	.+30     	; 0x174a <GLCD_DrawLine+0xa4>
    172c:	ac 2e       	mov	r10, r28
    172e:	b1 2c       	mov	r11, r1
    1730:	af 18       	sub	r10, r15
    1732:	b1 08       	sbc	r11, r1
    1734:	ac 14       	cp	r10, r12
    1736:	bd 04       	cpc	r11, r13
    1738:	0c f4       	brge	.+2      	; 0x173c <GLCD_DrawLine+0x96>
    173a:	41 c0       	rjmp	.+130    	; 0x17be <GLCD_DrawLine+0x118>
    173c:	8d 2f       	mov	r24, r29
    173e:	d2 2f       	mov	r29, r18
    1740:	28 2f       	mov	r18, r24
    1742:	8c 2f       	mov	r24, r28
    1744:	cf 2d       	mov	r28, r15
    1746:	f8 2e       	mov	r15, r24
    1748:	08 c0       	rjmp	.+16     	; 0x175a <GLCD_DrawLine+0xb4>
    174a:	af 2c       	mov	r10, r15
    174c:	b1 2c       	mov	r11, r1
    174e:	ac 1a       	sub	r10, r28
    1750:	b1 08       	sbc	r11, r1
    1752:	ac 14       	cp	r10, r12
    1754:	bd 04       	cpc	r11, r13
    1756:	0c f4       	brge	.+2      	; 0x175a <GLCD_DrawLine+0xb4>
    1758:	44 c0       	rjmp	.+136    	; 0x17e2 <GLCD_DrawLine+0x13c>
    175a:	9f 2c       	mov	r9, r15
    175c:	9c 1a       	sub	r9, r28
    175e:	d2 17       	cp	r29, r18
    1760:	38 f4       	brcc	.+14     	; 0x1770 <GLCD_DrawLine+0xca>
    1762:	e2 2e       	mov	r14, r18
    1764:	ed 1a       	sub	r14, r29
    1766:	19 2d       	mov	r17, r9
    1768:	16 95       	lsr	r17
    176a:	88 24       	eor	r8, r8
    176c:	83 94       	inc	r8
    176e:	06 c0       	rjmp	.+12     	; 0x177c <GLCD_DrawLine+0xd6>
    1770:	ed 2e       	mov	r14, r29
    1772:	e2 1a       	sub	r14, r18
    1774:	19 2d       	mov	r17, r9
    1776:	16 95       	lsr	r17
    1778:	88 24       	eor	r8, r8
    177a:	8a 94       	dec	r8
    177c:	fc 16       	cp	r15, r28
    177e:	d0 f1       	brcs	.+116    	; 0x17f4 <GLCD_DrawLine+0x14e>
    1780:	ac 14       	cp	r10, r12
    1782:	bd 04       	cpc	r11, r13
    1784:	34 f4       	brge	.+12     	; 0x1792 <GLCD_DrawLine+0xec>
    1786:	40 2f       	mov	r20, r16
    1788:	6c 2f       	mov	r22, r28
    178a:	8d 2f       	mov	r24, r29
    178c:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    1790:	05 c0       	rjmp	.+10     	; 0x179c <GLCD_DrawLine+0xf6>
    1792:	40 2f       	mov	r20, r16
    1794:	6d 2f       	mov	r22, r29
    1796:	8c 2f       	mov	r24, r28
    1798:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    179c:	1e 19       	sub	r17, r14
    179e:	12 f4       	brpl	.+4      	; 0x17a4 <GLCD_DrawLine+0xfe>
    17a0:	d8 0d       	add	r29, r8
    17a2:	19 0d       	add	r17, r9
    17a4:	cf 5f       	subi	r28, 0xFF	; 255
    17a6:	fc 16       	cp	r15, r28
    17a8:	58 f7       	brcc	.-42     	; 0x1780 <GLCD_DrawLine+0xda>
    17aa:	24 c0       	rjmp	.+72     	; 0x17f4 <GLCD_DrawLine+0x14e>
    17ac:	9d 2e       	mov	r9, r29
    17ae:	92 1a       	sub	r9, r18
    17b0:	8d 2f       	mov	r24, r29
    17b2:	df 2d       	mov	r29, r15
    17b4:	f8 2e       	mov	r15, r24
    17b6:	8c 2f       	mov	r24, r28
    17b8:	c2 2f       	mov	r28, r18
    17ba:	28 2f       	mov	r18, r24
    17bc:	d2 cf       	rjmp	.-92     	; 0x1762 <GLCD_DrawLine+0xbc>
    17be:	2d 17       	cp	r18, r29
    17c0:	a8 f3       	brcs	.-22     	; 0x17ac <GLCD_DrawLine+0x106>
    17c2:	8f 2d       	mov	r24, r15
    17c4:	f2 2e       	mov	r15, r18
    17c6:	28 2f       	mov	r18, r24
    17c8:	8c 2f       	mov	r24, r28
    17ca:	cd 2f       	mov	r28, r29
    17cc:	d8 2f       	mov	r29, r24
    17ce:	c5 cf       	rjmp	.-118    	; 0x175a <GLCD_DrawLine+0xb4>
    17d0:	9d 2e       	mov	r9, r29
    17d2:	92 1a       	sub	r9, r18
    17d4:	8d 2f       	mov	r24, r29
    17d6:	df 2d       	mov	r29, r15
    17d8:	f8 2e       	mov	r15, r24
    17da:	8c 2f       	mov	r24, r28
    17dc:	c2 2f       	mov	r28, r18
    17de:	28 2f       	mov	r18, r24
    17e0:	c7 cf       	rjmp	.-114    	; 0x1770 <GLCD_DrawLine+0xca>
    17e2:	2d 17       	cp	r18, r29
    17e4:	a8 f3       	brcs	.-22     	; 0x17d0 <GLCD_DrawLine+0x12a>
    17e6:	8f 2d       	mov	r24, r15
    17e8:	f2 2e       	mov	r15, r18
    17ea:	28 2f       	mov	r18, r24
    17ec:	8c 2f       	mov	r24, r28
    17ee:	cd 2f       	mov	r28, r29
    17f0:	d8 2f       	mov	r29, r24
    17f2:	b3 cf       	rjmp	.-154    	; 0x175a <GLCD_DrawLine+0xb4>
    17f4:	df 91       	pop	r29
    17f6:	cf 91       	pop	r28
    17f8:	1f 91       	pop	r17
    17fa:	0f 91       	pop	r16
    17fc:	ff 90       	pop	r15
    17fe:	ef 90       	pop	r14
    1800:	df 90       	pop	r13
    1802:	cf 90       	pop	r12
    1804:	bf 90       	pop	r11
    1806:	af 90       	pop	r10
    1808:	9f 90       	pop	r9
    180a:	8f 90       	pop	r8
    180c:	08 95       	ret

0000180e <GLCD_DrawRectangle>:
    180e:	df 92       	push	r13
    1810:	ef 92       	push	r14
    1812:	ff 92       	push	r15
    1814:	0f 93       	push	r16
    1816:	1f 93       	push	r17
    1818:	cf 93       	push	r28
    181a:	df 93       	push	r29
    181c:	88 23       	and	r24, r24
    181e:	0c f4       	brge	.+2      	; 0x1822 <GLCD_DrawRectangle+0x14>
    1820:	49 c0       	rjmp	.+146    	; 0x18b4 <GLCD_DrawRectangle+0xa6>
    1822:	44 23       	and	r20, r20
    1824:	0c f4       	brge	.+2      	; 0x1828 <GLCD_DrawRectangle+0x1a>
    1826:	46 c0       	rjmp	.+140    	; 0x18b4 <GLCD_DrawRectangle+0xa6>
    1828:	60 34       	cpi	r22, 0x40	; 64
    182a:	08 f0       	brcs	.+2      	; 0x182e <GLCD_DrawRectangle+0x20>
    182c:	43 c0       	rjmp	.+134    	; 0x18b4 <GLCD_DrawRectangle+0xa6>
    182e:	20 34       	cpi	r18, 0x40	; 64
    1830:	08 f0       	brcs	.+2      	; 0x1834 <GLCD_DrawRectangle+0x26>
    1832:	40 c0       	rjmp	.+128    	; 0x18b4 <GLCD_DrawRectangle+0xa6>
    1834:	d0 2f       	mov	r29, r16
    1836:	f2 2e       	mov	r15, r18
    1838:	d4 2e       	mov	r13, r20
    183a:	16 2f       	mov	r17, r22
    183c:	e8 2e       	mov	r14, r24
    183e:	48 17       	cp	r20, r24
    1840:	f8 f4       	brcc	.+62     	; 0x1880 <GLCD_DrawRectangle+0x72>
    1842:	08 2f       	mov	r16, r24
    1844:	c4 2f       	mov	r28, r20
    1846:	4d 2f       	mov	r20, r29
    1848:	61 2f       	mov	r22, r17
    184a:	8c 2f       	mov	r24, r28
    184c:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    1850:	cf 5f       	subi	r28, 0xFF	; 255
    1852:	0c 17       	cp	r16, r28
    1854:	c0 f7       	brcc	.-16     	; 0x1846 <GLCD_DrawRectangle+0x38>
    1856:	de 14       	cp	r13, r14
    1858:	b0 f4       	brcc	.+44     	; 0x1886 <GLCD_DrawRectangle+0x78>
    185a:	0e 2d       	mov	r16, r14
    185c:	cd 2d       	mov	r28, r13
    185e:	4d 2f       	mov	r20, r29
    1860:	6f 2d       	mov	r22, r15
    1862:	8c 2f       	mov	r24, r28
    1864:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    1868:	cf 5f       	subi	r28, 0xFF	; 255
    186a:	0c 17       	cp	r16, r28
    186c:	c0 f7       	brcc	.-16     	; 0x185e <GLCD_DrawRectangle+0x50>
    186e:	f1 16       	cp	r15, r17
    1870:	68 f0       	brcs	.+26     	; 0x188c <GLCD_DrawRectangle+0x7e>
    1872:	16 c0       	rjmp	.+44     	; 0x18a0 <GLCD_DrawRectangle+0x92>
    1874:	0d 2f       	mov	r16, r29
    1876:	4d 2d       	mov	r20, r13
    1878:	8d 2d       	mov	r24, r13
    187a:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    187e:	1a c0       	rjmp	.+52     	; 0x18b4 <GLCD_DrawRectangle+0xa6>
    1880:	04 2f       	mov	r16, r20
    1882:	c8 2f       	mov	r28, r24
    1884:	e0 cf       	rjmp	.-64     	; 0x1846 <GLCD_DrawRectangle+0x38>
    1886:	0d 2d       	mov	r16, r13
    1888:	ce 2d       	mov	r28, r14
    188a:	e9 cf       	rjmp	.-46     	; 0x185e <GLCD_DrawRectangle+0x50>
    188c:	0d 2f       	mov	r16, r29
    188e:	21 2f       	mov	r18, r17
    1890:	4e 2d       	mov	r20, r14
    1892:	6f 2d       	mov	r22, r15
    1894:	8e 2d       	mov	r24, r14
    1896:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    189a:	21 2f       	mov	r18, r17
    189c:	6f 2d       	mov	r22, r15
    189e:	ea cf       	rjmp	.-44     	; 0x1874 <GLCD_DrawRectangle+0x66>
    18a0:	0d 2f       	mov	r16, r29
    18a2:	2f 2d       	mov	r18, r15
    18a4:	4e 2d       	mov	r20, r14
    18a6:	61 2f       	mov	r22, r17
    18a8:	8e 2d       	mov	r24, r14
    18aa:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    18ae:	2f 2d       	mov	r18, r15
    18b0:	61 2f       	mov	r22, r17
    18b2:	e0 cf       	rjmp	.-64     	; 0x1874 <GLCD_DrawRectangle+0x66>
    18b4:	df 91       	pop	r29
    18b6:	cf 91       	pop	r28
    18b8:	1f 91       	pop	r17
    18ba:	0f 91       	pop	r16
    18bc:	ff 90       	pop	r15
    18be:	ef 90       	pop	r14
    18c0:	df 90       	pop	r13
    18c2:	08 95       	ret

000018c4 <GLCD_DrawRoundRectangle>:
    18c4:	6f 92       	push	r6
    18c6:	7f 92       	push	r7
    18c8:	8f 92       	push	r8
    18ca:	9f 92       	push	r9
    18cc:	af 92       	push	r10
    18ce:	bf 92       	push	r11
    18d0:	cf 92       	push	r12
    18d2:	df 92       	push	r13
    18d4:	ef 92       	push	r14
    18d6:	ff 92       	push	r15
    18d8:	0f 93       	push	r16
    18da:	1f 93       	push	r17
    18dc:	cf 93       	push	r28
    18de:	df 93       	push	r29
    18e0:	88 23       	and	r24, r24
    18e2:	0c f4       	brge	.+2      	; 0x18e6 <GLCD_DrawRoundRectangle+0x22>
    18e4:	b1 c0       	rjmp	.+354    	; 0x1a48 <GLCD_DrawRoundRectangle+0x184>
    18e6:	44 23       	and	r20, r20
    18e8:	0c f4       	brge	.+2      	; 0x18ec <GLCD_DrawRoundRectangle+0x28>
    18ea:	ae c0       	rjmp	.+348    	; 0x1a48 <GLCD_DrawRoundRectangle+0x184>
    18ec:	60 34       	cpi	r22, 0x40	; 64
    18ee:	08 f0       	brcs	.+2      	; 0x18f2 <GLCD_DrawRoundRectangle+0x2e>
    18f0:	ab c0       	rjmp	.+342    	; 0x1a48 <GLCD_DrawRoundRectangle+0x184>
    18f2:	20 34       	cpi	r18, 0x40	; 64
    18f4:	08 f0       	brcs	.+2      	; 0x18f8 <GLCD_DrawRoundRectangle+0x34>
    18f6:	a8 c0       	rjmp	.+336    	; 0x1a48 <GLCD_DrawRoundRectangle+0x184>
    18f8:	90 2e       	mov	r9, r16
    18fa:	12 2f       	mov	r17, r18
    18fc:	84 2e       	mov	r8, r20
    18fe:	d6 2f       	mov	r29, r22
    1900:	78 2e       	mov	r7, r24
    1902:	80 2f       	mov	r24, r16
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	88 0f       	add	r24, r24
    1908:	99 1f       	adc	r25, r25
    190a:	23 e0       	ldi	r18, 0x03	; 3
    190c:	30 e0       	ldi	r19, 0x00	; 0
    190e:	69 01       	movw	r12, r18
    1910:	c8 1a       	sub	r12, r24
    1912:	d9 0a       	sbc	r13, r25
    1914:	f4 2e       	mov	r15, r20
    1916:	f0 1a       	sub	r15, r16
    1918:	b7 2c       	mov	r11, r7
    191a:	b0 0e       	add	r11, r16
    191c:	fb 14       	cp	r15, r11
    191e:	08 f0       	brcs	.+2      	; 0x1922 <GLCD_DrawRoundRectangle+0x5e>
    1920:	79 c0       	rjmp	.+242    	; 0x1a14 <GLCD_DrawRoundRectangle+0x150>
    1922:	ab 2c       	mov	r10, r11
    1924:	cf 2d       	mov	r28, r15
    1926:	4e 2d       	mov	r20, r14
    1928:	6d 2f       	mov	r22, r29
    192a:	8c 2f       	mov	r24, r28
    192c:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    1930:	cf 5f       	subi	r28, 0xFF	; 255
    1932:	ac 16       	cp	r10, r28
    1934:	c0 f7       	brcc	.-16     	; 0x1926 <GLCD_DrawRoundRectangle+0x62>
    1936:	fb 14       	cp	r15, r11
    1938:	08 f0       	brcs	.+2      	; 0x193c <GLCD_DrawRoundRectangle+0x78>
    193a:	6f c0       	rjmp	.+222    	; 0x1a1a <GLCD_DrawRoundRectangle+0x156>
    193c:	ab 2c       	mov	r10, r11
    193e:	cf 2d       	mov	r28, r15
    1940:	4e 2d       	mov	r20, r14
    1942:	61 2f       	mov	r22, r17
    1944:	8c 2f       	mov	r24, r28
    1946:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    194a:	cf 5f       	subi	r28, 0xFF	; 255
    194c:	ac 16       	cp	r10, r28
    194e:	c0 f7       	brcc	.-16     	; 0x1940 <GLCD_DrawRoundRectangle+0x7c>
    1950:	19 19       	sub	r17, r9
    1952:	d9 0d       	add	r29, r9
    1954:	1d 17       	cp	r17, r29
    1956:	08 f4       	brcc	.+2      	; 0x195a <GLCD_DrawRoundRectangle+0x96>
    1958:	63 c0       	rjmp	.+198    	; 0x1a20 <GLCD_DrawRoundRectangle+0x15c>
    195a:	6c c0       	rjmp	.+216    	; 0x1a34 <GLCD_DrawRoundRectangle+0x170>
    195c:	0e 2d       	mov	r16, r14
    195e:	48 2d       	mov	r20, r8
    1960:	88 2d       	mov	r24, r8
    1962:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    1966:	09 2d       	mov	r16, r9
    1968:	c0 e0       	ldi	r28, 0x00	; 0
    196a:	4e 2d       	mov	r20, r14
    196c:	8d 2e       	mov	r8, r29
    196e:	80 1a       	sub	r8, r16
    1970:	68 2d       	mov	r22, r8
    1972:	9b 2c       	mov	r9, r11
    1974:	9c 1a       	sub	r9, r28
    1976:	89 2d       	mov	r24, r9
    1978:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    197c:	4e 2d       	mov	r20, r14
    197e:	ad 2e       	mov	r10, r29
    1980:	ac 1a       	sub	r10, r28
    1982:	6a 2d       	mov	r22, r10
    1984:	6b 2c       	mov	r6, r11
    1986:	60 1a       	sub	r6, r16
    1988:	86 2d       	mov	r24, r6
    198a:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    198e:	4e 2d       	mov	r20, r14
    1990:	68 2d       	mov	r22, r8
    1992:	8f 2c       	mov	r8, r15
    1994:	8c 0e       	add	r8, r28
    1996:	88 2d       	mov	r24, r8
    1998:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    199c:	4e 2d       	mov	r20, r14
    199e:	6a 2d       	mov	r22, r10
    19a0:	af 2c       	mov	r10, r15
    19a2:	a0 0e       	add	r10, r16
    19a4:	8a 2d       	mov	r24, r10
    19a6:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    19aa:	4e 2d       	mov	r20, r14
    19ac:	71 2e       	mov	r7, r17
    19ae:	70 0e       	add	r7, r16
    19b0:	67 2d       	mov	r22, r7
    19b2:	89 2d       	mov	r24, r9
    19b4:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    19b8:	4e 2d       	mov	r20, r14
    19ba:	91 2e       	mov	r9, r17
    19bc:	9c 0e       	add	r9, r28
    19be:	69 2d       	mov	r22, r9
    19c0:	86 2d       	mov	r24, r6
    19c2:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    19c6:	4e 2d       	mov	r20, r14
    19c8:	67 2d       	mov	r22, r7
    19ca:	88 2d       	mov	r24, r8
    19cc:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    19d0:	4e 2d       	mov	r20, r14
    19d2:	69 2d       	mov	r22, r9
    19d4:	8a 2d       	mov	r24, r10
    19d6:	0e 94 3d 0a 	call	0x147a	; 0x147a <GLCD_SetPixel>
    19da:	dd 20       	and	r13, r13
    19dc:	54 f4       	brge	.+20     	; 0x19f2 <GLCD_DrawRoundRectangle+0x12e>
    19de:	8c 2f       	mov	r24, r28
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	88 0f       	add	r24, r24
    19e4:	99 1f       	adc	r25, r25
    19e6:	88 0f       	add	r24, r24
    19e8:	99 1f       	adc	r25, r25
    19ea:	06 96       	adiw	r24, 0x06	; 6
    19ec:	c8 0e       	add	r12, r24
    19ee:	d9 1e       	adc	r13, r25
    19f0:	0c c0       	rjmp	.+24     	; 0x1a0a <GLCD_DrawRoundRectangle+0x146>
    19f2:	8c 2f       	mov	r24, r28
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	80 1b       	sub	r24, r16
    19f8:	91 09       	sbc	r25, r1
    19fa:	88 0f       	add	r24, r24
    19fc:	99 1f       	adc	r25, r25
    19fe:	88 0f       	add	r24, r24
    1a00:	99 1f       	adc	r25, r25
    1a02:	0a 96       	adiw	r24, 0x0a	; 10
    1a04:	c8 0e       	add	r12, r24
    1a06:	d9 1e       	adc	r13, r25
    1a08:	01 50       	subi	r16, 0x01	; 1
    1a0a:	cf 5f       	subi	r28, 0xFF	; 255
    1a0c:	0c 17       	cp	r16, r28
    1a0e:	08 f0       	brcs	.+2      	; 0x1a12 <GLCD_DrawRoundRectangle+0x14e>
    1a10:	ac cf       	rjmp	.-168    	; 0x196a <GLCD_DrawRoundRectangle+0xa6>
    1a12:	1a c0       	rjmp	.+52     	; 0x1a48 <GLCD_DrawRoundRectangle+0x184>
    1a14:	af 2c       	mov	r10, r15
    1a16:	cb 2d       	mov	r28, r11
    1a18:	86 cf       	rjmp	.-244    	; 0x1926 <GLCD_DrawRoundRectangle+0x62>
    1a1a:	af 2c       	mov	r10, r15
    1a1c:	cb 2d       	mov	r28, r11
    1a1e:	90 cf       	rjmp	.-224    	; 0x1940 <GLCD_DrawRoundRectangle+0x7c>
    1a20:	0e 2d       	mov	r16, r14
    1a22:	2d 2f       	mov	r18, r29
    1a24:	47 2d       	mov	r20, r7
    1a26:	61 2f       	mov	r22, r17
    1a28:	87 2d       	mov	r24, r7
    1a2a:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    1a2e:	2d 2f       	mov	r18, r29
    1a30:	61 2f       	mov	r22, r17
    1a32:	94 cf       	rjmp	.-216    	; 0x195c <GLCD_DrawRoundRectangle+0x98>
    1a34:	0e 2d       	mov	r16, r14
    1a36:	21 2f       	mov	r18, r17
    1a38:	47 2d       	mov	r20, r7
    1a3a:	6d 2f       	mov	r22, r29
    1a3c:	87 2d       	mov	r24, r7
    1a3e:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    1a42:	21 2f       	mov	r18, r17
    1a44:	6d 2f       	mov	r22, r29
    1a46:	8a cf       	rjmp	.-236    	; 0x195c <GLCD_DrawRoundRectangle+0x98>
    1a48:	df 91       	pop	r29
    1a4a:	cf 91       	pop	r28
    1a4c:	1f 91       	pop	r17
    1a4e:	0f 91       	pop	r16
    1a50:	ff 90       	pop	r15
    1a52:	ef 90       	pop	r14
    1a54:	df 90       	pop	r13
    1a56:	cf 90       	pop	r12
    1a58:	bf 90       	pop	r11
    1a5a:	af 90       	pop	r10
    1a5c:	9f 90       	pop	r9
    1a5e:	8f 90       	pop	r8
    1a60:	7f 90       	pop	r7
    1a62:	6f 90       	pop	r6
    1a64:	08 95       	ret

00001a66 <GLCD_DrawTriangle>:
    1a66:	cf 92       	push	r12
    1a68:	df 92       	push	r13
    1a6a:	ef 92       	push	r14
    1a6c:	ff 92       	push	r15
    1a6e:	0f 93       	push	r16
    1a70:	1f 93       	push	r17
    1a72:	cf 93       	push	r28
    1a74:	df 93       	push	r29
    1a76:	88 23       	and	r24, r24
    1a78:	fc f0       	brlt	.+62     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a7a:	44 23       	and	r20, r20
    1a7c:	ec f0       	brlt	.+58     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a7e:	00 23       	and	r16, r16
    1a80:	dc f0       	brlt	.+54     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a82:	60 34       	cpi	r22, 0x40	; 64
    1a84:	c8 f4       	brcc	.+50     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a86:	20 34       	cpi	r18, 0x40	; 64
    1a88:	b8 f4       	brcc	.+46     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a8a:	9f e3       	ldi	r25, 0x3F	; 63
    1a8c:	9e 15       	cp	r25, r14
    1a8e:	a0 f0       	brcs	.+40     	; 0x1ab8 <GLCD_DrawTriangle+0x52>
    1a90:	10 2f       	mov	r17, r16
    1a92:	d2 2e       	mov	r13, r18
    1a94:	d4 2f       	mov	r29, r20
    1a96:	f6 2e       	mov	r15, r22
    1a98:	c8 2f       	mov	r28, r24
    1a9a:	0c 2d       	mov	r16, r12
    1a9c:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
    1aa0:	2e 2d       	mov	r18, r14
    1aa2:	41 2f       	mov	r20, r17
    1aa4:	6d 2d       	mov	r22, r13
    1aa6:	8d 2f       	mov	r24, r29
    1aa8:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
    1aac:	2f 2d       	mov	r18, r15
    1aae:	4c 2f       	mov	r20, r28
    1ab0:	6e 2d       	mov	r22, r14
    1ab2:	81 2f       	mov	r24, r17
    1ab4:	0e 94 53 0b 	call	0x16a6	; 0x16a6 <GLCD_DrawLine>
    1ab8:	df 91       	pop	r29
    1aba:	cf 91       	pop	r28
    1abc:	1f 91       	pop	r17
    1abe:	0f 91       	pop	r16
    1ac0:	ff 90       	pop	r15
    1ac2:	ef 90       	pop	r14
    1ac4:	df 90       	pop	r13
    1ac6:	cf 90       	pop	r12
    1ac8:	08 95       	ret

00001aca <GLCD_FillScreen>:
    1aca:	90 e0       	ldi	r25, 0x00	; 0
    1acc:	07 c0       	rjmp	.+14     	; 0x1adc <GLCD_FillScreen+0x12>
    1ace:	81 93       	st	Z+, r24
    1ad0:	e2 17       	cp	r30, r18
    1ad2:	f3 07       	cpc	r31, r19
    1ad4:	e1 f7       	brne	.-8      	; 0x1ace <GLCD_FillScreen+0x4>
    1ad6:	98 5f       	subi	r25, 0xF8	; 248
    1ad8:	90 34       	cpi	r25, 0x40	; 64
    1ada:	71 f0       	breq	.+28     	; 0x1af8 <GLCD_FillScreen+0x2e>
    1adc:	29 2f       	mov	r18, r25
    1ade:	26 95       	lsr	r18
    1ae0:	26 95       	lsr	r18
    1ae2:	26 95       	lsr	r18
    1ae4:	40 e8       	ldi	r20, 0x80	; 128
    1ae6:	24 9f       	mul	r18, r20
    1ae8:	90 01       	movw	r18, r0
    1aea:	11 24       	eor	r1, r1
    1aec:	f9 01       	movw	r30, r18
    1aee:	ef 53       	subi	r30, 0x3F	; 63
    1af0:	fe 4f       	sbci	r31, 0xFE	; 254
    1af2:	2f 5b       	subi	r18, 0xBF	; 191
    1af4:	3d 4f       	sbci	r19, 0xFD	; 253
    1af6:	eb cf       	rjmp	.-42     	; 0x1ace <GLCD_FillScreen+0x4>
    1af8:	08 95       	ret

00001afa <GLCD_Clear>:
    1afa:	80 e0       	ldi	r24, 0x00	; 0
    1afc:	0e 94 65 0d 	call	0x1aca	; 0x1aca <GLCD_FillScreen>
    1b00:	08 95       	ret

00001b02 <GLCD_FillRectangle>:
    1b02:	0f 93       	push	r16
    1b04:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <GLCD_SetPixels>
    1b08:	0f 91       	pop	r16
    1b0a:	08 95       	ret

00001b0c <GLCD_InvertScreen>:
    1b0c:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__GLCD+0x2>
    1b10:	87 3a       	cpi	r24, 0xA7	; 167
    1b12:	21 f4       	brne	.+8      	; 0x1b1c <GLCD_InvertScreen+0x10>
    1b14:	86 ea       	ldi	r24, 0xA6	; 166
    1b16:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__GLCD+0x2>
    1b1a:	03 c0       	rjmp	.+6      	; 0x1b22 <GLCD_InvertScreen+0x16>
    1b1c:	87 ea       	ldi	r24, 0xA7	; 167
    1b1e:	80 93 ba 01 	sts	0x01BA, r24	; 0x8001ba <__GLCD+0x2>
    1b22:	80 91 ba 01 	lds	r24, 0x01BA	; 0x8001ba <__GLCD+0x2>
    1b26:	0e 94 91 09 	call	0x1322	; 0x1322 <GLCD_SendCommand>
    1b2a:	08 95       	ret

00001b2c <GLCD_SetFont>:
    1b2c:	66 23       	and	r22, r22
    1b2e:	e4 f0       	brlt	.+56     	; 0x1b68 <GLCD_SetFont+0x3c>
    1b30:	40 34       	cpi	r20, 0x40	; 64
    1b32:	d0 f4       	brcc	.+52     	; 0x1b68 <GLCD_SetFont+0x3c>
    1b34:	22 30       	cpi	r18, 0x02	; 2
    1b36:	c0 f4       	brcc	.+48     	; 0x1b68 <GLCD_SetFont+0x3c>
    1b38:	e8 eb       	ldi	r30, 0xB8	; 184
    1b3a:	f1 e0       	ldi	r31, 0x01	; 1
    1b3c:	94 83       	std	Z+4, r25	; 0x04
    1b3e:	83 83       	std	Z+3, r24	; 0x03
    1b40:	65 83       	std	Z+5, r22	; 0x05
    1b42:	46 83       	std	Z+6, r20	; 0x06
    1b44:	50 e0       	ldi	r21, 0x00	; 0
    1b46:	41 50       	subi	r20, 0x01	; 1
    1b48:	51 09       	sbc	r21, r1
    1b4a:	ca 01       	movw	r24, r20
    1b4c:	99 23       	and	r25, r25
    1b4e:	0c f4       	brge	.+2      	; 0x1b52 <GLCD_SetFont+0x26>
    1b50:	07 96       	adiw	r24, 0x07	; 7
    1b52:	95 95       	asr	r25
    1b54:	87 95       	ror	r24
    1b56:	95 95       	asr	r25
    1b58:	87 95       	ror	r24
    1b5a:	95 95       	asr	r25
    1b5c:	87 95       	ror	r24
    1b5e:	8f 5f       	subi	r24, 0xFF	; 255
    1b60:	80 93 bf 01 	sts	0x01BF, r24	; 0x8001bf <__GLCD+0x7>
    1b64:	20 93 c0 01 	sts	0x01C0, r18	; 0x8001c0 <__GLCD+0x8>
    1b68:	08 95       	ret

00001b6a <GLCD_PrintChar>:

void GLCD_PrintChar(char Character)
{
    1b6a:	2f 92       	push	r2
    1b6c:	3f 92       	push	r3
    1b6e:	4f 92       	push	r4
    1b70:	5f 92       	push	r5
    1b72:	6f 92       	push	r6
    1b74:	7f 92       	push	r7
    1b76:	8f 92       	push	r8
    1b78:	9f 92       	push	r9
    1b7a:	af 92       	push	r10
    1b7c:	bf 92       	push	r11
    1b7e:	cf 92       	push	r12
    1b80:	df 92       	push	r13
    1b82:	ef 92       	push	r14
    1b84:	ff 92       	push	r15
    1b86:	0f 93       	push	r16
    1b88:	1f 93       	push	r17
    1b8a:	cf 93       	push	r28
    1b8c:	df 93       	push	r29
    1b8e:	00 d0       	rcall	.+0      	; 0x1b90 <GLCD_PrintChar+0x26>
    1b90:	1f 92       	push	r1
    1b92:	cd b7       	in	r28, 0x3d	; 61
    1b94:	de b7       	in	r29, 0x3e	; 62
	uint16_t fontStart, fontRead, fontReadPrev;
	uint8_t x, y, y2, i, j, width, overflow, data, dataPrev;
	fontStart = fontRead = fontReadPrev = x = y = y2 = i = j = width = overflow = data = dataPrev = 0;
	
	//#1 - Save current position
	x = __GLCD.X;
    1b96:	e8 eb       	ldi	r30, 0xB8	; 184
    1b98:	f1 e0       	ldi	r31, 0x01	; 1
    1b9a:	30 80       	ld	r3, Z
	y = y2 = __GLCD.Y;
    1b9c:	21 80       	ldd	r2, Z+1	; 0x01
	
	//#2 - Remove leading empty characters
	Character -= 32;														//32 is the ASCII of the first printable character
	
	//#3 - Find the start of the character in the font array
	fontStart = Character * (__GLCD.Font.Width * __GLCD.Font.Lines + 1);		//+1 due to first byte of each array line being the width
    1b9e:	97 81       	ldd	r25, Z+7	; 0x07
    1ba0:	25 81       	ldd	r18, Z+5	; 0x05
    1ba2:	29 9f       	mul	r18, r25
    1ba4:	90 01       	movw	r18, r0
    1ba6:	11 24       	eor	r1, r1
    1ba8:	2f 5f       	subi	r18, 0xFF	; 255
    1baa:	3f 4f       	sbci	r19, 0xFF	; 255
    1bac:	80 52       	subi	r24, 0x20	; 32
    1bae:	82 9f       	mul	r24, r18
    1bb0:	a0 01       	movw	r20, r0
    1bb2:	83 9f       	mul	r24, r19
    1bb4:	50 0d       	add	r21, r0
    1bb6:	11 24       	eor	r1, r1
    1bb8:	5a 83       	std	Y+2, r21	; 0x02
    1bba:	49 83       	std	Y+1, r20	; 0x01
	
	//#4 - Update width - First byte of each line is the width of the character
	width = pgm_read_byte(&(__GLCD.Font.Name[fontStart++]));
    1bbc:	4a 01       	movw	r8, r20
    1bbe:	5f ef       	ldi	r21, 0xFF	; 255
    1bc0:	85 1a       	sub	r8, r21
    1bc2:	95 0a       	sbc	r9, r21
    1bc4:	03 80       	ldd	r0, Z+3	; 0x03
    1bc6:	f4 81       	ldd	r31, Z+4	; 0x04
    1bc8:	e0 2d       	mov	r30, r0
    1bca:	a9 81       	ldd	r26, Y+1	; 0x01
    1bcc:	ba 81       	ldd	r27, Y+2	; 0x02
    1bce:	ea 0f       	add	r30, r26
    1bd0:	fb 1f       	adc	r31, r27
    1bd2:	c4 90       	lpm	r12, Z
	
	
	//#5 - Calculate overflowing bits
	overflow = __GLCD.Y % __GLCD_Screen_Line_Height;
    1bd4:	b2 2d       	mov	r27, r2
    1bd6:	b7 70       	andi	r27, 0x07	; 7
    1bd8:	6b 2e       	mov	r6, r27
	
	//#6 - Print the character
	//Scan the lines needed
	for (j = 0 ; j < __GLCD.Font.Lines ; j++)
    1bda:	99 23       	and	r25, r25
    1bdc:	09 f4       	brne	.+2      	; 0x1be0 <GLCD_PrintChar+0x76>
    1bde:	79 c0       	rjmp	.+242    	; 0x1cd2 <GLCD_PrintChar+0x168>
    1be0:	d2 2c       	mov	r13, r2
    1be2:	10 e0       	ldi	r17, 0x00	; 0
			
			//Merge byte with previous one
			if (j > 0)
			{
				dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
				dataPrev >>= __GLCD_Screen_Line_Height - overflow;
    1be4:	88 e0       	ldi	r24, 0x08	; 8
    1be6:	90 e0       	ldi	r25, 0x00	; 0
    1be8:	5c 01       	movw	r10, r24
    1bea:	ab 1a       	sub	r10, r27
    1bec:	b1 08       	sbc	r11, r1
	//#6 - Print the character
	//Scan the lines needed
	for (j = 0 ; j < __GLCD.Font.Lines ; j++)
	{
		//Go to the start of the line
		GLCD_GotoXY(x, y);
    1bee:	6d 2d       	mov	r22, r13
    1bf0:	83 2d       	mov	r24, r3
    1bf2:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		
		//Update the indices for reading the line
		fontRead = fontStart + j;
    1bf6:	94 01       	movw	r18, r8
    1bf8:	21 0f       	add	r18, r17
    1bfa:	31 1d       	adc	r19, r1
		fontReadPrev = fontRead - 1;
    1bfc:	d9 01       	movw	r26, r18
    1bfe:	11 97       	sbiw	r26, 0x01	; 1

		//Scan bytes of selected line
		for (i = 0 ; i < width ; i++)
    1c00:	cc 20       	and	r12, r12
    1c02:	09 f4       	brne	.+2      	; 0x1c06 <GLCD_PrintChar+0x9c>
    1c04:	48 c0       	rjmp	.+144    	; 0x1c96 <GLCD_PrintChar+0x12c>
		{
			//Read byte
			data = pgm_read_byte(&(__GLCD.Font.Name[fontRead]));
    1c06:	e0 90 bb 01 	lds	r14, 0x01BB	; 0x8001bb <__GLCD+0x3>
    1c0a:	f0 90 bc 01 	lds	r15, 0x01BC	; 0x8001bc <__GLCD+0x4>
			if (j > 0)
			{
				dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
				dataPrev >>= __GLCD_Screen_Line_Height - overflow;
				data |= dataPrev;
				fontReadPrev += __GLCD.Font.Lines;
    1c0e:	60 91 bf 01 	lds	r22, 0x01BF	; 0x8001bf <__GLCD+0x7>
    1c12:	70 e0       	ldi	r23, 0x00	; 0
			}

			//Edit byte depending on the mode
			if (__GLCD.Font.Mode == GLCD_Merge)
    1c14:	00 91 c0 01 	lds	r16, 0x01C0	; 0x8001c0 <__GLCD+0x8>
}

static uint8_t GLCD_BufferRead(const uint8_t X, const uint8_t Y)
{
	//y>>3 = y / 8
	return (__GLCD_Buffer[__GLCD_Pointer(X, Y)]);
    1c18:	40 91 b9 01 	lds	r20, 0x01B9	; 0x8001b9 <__GLCD+0x1>
    1c1c:	46 95       	lsr	r20
    1c1e:	46 95       	lsr	r20
    1c20:	46 95       	lsr	r20
    1c22:	e0 e8       	ldi	r30, 0x80	; 128
    1c24:	4e 9f       	mul	r20, r30
    1c26:	a0 01       	movw	r20, r0
    1c28:	11 24       	eor	r1, r1
    1c2a:	e8 eb       	ldi	r30, 0xB8	; 184
    1c2c:	f1 e0       	ldi	r31, 0x01	; 1
    1c2e:	70 80       	ld	r7, Z
    1c30:	2e 0d       	add	r18, r14
    1c32:	3f 1d       	adc	r19, r15
    1c34:	5c 2c       	mov	r5, r12
    1c36:	57 0c       	add	r5, r7
    1c38:	4f 53       	subi	r20, 0x3F	; 63
    1c3a:	5e 4f       	sbci	r21, 0xFE	; 254

		//Scan bytes of selected line
		for (i = 0 ; i < width ; i++)
		{
			//Read byte
			data = pgm_read_byte(&(__GLCD.Font.Name[fontRead]));
    1c3c:	f9 01       	movw	r30, r18
    1c3e:	84 91       	lpm	r24, Z
			
			//Shift byte
			data <<= overflow;
    1c40:	90 e0       	ldi	r25, 0x00	; 0
    1c42:	06 2c       	mov	r0, r6
    1c44:	02 c0       	rjmp	.+4      	; 0x1c4a <GLCD_PrintChar+0xe0>
    1c46:	88 0f       	add	r24, r24
    1c48:	99 1f       	adc	r25, r25
    1c4a:	0a 94       	dec	r0
    1c4c:	e2 f7       	brpl	.-8      	; 0x1c46 <GLCD_PrintChar+0xdc>
    1c4e:	48 2e       	mov	r4, r24
			
			//Merge byte with previous one
			if (j > 0)
    1c50:	11 23       	and	r17, r17
    1c52:	71 f0       	breq	.+28     	; 0x1c70 <GLCD_PrintChar+0x106>
			{
				dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
    1c54:	f7 01       	movw	r30, r14
    1c56:	ea 0f       	add	r30, r26
    1c58:	fb 1f       	adc	r31, r27
    1c5a:	e4 91       	lpm	r30, Z
				dataPrev >>= __GLCD_Screen_Line_Height - overflow;
    1c5c:	f0 e0       	ldi	r31, 0x00	; 0
    1c5e:	0a 2c       	mov	r0, r10
    1c60:	02 c0       	rjmp	.+4      	; 0x1c66 <GLCD_PrintChar+0xfc>
    1c62:	f5 95       	asr	r31
    1c64:	e7 95       	ror	r30
    1c66:	0a 94       	dec	r0
    1c68:	e2 f7       	brpl	.-8      	; 0x1c62 <GLCD_PrintChar+0xf8>
				data |= dataPrev;
    1c6a:	4e 2a       	or	r4, r30
				fontReadPrev += __GLCD.Font.Lines;
    1c6c:	a6 0f       	add	r26, r22
    1c6e:	b7 1f       	adc	r27, r23
			}

			//Edit byte depending on the mode
			if (__GLCD.Font.Mode == GLCD_Merge)
    1c70:	01 30       	cpi	r16, 0x01	; 1
    1c72:	29 f4       	brne	.+10     	; 0x1c7e <GLCD_PrintChar+0x114>
}

static uint8_t GLCD_BufferRead(const uint8_t X, const uint8_t Y)
{
	//y>>3 = y / 8
	return (__GLCD_Buffer[__GLCD_Pointer(X, Y)]);
    1c74:	fa 01       	movw	r30, r20
    1c76:	e7 0d       	add	r30, r7
    1c78:	f1 1d       	adc	r31, r1
				fontReadPrev += __GLCD.Font.Lines;
			}

			//Edit byte depending on the mode
			if (__GLCD.Font.Mode == GLCD_Merge)
			data |= GLCD_BufferRead(__GLCD.X, __GLCD.Y);
    1c7a:	80 81       	ld	r24, Z
    1c7c:	48 2a       	or	r4, r24
	__I2C_Stop();
}

static void GLCD_BufferWrite(const uint8_t X, const uint8_t Y, const uint8_t Data)
{
	__GLCD_Buffer[__GLCD_Pointer(X, Y)] = Data;
    1c7e:	fa 01       	movw	r30, r20
    1c80:	e7 0d       	add	r30, r7
    1c82:	f1 1d       	adc	r31, r1
    1c84:	40 82       	st	Z, r4
    1c86:	73 94       	inc	r7
    1c88:	26 0f       	add	r18, r22
    1c8a:	37 1f       	adc	r19, r23
		//Update the indices for reading the line
		fontRead = fontStart + j;
		fontReadPrev = fontRead - 1;

		//Scan bytes of selected line
		for (i = 0 ; i < width ; i++)
    1c8c:	57 10       	cpse	r5, r7
    1c8e:	d6 cf       	rjmp	.-84     	; 0x1c3c <GLCD_PrintChar+0xd2>
    1c90:	a8 eb       	ldi	r26, 0xB8	; 184
    1c92:	b1 e0       	ldi	r27, 0x01	; 1
    1c94:	5c 92       	st	X, r5
			//Increase index
			fontRead += __GLCD.Font.Lines;
		}

		//Send an empty column of 1px in the end
		if (__GLCD.Font.Mode == GLCD_Overwrite)
    1c96:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__GLCD+0x8>
    1c9a:	81 11       	cpse	r24, r1
    1c9c:	11 c0       	rjmp	.+34     	; 0x1cc0 <GLCD_PrintChar+0x156>
	__I2C_Stop();
}

static void GLCD_BufferWrite(const uint8_t X, const uint8_t Y, const uint8_t Data)
{
	__GLCD_Buffer[__GLCD_Pointer(X, Y)] = Data;
    1c9e:	e0 91 b9 01 	lds	r30, 0x01B9	; 0x8001b9 <__GLCD+0x1>
    1ca2:	e6 95       	lsr	r30
    1ca4:	e6 95       	lsr	r30
    1ca6:	e6 95       	lsr	r30
    1ca8:	a8 eb       	ldi	r26, 0xB8	; 184
    1caa:	b1 e0       	ldi	r27, 0x01	; 1
    1cac:	8c 91       	ld	r24, X
    1cae:	b0 e8       	ldi	r27, 0x80	; 128
    1cb0:	eb 9f       	mul	r30, r27
    1cb2:	f0 01       	movw	r30, r0
    1cb4:	11 24       	eor	r1, r1
    1cb6:	ef 53       	subi	r30, 0x3F	; 63
    1cb8:	fe 4f       	sbci	r31, 0xFE	; 254
    1cba:	e8 0f       	add	r30, r24
    1cbc:	f1 1d       	adc	r31, r1
    1cbe:	10 82       	st	Z, r1
		//Send an empty column of 1px in the end
		if (__GLCD.Font.Mode == GLCD_Overwrite)
			GLCD_BufferWrite(__GLCD.X, __GLCD.Y, GLCD_White);
		
		//Increase line counter
		y += __GLCD_Screen_Line_Height;
    1cc0:	e8 e0       	ldi	r30, 0x08	; 8
    1cc2:	de 0e       	add	r13, r30
	//#5 - Calculate overflowing bits
	overflow = __GLCD.Y % __GLCD_Screen_Line_Height;
	
	//#6 - Print the character
	//Scan the lines needed
	for (j = 0 ; j < __GLCD.Font.Lines ; j++)
    1cc4:	1f 5f       	subi	r17, 0xFF	; 255
    1cc6:	80 91 bf 01 	lds	r24, 0x01BF	; 0x8001bf <__GLCD+0x7>
    1cca:	18 17       	cp	r17, r24
    1ccc:	08 f4       	brcc	.+2      	; 0x1cd0 <GLCD_PrintChar+0x166>
    1cce:	8f cf       	rjmp	.-226    	; 0x1bee <GLCD_PrintChar+0x84>
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <GLCD_PrintChar+0x16c>
	uint8_t x, y, y2, i, j, width, overflow, data, dataPrev;
	fontStart = fontRead = fontReadPrev = x = y = y2 = i = j = width = overflow = data = dataPrev = 0;
	
	//#1 - Save current position
	x = __GLCD.X;
	y = y2 = __GLCD.Y;
    1cd2:	d2 2c       	mov	r13, r2
	//#5 - Calculate overflowing bits
	overflow = __GLCD.Y % __GLCD_Screen_Line_Height;
	
	//#6 - Print the character
	//Scan the lines needed
	for (j = 0 ; j < __GLCD.Font.Lines ; j++)
    1cd4:	10 e0       	ldi	r17, 0x00	; 0
		y += __GLCD_Screen_Line_Height;
	}

	//#7 - Update last line, if needed
	//If (LINE_STARTING != LINE_ENDING)
	if (__GLCD_GetLine(y2) != __GLCD_GetLine((y2 + __GLCD.Font.Height - 1)) && y < __GLCD_Screen_Height)
    1cd6:	42 2d       	mov	r20, r2
    1cd8:	46 95       	lsr	r20
    1cda:	46 95       	lsr	r20
    1cdc:	46 95       	lsr	r20
    1cde:	50 e0       	ldi	r21, 0x00	; 0
    1ce0:	20 91 be 01 	lds	r18, 0x01BE	; 0x8001be <__GLCD+0x6>
    1ce4:	82 2d       	mov	r24, r2
    1ce6:	90 e0       	ldi	r25, 0x00	; 0
    1ce8:	82 0f       	add	r24, r18
    1cea:	91 1d       	adc	r25, r1
    1cec:	01 97       	sbiw	r24, 0x01	; 1
    1cee:	9c 01       	movw	r18, r24
    1cf0:	12 f4       	brpl	.+4      	; 0x1cf6 <GLCD_PrintChar+0x18c>
    1cf2:	29 5f       	subi	r18, 0xF9	; 249
    1cf4:	3f 4f       	sbci	r19, 0xFF	; 255
    1cf6:	35 95       	asr	r19
    1cf8:	27 95       	ror	r18
    1cfa:	35 95       	asr	r19
    1cfc:	27 95       	ror	r18
    1cfe:	35 95       	asr	r19
    1d00:	27 95       	ror	r18
    1d02:	42 17       	cp	r20, r18
    1d04:	53 07       	cpc	r21, r19
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <GLCD_PrintChar+0x1a0>
    1d08:	65 c0       	rjmp	.+202    	; 0x1dd4 <GLCD_PrintChar+0x26a>
    1d0a:	ff e3       	ldi	r31, 0x3F	; 63
    1d0c:	fd 15       	cp	r31, r13
    1d0e:	08 f4       	brcc	.+2      	; 0x1d12 <GLCD_PrintChar+0x1a8>
    1d10:	61 c0       	rjmp	.+194    	; 0x1dd4 <GLCD_PrintChar+0x26a>
	{
		//Go to the start of the line
		GLCD_GotoXY(x, y);
    1d12:	6d 2d       	mov	r22, r13
    1d14:	83 2d       	mov	r24, r3
    1d16:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
		
		//Update the index for reading the last printed line
		fontReadPrev = fontStart + j - 1;
    1d1a:	89 81       	ldd	r24, Y+1	; 0x01
    1d1c:	9a 81       	ldd	r25, Y+2	; 0x02
    1d1e:	81 0f       	add	r24, r17
    1d20:	91 1d       	adc	r25, r1

		//Scan bytes of selected line
		for (i = 0 ; i < width ; i++)
    1d22:	cc 20       	and	r12, r12
    1d24:	09 f4       	brne	.+2      	; 0x1d28 <GLCD_PrintChar+0x1be>
    1d26:	40 c0       	rjmp	.+128    	; 0x1da8 <GLCD_PrintChar+0x23e>
		{
			//Read byte
			data = GLCD_BufferRead(__GLCD.X, __GLCD.Y);
    1d28:	a8 eb       	ldi	r26, 0xB8	; 184
    1d2a:	b1 e0       	ldi	r27, 0x01	; 1
}

static uint8_t GLCD_BufferRead(const uint8_t X, const uint8_t Y)
{
	//y>>3 = y / 8
	return (__GLCD_Buffer[__GLCD_Pointer(X, Y)]);
    1d2c:	11 96       	adiw	r26, 0x01	; 1
    1d2e:	2c 91       	ld	r18, X
    1d30:	11 97       	sbiw	r26, 0x01	; 1
    1d32:	26 95       	lsr	r18
    1d34:	26 95       	lsr	r18
    1d36:	26 95       	lsr	r18
    1d38:	40 e8       	ldi	r20, 0x80	; 128
    1d3a:	24 9f       	mul	r18, r20
    1d3c:	90 01       	movw	r18, r0
    1d3e:	11 24       	eor	r1, r1
			dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
			dataPrev >>= __GLCD_Screen_Line_Height - overflow;
			data |= dataPrev;
			
			//Edit byte depending on the mode
			if (__GLCD.Font.Mode == GLCD_Merge)
    1d40:	18 96       	adiw	r26, 0x08	; 8
    1d42:	6c 91       	ld	r22, X
    1d44:	18 97       	sbiw	r26, 0x08	; 8
    1d46:	0c 91       	ld	r16, X
			
			//Send byte
			GLCD_BufferWrite(__GLCD.X++, __GLCD.Y, data);

			//Increase index
			fontReadPrev += __GLCD.Font.Lines;
    1d48:	17 96       	adiw	r26, 0x07	; 7
    1d4a:	4c 91       	ld	r20, X
    1d4c:	17 97       	sbiw	r26, 0x07	; 7
    1d4e:	50 e0       	ldi	r21, 0x00	; 0
    1d50:	13 96       	adiw	r26, 0x03	; 3
    1d52:	ed 91       	ld	r30, X+
    1d54:	fc 91       	ld	r31, X
    1d56:	14 97       	sbiw	r26, 0x04	; 4
    1d58:	e8 0f       	add	r30, r24
    1d5a:	f9 1f       	adc	r31, r25
    1d5c:	10 2f       	mov	r17, r16
    1d5e:	1c 0d       	add	r17, r12
			//Read byte
			data = GLCD_BufferRead(__GLCD.X, __GLCD.Y);
			
			//Merge byte with previous one
			dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
			dataPrev >>= __GLCD_Screen_Line_Height - overflow;
    1d60:	88 e0       	ldi	r24, 0x08	; 8
    1d62:	90 e0       	ldi	r25, 0x00	; 0
    1d64:	7c 01       	movw	r14, r24
    1d66:	e6 18       	sub	r14, r6
    1d68:	f1 08       	sbc	r15, r1
}

static uint8_t GLCD_BufferRead(const uint8_t X, const uint8_t Y)
{
	//y>>3 = y / 8
	return (__GLCD_Buffer[__GLCD_Pointer(X, Y)]);
    1d6a:	59 01       	movw	r10, r18
    1d6c:	a0 0e       	add	r10, r16
    1d6e:	b1 1c       	adc	r11, r1
    1d70:	c5 01       	movw	r24, r10
    1d72:	8f 53       	subi	r24, 0x3F	; 63
    1d74:	9e 4f       	sbci	r25, 0xFE	; 254
    1d76:	dc 01       	movw	r26, r24
    1d78:	dc 90       	ld	r13, X
		{
			//Read byte
			data = GLCD_BufferRead(__GLCD.X, __GLCD.Y);
			
			//Merge byte with previous one
			dataPrev = pgm_read_byte(&(__GLCD.Font.Name[fontReadPrev]));
    1d7a:	84 91       	lpm	r24, Z
			dataPrev >>= __GLCD_Screen_Line_Height - overflow;
    1d7c:	90 e0       	ldi	r25, 0x00	; 0
    1d7e:	0e 2c       	mov	r0, r14
    1d80:	02 c0       	rjmp	.+4      	; 0x1d86 <GLCD_PrintChar+0x21c>
    1d82:	95 95       	asr	r25
    1d84:	87 95       	ror	r24
    1d86:	0a 94       	dec	r0
    1d88:	e2 f7       	brpl	.-8      	; 0x1d82 <GLCD_PrintChar+0x218>
			data |= dataPrev;
    1d8a:	8d 29       	or	r24, r13
			
			//Edit byte depending on the mode
			if (__GLCD.Font.Mode == GLCD_Merge)
    1d8c:	61 30       	cpi	r22, 0x01	; 1
    1d8e:	09 f4       	brne	.+2      	; 0x1d92 <GLCD_PrintChar+0x228>
				data |= GLCD_BufferRead(__GLCD.X, __GLCD.Y);
    1d90:	8d 29       	or	r24, r13
	__I2C_Stop();
}

static void GLCD_BufferWrite(const uint8_t X, const uint8_t Y, const uint8_t Data)
{
	__GLCD_Buffer[__GLCD_Pointer(X, Y)] = Data;
    1d92:	d5 01       	movw	r26, r10
    1d94:	af 53       	subi	r26, 0x3F	; 63
    1d96:	be 4f       	sbci	r27, 0xFE	; 254
    1d98:	8c 93       	st	X, r24
    1d9a:	0f 5f       	subi	r16, 0xFF	; 255
    1d9c:	e4 0f       	add	r30, r20
    1d9e:	f5 1f       	adc	r31, r21
		
		//Update the index for reading the last printed line
		fontReadPrev = fontStart + j - 1;

		//Scan bytes of selected line
		for (i = 0 ; i < width ; i++)
    1da0:	01 13       	cpse	r16, r17
    1da2:	e3 cf       	rjmp	.-58     	; 0x1d6a <GLCD_PrintChar+0x200>
    1da4:	10 93 b8 01 	sts	0x01B8, r17	; 0x8001b8 <__GLCD>
			//Increase index
			fontReadPrev += __GLCD.Font.Lines;
		}

		//Send an empty column of 1px in the end
		if (__GLCD.Font.Mode == GLCD_Overwrite)
    1da8:	80 91 c0 01 	lds	r24, 0x01C0	; 0x8001c0 <__GLCD+0x8>
    1dac:	81 11       	cpse	r24, r1
    1dae:	12 c0       	rjmp	.+36     	; 0x1dd4 <GLCD_PrintChar+0x26a>
			GLCD_BufferWrite(__GLCD.X, __GLCD.Y, GLCD_White);
    1db0:	a8 eb       	ldi	r26, 0xB8	; 184
    1db2:	b1 e0       	ldi	r27, 0x01	; 1
	__I2C_Stop();
}

static void GLCD_BufferWrite(const uint8_t X, const uint8_t Y, const uint8_t Data)
{
	__GLCD_Buffer[__GLCD_Pointer(X, Y)] = Data;
    1db4:	11 96       	adiw	r26, 0x01	; 1
    1db6:	ec 91       	ld	r30, X
    1db8:	11 97       	sbiw	r26, 0x01	; 1
    1dba:	e6 95       	lsr	r30
    1dbc:	e6 95       	lsr	r30
    1dbe:	e6 95       	lsr	r30
    1dc0:	8c 91       	ld	r24, X
    1dc2:	b0 e8       	ldi	r27, 0x80	; 128
    1dc4:	eb 9f       	mul	r30, r27
    1dc6:	f0 01       	movw	r30, r0
    1dc8:	11 24       	eor	r1, r1
    1dca:	ef 53       	subi	r30, 0x3F	; 63
    1dcc:	fe 4f       	sbci	r31, 0xFE	; 254
    1dce:	e8 0f       	add	r30, r24
    1dd0:	f1 1d       	adc	r31, r1
    1dd2:	10 82       	st	Z, r1
		if (__GLCD.Font.Mode == GLCD_Overwrite)
			GLCD_BufferWrite(__GLCD.X, __GLCD.Y, GLCD_White);
	}
	
	//Move cursor to the end of the printed character
	GLCD_GotoXY(x + width + 1, y2);
    1dd4:	81 e0       	ldi	r24, 0x01	; 1
    1dd6:	83 0d       	add	r24, r3
    1dd8:	62 2d       	mov	r22, r2
    1dda:	8c 0d       	add	r24, r12
    1ddc:	0e 94 d6 09 	call	0x13ac	; 0x13ac <GLCD_GotoXY>
}
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	1f 91       	pop	r17
    1dec:	0f 91       	pop	r16
    1dee:	ff 90       	pop	r15
    1df0:	ef 90       	pop	r14
    1df2:	df 90       	pop	r13
    1df4:	cf 90       	pop	r12
    1df6:	bf 90       	pop	r11
    1df8:	af 90       	pop	r10
    1dfa:	9f 90       	pop	r9
    1dfc:	8f 90       	pop	r8
    1dfe:	7f 90       	pop	r7
    1e00:	6f 90       	pop	r6
    1e02:	5f 90       	pop	r5
    1e04:	4f 90       	pop	r4
    1e06:	3f 90       	pop	r3
    1e08:	2f 90       	pop	r2
    1e0a:	08 95       	ret

00001e0c <GLCD_PrintString>:

void GLCD_PrintString(const char *Text)
{
    1e0c:	0f 93       	push	r16
    1e0e:	1f 93       	push	r17
    1e10:	cf 93       	push	r28
    1e12:	df 93       	push	r29
    1e14:	ec 01       	movw	r28, r24
	while(*Text)
    1e16:	88 81       	ld	r24, Y
    1e18:	88 23       	and	r24, r24
    1e1a:	d9 f0       	breq	.+54     	; 0x1e52 <GLCD_PrintString+0x46>
	{
		if ((__GLCD.X + __GLCD.Font.Width) >= __GLCD_Screen_Width)
    1e1c:	e8 eb       	ldi	r30, 0xB8	; 184
    1e1e:	f1 e0       	ldi	r31, 0x01	; 1
    1e20:	90 81       	ld	r25, Z
    1e22:	25 81       	ldd	r18, Z+5	; 0x05
    1e24:	30 e0       	ldi	r19, 0x00	; 0
    1e26:	29 0f       	add	r18, r25
    1e28:	31 1d       	adc	r19, r1
    1e2a:	20 38       	cpi	r18, 0x80	; 128
    1e2c:	31 05       	cpc	r19, r1
    1e2e:	8c f4       	brge	.+34     	; 0x1e52 <GLCD_PrintString+0x46>
    1e30:	21 96       	adiw	r28, 0x01	; 1
    1e32:	8f 01       	movw	r16, r30
    1e34:	09 c0       	rjmp	.+18     	; 0x1e48 <GLCD_PrintString+0x3c>
    1e36:	f8 01       	movw	r30, r16
    1e38:	90 81       	ld	r25, Z
    1e3a:	25 81       	ldd	r18, Z+5	; 0x05
    1e3c:	30 e0       	ldi	r19, 0x00	; 0
    1e3e:	29 0f       	add	r18, r25
    1e40:	31 1d       	adc	r19, r1
    1e42:	20 38       	cpi	r18, 0x80	; 128
    1e44:	31 05       	cpc	r19, r1
    1e46:	2c f4       	brge	.+10     	; 0x1e52 <GLCD_PrintString+0x46>
			break;

		GLCD_PrintChar(*Text++);
    1e48:	0e 94 b5 0d 	call	0x1b6a	; 0x1b6a <GLCD_PrintChar>
	GLCD_GotoXY(x + width + 1, y2);
}

void GLCD_PrintString(const char *Text)
{
	while(*Text)
    1e4c:	89 91       	ld	r24, Y+
    1e4e:	81 11       	cpse	r24, r1
    1e50:	f2 cf       	rjmp	.-28     	; 0x1e36 <GLCD_PrintString+0x2a>
		if ((__GLCD.X + __GLCD.Font.Width) >= __GLCD_Screen_Width)
			break;

		GLCD_PrintChar(*Text++);
	}
}
    1e52:	df 91       	pop	r29
    1e54:	cf 91       	pop	r28
    1e56:	1f 91       	pop	r17
    1e58:	0f 91       	pop	r16
    1e5a:	08 95       	ret

00001e5c <TWI_Setup>:

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
}
    1e5c:	3c 9a       	sbi	0x07, 4	; 7
    1e5e:	3d 9a       	sbi	0x07, 5	; 7
    1e60:	44 9a       	sbi	0x08, 4	; 8
    1e62:	45 9a       	sbi	0x08, 5	; 8
    1e64:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
    1e68:	88 e4       	ldi	r24, 0x48	; 72
    1e6a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    1e6e:	84 e0       	ldi	r24, 0x04	; 4
    1e70:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    1e74:	08 95       	ret

00001e76 <TWI_BeginTransmission>:

//Begin TWI transmission. 
uint8_t TWI_BeginTransmission(void)
{
	//Transmit START condition
	TWCR = (1<<TWINT) | (1<<TWSTA) | (1<<TWEN);
    1e76:	84 ea       	ldi	r24, 0xA4	; 164
    1e78:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for TWINT Flag set. This indicates that
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));
    1e7c:	ec eb       	ldi	r30, 0xBC	; 188
    1e7e:	f0 e0       	ldi	r31, 0x00	; 0
    1e80:	80 81       	ld	r24, Z
    1e82:	88 23       	and	r24, r24
    1e84:	ec f7       	brge	.-6      	; 0x1e80 <TWI_BeginTransmission+0xa>
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
    1e86:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	//the START condition has been transmitted.
	while (!BitCheck(TWCR, TWINT));

	//Return status register
	return (TWI_Status());
}
    1e8a:	88 7f       	andi	r24, 0xF8	; 248
    1e8c:	08 95       	ret

00001e8e <TWI_EndTransmission>:

//End TWI transmission. 
void TWI_EndTransmission(void)
{
	//Transmit STOP condition
	TWCR = (1<<TWEN) | (1<<TWIE) | (1<<TWEA) | (1<<TWINT) | (1<<TWSTO);
    1e8e:	85 ed       	ldi	r24, 0xD5	; 213
    1e90:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait for stop condition to be executed on bus
	//TWINT is not set after a stop condition!
	while(BitCheck(TWCR, TWSTO));
    1e94:	ec eb       	ldi	r30, 0xBC	; 188
    1e96:	f0 e0       	ldi	r31, 0x00	; 0
    1e98:	80 81       	ld	r24, Z
    1e9a:	84 fd       	sbrc	r24, 4
    1e9c:	fd cf       	rjmp	.-6      	; 0x1e98 <TWI_EndTransmission+0xa>
}
    1e9e:	08 95       	ret

00001ea0 <TWI_Transmit>:

//Transmit data. 
uint8_t TWI_Transmit(const uint8_t Data)
{
	//Data to be transmitted
	TWDR = Data;
    1ea0:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>

	//Start transmission
	TWCR = (1<<TWINT) | (1<<TWEN);
    1ea4:	84 e8       	ldi	r24, 0x84	; 132
    1ea6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>

	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));
    1eaa:	ec eb       	ldi	r30, 0xBC	; 188
    1eac:	f0 e0       	ldi	r31, 0x00	; 0
    1eae:	80 81       	ld	r24, Z
    1eb0:	88 23       	and	r24, r24
    1eb2:	ec f7       	brge	.-6      	; 0x1eae <TWI_Transmit+0xe>
}

//Get TWI status. 
uint8_t TWI_Status(void)
{
	return (TWSR & 0xF8);
    1eb4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
	//Wait data to be shifted
	while (!BitCheck(TWCR, TWINT));

	//Return status register
	return (TWI_Status());
}
    1eb8:	88 7f       	andi	r24, 0xF8	; 248
    1eba:	08 95       	ret

00001ebc <__subsf3>:
    1ebc:	50 58       	subi	r21, 0x80	; 128

00001ebe <__addsf3>:
    1ebe:	bb 27       	eor	r27, r27
    1ec0:	aa 27       	eor	r26, r26
    1ec2:	0e 94 76 0f 	call	0x1eec	; 0x1eec <__addsf3x>
    1ec6:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_round>
    1eca:	0e 94 b2 10 	call	0x2164	; 0x2164 <__fp_pscA>
    1ece:	38 f0       	brcs	.+14     	; 0x1ede <__addsf3+0x20>
    1ed0:	0e 94 b9 10 	call	0x2172	; 0x2172 <__fp_pscB>
    1ed4:	20 f0       	brcs	.+8      	; 0x1ede <__addsf3+0x20>
    1ed6:	39 f4       	brne	.+14     	; 0x1ee6 <__addsf3+0x28>
    1ed8:	9f 3f       	cpi	r25, 0xFF	; 255
    1eda:	19 f4       	brne	.+6      	; 0x1ee2 <__addsf3+0x24>
    1edc:	26 f4       	brtc	.+8      	; 0x1ee6 <__addsf3+0x28>
    1ede:	0c 94 af 10 	jmp	0x215e	; 0x215e <__fp_nan>
    1ee2:	0e f4       	brtc	.+2      	; 0x1ee6 <__addsf3+0x28>
    1ee4:	e0 95       	com	r30
    1ee6:	e7 fb       	bst	r30, 7
    1ee8:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__fp_inf>

00001eec <__addsf3x>:
    1eec:	e9 2f       	mov	r30, r25
    1eee:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <__fp_split3>
    1ef2:	58 f3       	brcs	.-42     	; 0x1eca <__addsf3+0xc>
    1ef4:	ba 17       	cp	r27, r26
    1ef6:	62 07       	cpc	r22, r18
    1ef8:	73 07       	cpc	r23, r19
    1efa:	84 07       	cpc	r24, r20
    1efc:	95 07       	cpc	r25, r21
    1efe:	20 f0       	brcs	.+8      	; 0x1f08 <__addsf3x+0x1c>
    1f00:	79 f4       	brne	.+30     	; 0x1f20 <__addsf3x+0x34>
    1f02:	a6 f5       	brtc	.+104    	; 0x1f6c <__addsf3x+0x80>
    1f04:	0c 94 f3 10 	jmp	0x21e6	; 0x21e6 <__fp_zero>
    1f08:	0e f4       	brtc	.+2      	; 0x1f0c <__addsf3x+0x20>
    1f0a:	e0 95       	com	r30
    1f0c:	0b 2e       	mov	r0, r27
    1f0e:	ba 2f       	mov	r27, r26
    1f10:	a0 2d       	mov	r26, r0
    1f12:	0b 01       	movw	r0, r22
    1f14:	b9 01       	movw	r22, r18
    1f16:	90 01       	movw	r18, r0
    1f18:	0c 01       	movw	r0, r24
    1f1a:	ca 01       	movw	r24, r20
    1f1c:	a0 01       	movw	r20, r0
    1f1e:	11 24       	eor	r1, r1
    1f20:	ff 27       	eor	r31, r31
    1f22:	59 1b       	sub	r21, r25
    1f24:	99 f0       	breq	.+38     	; 0x1f4c <__addsf3x+0x60>
    1f26:	59 3f       	cpi	r21, 0xF9	; 249
    1f28:	50 f4       	brcc	.+20     	; 0x1f3e <__addsf3x+0x52>
    1f2a:	50 3e       	cpi	r21, 0xE0	; 224
    1f2c:	68 f1       	brcs	.+90     	; 0x1f88 <__addsf3x+0x9c>
    1f2e:	1a 16       	cp	r1, r26
    1f30:	f0 40       	sbci	r31, 0x00	; 0
    1f32:	a2 2f       	mov	r26, r18
    1f34:	23 2f       	mov	r18, r19
    1f36:	34 2f       	mov	r19, r20
    1f38:	44 27       	eor	r20, r20
    1f3a:	58 5f       	subi	r21, 0xF8	; 248
    1f3c:	f3 cf       	rjmp	.-26     	; 0x1f24 <__addsf3x+0x38>
    1f3e:	46 95       	lsr	r20
    1f40:	37 95       	ror	r19
    1f42:	27 95       	ror	r18
    1f44:	a7 95       	ror	r26
    1f46:	f0 40       	sbci	r31, 0x00	; 0
    1f48:	53 95       	inc	r21
    1f4a:	c9 f7       	brne	.-14     	; 0x1f3e <__addsf3x+0x52>
    1f4c:	7e f4       	brtc	.+30     	; 0x1f6c <__addsf3x+0x80>
    1f4e:	1f 16       	cp	r1, r31
    1f50:	ba 0b       	sbc	r27, r26
    1f52:	62 0b       	sbc	r22, r18
    1f54:	73 0b       	sbc	r23, r19
    1f56:	84 0b       	sbc	r24, r20
    1f58:	ba f0       	brmi	.+46     	; 0x1f88 <__addsf3x+0x9c>
    1f5a:	91 50       	subi	r25, 0x01	; 1
    1f5c:	a1 f0       	breq	.+40     	; 0x1f86 <__addsf3x+0x9a>
    1f5e:	ff 0f       	add	r31, r31
    1f60:	bb 1f       	adc	r27, r27
    1f62:	66 1f       	adc	r22, r22
    1f64:	77 1f       	adc	r23, r23
    1f66:	88 1f       	adc	r24, r24
    1f68:	c2 f7       	brpl	.-16     	; 0x1f5a <__addsf3x+0x6e>
    1f6a:	0e c0       	rjmp	.+28     	; 0x1f88 <__addsf3x+0x9c>
    1f6c:	ba 0f       	add	r27, r26
    1f6e:	62 1f       	adc	r22, r18
    1f70:	73 1f       	adc	r23, r19
    1f72:	84 1f       	adc	r24, r20
    1f74:	48 f4       	brcc	.+18     	; 0x1f88 <__addsf3x+0x9c>
    1f76:	87 95       	ror	r24
    1f78:	77 95       	ror	r23
    1f7a:	67 95       	ror	r22
    1f7c:	b7 95       	ror	r27
    1f7e:	f7 95       	ror	r31
    1f80:	9e 3f       	cpi	r25, 0xFE	; 254
    1f82:	08 f0       	brcs	.+2      	; 0x1f86 <__addsf3x+0x9a>
    1f84:	b0 cf       	rjmp	.-160    	; 0x1ee6 <__addsf3+0x28>
    1f86:	93 95       	inc	r25
    1f88:	88 0f       	add	r24, r24
    1f8a:	08 f0       	brcs	.+2      	; 0x1f8e <__addsf3x+0xa2>
    1f8c:	99 27       	eor	r25, r25
    1f8e:	ee 0f       	add	r30, r30
    1f90:	97 95       	ror	r25
    1f92:	87 95       	ror	r24
    1f94:	08 95       	ret

00001f96 <__divsf3>:
    1f96:	0e 94 df 0f 	call	0x1fbe	; 0x1fbe <__divsf3x>
    1f9a:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_round>
    1f9e:	0e 94 b9 10 	call	0x2172	; 0x2172 <__fp_pscB>
    1fa2:	58 f0       	brcs	.+22     	; 0x1fba <__divsf3+0x24>
    1fa4:	0e 94 b2 10 	call	0x2164	; 0x2164 <__fp_pscA>
    1fa8:	40 f0       	brcs	.+16     	; 0x1fba <__divsf3+0x24>
    1faa:	29 f4       	brne	.+10     	; 0x1fb6 <__divsf3+0x20>
    1fac:	5f 3f       	cpi	r21, 0xFF	; 255
    1fae:	29 f0       	breq	.+10     	; 0x1fba <__divsf3+0x24>
    1fb0:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__fp_inf>
    1fb4:	51 11       	cpse	r21, r1
    1fb6:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__fp_szero>
    1fba:	0c 94 af 10 	jmp	0x215e	; 0x215e <__fp_nan>

00001fbe <__divsf3x>:
    1fbe:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <__fp_split3>
    1fc2:	68 f3       	brcs	.-38     	; 0x1f9e <__divsf3+0x8>

00001fc4 <__divsf3_pse>:
    1fc4:	99 23       	and	r25, r25
    1fc6:	b1 f3       	breq	.-20     	; 0x1fb4 <__divsf3+0x1e>
    1fc8:	55 23       	and	r21, r21
    1fca:	91 f3       	breq	.-28     	; 0x1fb0 <__divsf3+0x1a>
    1fcc:	95 1b       	sub	r25, r21
    1fce:	55 0b       	sbc	r21, r21
    1fd0:	bb 27       	eor	r27, r27
    1fd2:	aa 27       	eor	r26, r26
    1fd4:	62 17       	cp	r22, r18
    1fd6:	73 07       	cpc	r23, r19
    1fd8:	84 07       	cpc	r24, r20
    1fda:	38 f0       	brcs	.+14     	; 0x1fea <__divsf3_pse+0x26>
    1fdc:	9f 5f       	subi	r25, 0xFF	; 255
    1fde:	5f 4f       	sbci	r21, 0xFF	; 255
    1fe0:	22 0f       	add	r18, r18
    1fe2:	33 1f       	adc	r19, r19
    1fe4:	44 1f       	adc	r20, r20
    1fe6:	aa 1f       	adc	r26, r26
    1fe8:	a9 f3       	breq	.-22     	; 0x1fd4 <__divsf3_pse+0x10>
    1fea:	35 d0       	rcall	.+106    	; 0x2056 <__divsf3_pse+0x92>
    1fec:	0e 2e       	mov	r0, r30
    1fee:	3a f0       	brmi	.+14     	; 0x1ffe <__divsf3_pse+0x3a>
    1ff0:	e0 e8       	ldi	r30, 0x80	; 128
    1ff2:	32 d0       	rcall	.+100    	; 0x2058 <__divsf3_pse+0x94>
    1ff4:	91 50       	subi	r25, 0x01	; 1
    1ff6:	50 40       	sbci	r21, 0x00	; 0
    1ff8:	e6 95       	lsr	r30
    1ffa:	00 1c       	adc	r0, r0
    1ffc:	ca f7       	brpl	.-14     	; 0x1ff0 <__divsf3_pse+0x2c>
    1ffe:	2b d0       	rcall	.+86     	; 0x2056 <__divsf3_pse+0x92>
    2000:	fe 2f       	mov	r31, r30
    2002:	29 d0       	rcall	.+82     	; 0x2056 <__divsf3_pse+0x92>
    2004:	66 0f       	add	r22, r22
    2006:	77 1f       	adc	r23, r23
    2008:	88 1f       	adc	r24, r24
    200a:	bb 1f       	adc	r27, r27
    200c:	26 17       	cp	r18, r22
    200e:	37 07       	cpc	r19, r23
    2010:	48 07       	cpc	r20, r24
    2012:	ab 07       	cpc	r26, r27
    2014:	b0 e8       	ldi	r27, 0x80	; 128
    2016:	09 f0       	breq	.+2      	; 0x201a <__divsf3_pse+0x56>
    2018:	bb 0b       	sbc	r27, r27
    201a:	80 2d       	mov	r24, r0
    201c:	bf 01       	movw	r22, r30
    201e:	ff 27       	eor	r31, r31
    2020:	93 58       	subi	r25, 0x83	; 131
    2022:	5f 4f       	sbci	r21, 0xFF	; 255
    2024:	3a f0       	brmi	.+14     	; 0x2034 <__divsf3_pse+0x70>
    2026:	9e 3f       	cpi	r25, 0xFE	; 254
    2028:	51 05       	cpc	r21, r1
    202a:	78 f0       	brcs	.+30     	; 0x204a <__divsf3_pse+0x86>
    202c:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__fp_inf>
    2030:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__fp_szero>
    2034:	5f 3f       	cpi	r21, 0xFF	; 255
    2036:	e4 f3       	brlt	.-8      	; 0x2030 <__divsf3_pse+0x6c>
    2038:	98 3e       	cpi	r25, 0xE8	; 232
    203a:	d4 f3       	brlt	.-12     	; 0x2030 <__divsf3_pse+0x6c>
    203c:	86 95       	lsr	r24
    203e:	77 95       	ror	r23
    2040:	67 95       	ror	r22
    2042:	b7 95       	ror	r27
    2044:	f7 95       	ror	r31
    2046:	9f 5f       	subi	r25, 0xFF	; 255
    2048:	c9 f7       	brne	.-14     	; 0x203c <__divsf3_pse+0x78>
    204a:	88 0f       	add	r24, r24
    204c:	91 1d       	adc	r25, r1
    204e:	96 95       	lsr	r25
    2050:	87 95       	ror	r24
    2052:	97 f9       	bld	r25, 7
    2054:	08 95       	ret
    2056:	e1 e0       	ldi	r30, 0x01	; 1
    2058:	66 0f       	add	r22, r22
    205a:	77 1f       	adc	r23, r23
    205c:	88 1f       	adc	r24, r24
    205e:	bb 1f       	adc	r27, r27
    2060:	62 17       	cp	r22, r18
    2062:	73 07       	cpc	r23, r19
    2064:	84 07       	cpc	r24, r20
    2066:	ba 07       	cpc	r27, r26
    2068:	20 f0       	brcs	.+8      	; 0x2072 <__divsf3_pse+0xae>
    206a:	62 1b       	sub	r22, r18
    206c:	73 0b       	sbc	r23, r19
    206e:	84 0b       	sbc	r24, r20
    2070:	ba 0b       	sbc	r27, r26
    2072:	ee 1f       	adc	r30, r30
    2074:	88 f7       	brcc	.-30     	; 0x2058 <__divsf3_pse+0x94>
    2076:	e0 95       	com	r30
    2078:	08 95       	ret

0000207a <__fixunssfsi>:
    207a:	0e 94 d9 10 	call	0x21b2	; 0x21b2 <__fp_splitA>
    207e:	88 f0       	brcs	.+34     	; 0x20a2 <__fixunssfsi+0x28>
    2080:	9f 57       	subi	r25, 0x7F	; 127
    2082:	98 f0       	brcs	.+38     	; 0x20aa <__fixunssfsi+0x30>
    2084:	b9 2f       	mov	r27, r25
    2086:	99 27       	eor	r25, r25
    2088:	b7 51       	subi	r27, 0x17	; 23
    208a:	b0 f0       	brcs	.+44     	; 0x20b8 <__fixunssfsi+0x3e>
    208c:	e1 f0       	breq	.+56     	; 0x20c6 <__fixunssfsi+0x4c>
    208e:	66 0f       	add	r22, r22
    2090:	77 1f       	adc	r23, r23
    2092:	88 1f       	adc	r24, r24
    2094:	99 1f       	adc	r25, r25
    2096:	1a f0       	brmi	.+6      	; 0x209e <__fixunssfsi+0x24>
    2098:	ba 95       	dec	r27
    209a:	c9 f7       	brne	.-14     	; 0x208e <__fixunssfsi+0x14>
    209c:	14 c0       	rjmp	.+40     	; 0x20c6 <__fixunssfsi+0x4c>
    209e:	b1 30       	cpi	r27, 0x01	; 1
    20a0:	91 f0       	breq	.+36     	; 0x20c6 <__fixunssfsi+0x4c>
    20a2:	0e 94 f3 10 	call	0x21e6	; 0x21e6 <__fp_zero>
    20a6:	b1 e0       	ldi	r27, 0x01	; 1
    20a8:	08 95       	ret
    20aa:	0c 94 f3 10 	jmp	0x21e6	; 0x21e6 <__fp_zero>
    20ae:	67 2f       	mov	r22, r23
    20b0:	78 2f       	mov	r23, r24
    20b2:	88 27       	eor	r24, r24
    20b4:	b8 5f       	subi	r27, 0xF8	; 248
    20b6:	39 f0       	breq	.+14     	; 0x20c6 <__fixunssfsi+0x4c>
    20b8:	b9 3f       	cpi	r27, 0xF9	; 249
    20ba:	cc f3       	brlt	.-14     	; 0x20ae <__fixunssfsi+0x34>
    20bc:	86 95       	lsr	r24
    20be:	77 95       	ror	r23
    20c0:	67 95       	ror	r22
    20c2:	b3 95       	inc	r27
    20c4:	d9 f7       	brne	.-10     	; 0x20bc <__fixunssfsi+0x42>
    20c6:	3e f4       	brtc	.+14     	; 0x20d6 <__fixunssfsi+0x5c>
    20c8:	90 95       	com	r25
    20ca:	80 95       	com	r24
    20cc:	70 95       	com	r23
    20ce:	61 95       	neg	r22
    20d0:	7f 4f       	sbci	r23, 0xFF	; 255
    20d2:	8f 4f       	sbci	r24, 0xFF	; 255
    20d4:	9f 4f       	sbci	r25, 0xFF	; 255
    20d6:	08 95       	ret

000020d8 <__floatunsisf>:
    20d8:	e8 94       	clt
    20da:	09 c0       	rjmp	.+18     	; 0x20ee <__floatsisf+0x12>

000020dc <__floatsisf>:
    20dc:	97 fb       	bst	r25, 7
    20de:	3e f4       	brtc	.+14     	; 0x20ee <__floatsisf+0x12>
    20e0:	90 95       	com	r25
    20e2:	80 95       	com	r24
    20e4:	70 95       	com	r23
    20e6:	61 95       	neg	r22
    20e8:	7f 4f       	sbci	r23, 0xFF	; 255
    20ea:	8f 4f       	sbci	r24, 0xFF	; 255
    20ec:	9f 4f       	sbci	r25, 0xFF	; 255
    20ee:	99 23       	and	r25, r25
    20f0:	a9 f0       	breq	.+42     	; 0x211c <__floatsisf+0x40>
    20f2:	f9 2f       	mov	r31, r25
    20f4:	96 e9       	ldi	r25, 0x96	; 150
    20f6:	bb 27       	eor	r27, r27
    20f8:	93 95       	inc	r25
    20fa:	f6 95       	lsr	r31
    20fc:	87 95       	ror	r24
    20fe:	77 95       	ror	r23
    2100:	67 95       	ror	r22
    2102:	b7 95       	ror	r27
    2104:	f1 11       	cpse	r31, r1
    2106:	f8 cf       	rjmp	.-16     	; 0x20f8 <__floatsisf+0x1c>
    2108:	fa f4       	brpl	.+62     	; 0x2148 <__floatsisf+0x6c>
    210a:	bb 0f       	add	r27, r27
    210c:	11 f4       	brne	.+4      	; 0x2112 <__floatsisf+0x36>
    210e:	60 ff       	sbrs	r22, 0
    2110:	1b c0       	rjmp	.+54     	; 0x2148 <__floatsisf+0x6c>
    2112:	6f 5f       	subi	r22, 0xFF	; 255
    2114:	7f 4f       	sbci	r23, 0xFF	; 255
    2116:	8f 4f       	sbci	r24, 0xFF	; 255
    2118:	9f 4f       	sbci	r25, 0xFF	; 255
    211a:	16 c0       	rjmp	.+44     	; 0x2148 <__floatsisf+0x6c>
    211c:	88 23       	and	r24, r24
    211e:	11 f0       	breq	.+4      	; 0x2124 <__floatsisf+0x48>
    2120:	96 e9       	ldi	r25, 0x96	; 150
    2122:	11 c0       	rjmp	.+34     	; 0x2146 <__floatsisf+0x6a>
    2124:	77 23       	and	r23, r23
    2126:	21 f0       	breq	.+8      	; 0x2130 <__floatsisf+0x54>
    2128:	9e e8       	ldi	r25, 0x8E	; 142
    212a:	87 2f       	mov	r24, r23
    212c:	76 2f       	mov	r23, r22
    212e:	05 c0       	rjmp	.+10     	; 0x213a <__floatsisf+0x5e>
    2130:	66 23       	and	r22, r22
    2132:	71 f0       	breq	.+28     	; 0x2150 <__floatsisf+0x74>
    2134:	96 e8       	ldi	r25, 0x86	; 134
    2136:	86 2f       	mov	r24, r22
    2138:	70 e0       	ldi	r23, 0x00	; 0
    213a:	60 e0       	ldi	r22, 0x00	; 0
    213c:	2a f0       	brmi	.+10     	; 0x2148 <__floatsisf+0x6c>
    213e:	9a 95       	dec	r25
    2140:	66 0f       	add	r22, r22
    2142:	77 1f       	adc	r23, r23
    2144:	88 1f       	adc	r24, r24
    2146:	da f7       	brpl	.-10     	; 0x213e <__floatsisf+0x62>
    2148:	88 0f       	add	r24, r24
    214a:	96 95       	lsr	r25
    214c:	87 95       	ror	r24
    214e:	97 f9       	bld	r25, 7
    2150:	08 95       	ret

00002152 <__fp_inf>:
    2152:	97 f9       	bld	r25, 7
    2154:	9f 67       	ori	r25, 0x7F	; 127
    2156:	80 e8       	ldi	r24, 0x80	; 128
    2158:	70 e0       	ldi	r23, 0x00	; 0
    215a:	60 e0       	ldi	r22, 0x00	; 0
    215c:	08 95       	ret

0000215e <__fp_nan>:
    215e:	9f ef       	ldi	r25, 0xFF	; 255
    2160:	80 ec       	ldi	r24, 0xC0	; 192
    2162:	08 95       	ret

00002164 <__fp_pscA>:
    2164:	00 24       	eor	r0, r0
    2166:	0a 94       	dec	r0
    2168:	16 16       	cp	r1, r22
    216a:	17 06       	cpc	r1, r23
    216c:	18 06       	cpc	r1, r24
    216e:	09 06       	cpc	r0, r25
    2170:	08 95       	ret

00002172 <__fp_pscB>:
    2172:	00 24       	eor	r0, r0
    2174:	0a 94       	dec	r0
    2176:	12 16       	cp	r1, r18
    2178:	13 06       	cpc	r1, r19
    217a:	14 06       	cpc	r1, r20
    217c:	05 06       	cpc	r0, r21
    217e:	08 95       	ret

00002180 <__fp_round>:
    2180:	09 2e       	mov	r0, r25
    2182:	03 94       	inc	r0
    2184:	00 0c       	add	r0, r0
    2186:	11 f4       	brne	.+4      	; 0x218c <__fp_round+0xc>
    2188:	88 23       	and	r24, r24
    218a:	52 f0       	brmi	.+20     	; 0x21a0 <__fp_round+0x20>
    218c:	bb 0f       	add	r27, r27
    218e:	40 f4       	brcc	.+16     	; 0x21a0 <__fp_round+0x20>
    2190:	bf 2b       	or	r27, r31
    2192:	11 f4       	brne	.+4      	; 0x2198 <__fp_round+0x18>
    2194:	60 ff       	sbrs	r22, 0
    2196:	04 c0       	rjmp	.+8      	; 0x21a0 <__fp_round+0x20>
    2198:	6f 5f       	subi	r22, 0xFF	; 255
    219a:	7f 4f       	sbci	r23, 0xFF	; 255
    219c:	8f 4f       	sbci	r24, 0xFF	; 255
    219e:	9f 4f       	sbci	r25, 0xFF	; 255
    21a0:	08 95       	ret

000021a2 <__fp_split3>:
    21a2:	57 fd       	sbrc	r21, 7
    21a4:	90 58       	subi	r25, 0x80	; 128
    21a6:	44 0f       	add	r20, r20
    21a8:	55 1f       	adc	r21, r21
    21aa:	59 f0       	breq	.+22     	; 0x21c2 <__fp_splitA+0x10>
    21ac:	5f 3f       	cpi	r21, 0xFF	; 255
    21ae:	71 f0       	breq	.+28     	; 0x21cc <__fp_splitA+0x1a>
    21b0:	47 95       	ror	r20

000021b2 <__fp_splitA>:
    21b2:	88 0f       	add	r24, r24
    21b4:	97 fb       	bst	r25, 7
    21b6:	99 1f       	adc	r25, r25
    21b8:	61 f0       	breq	.+24     	; 0x21d2 <__fp_splitA+0x20>
    21ba:	9f 3f       	cpi	r25, 0xFF	; 255
    21bc:	79 f0       	breq	.+30     	; 0x21dc <__fp_splitA+0x2a>
    21be:	87 95       	ror	r24
    21c0:	08 95       	ret
    21c2:	12 16       	cp	r1, r18
    21c4:	13 06       	cpc	r1, r19
    21c6:	14 06       	cpc	r1, r20
    21c8:	55 1f       	adc	r21, r21
    21ca:	f2 cf       	rjmp	.-28     	; 0x21b0 <__fp_split3+0xe>
    21cc:	46 95       	lsr	r20
    21ce:	f1 df       	rcall	.-30     	; 0x21b2 <__fp_splitA>
    21d0:	08 c0       	rjmp	.+16     	; 0x21e2 <__fp_splitA+0x30>
    21d2:	16 16       	cp	r1, r22
    21d4:	17 06       	cpc	r1, r23
    21d6:	18 06       	cpc	r1, r24
    21d8:	99 1f       	adc	r25, r25
    21da:	f1 cf       	rjmp	.-30     	; 0x21be <__fp_splitA+0xc>
    21dc:	86 95       	lsr	r24
    21de:	71 05       	cpc	r23, r1
    21e0:	61 05       	cpc	r22, r1
    21e2:	08 94       	sec
    21e4:	08 95       	ret

000021e6 <__fp_zero>:
    21e6:	e8 94       	clt

000021e8 <__fp_szero>:
    21e8:	bb 27       	eor	r27, r27
    21ea:	66 27       	eor	r22, r22
    21ec:	77 27       	eor	r23, r23
    21ee:	cb 01       	movw	r24, r22
    21f0:	97 f9       	bld	r25, 7
    21f2:	08 95       	ret

000021f4 <__mulsf3>:
    21f4:	0e 94 0d 11 	call	0x221a	; 0x221a <__mulsf3x>
    21f8:	0c 94 c0 10 	jmp	0x2180	; 0x2180 <__fp_round>
    21fc:	0e 94 b2 10 	call	0x2164	; 0x2164 <__fp_pscA>
    2200:	38 f0       	brcs	.+14     	; 0x2210 <__mulsf3+0x1c>
    2202:	0e 94 b9 10 	call	0x2172	; 0x2172 <__fp_pscB>
    2206:	20 f0       	brcs	.+8      	; 0x2210 <__mulsf3+0x1c>
    2208:	95 23       	and	r25, r21
    220a:	11 f0       	breq	.+4      	; 0x2210 <__mulsf3+0x1c>
    220c:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__fp_inf>
    2210:	0c 94 af 10 	jmp	0x215e	; 0x215e <__fp_nan>
    2214:	11 24       	eor	r1, r1
    2216:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__fp_szero>

0000221a <__mulsf3x>:
    221a:	0e 94 d1 10 	call	0x21a2	; 0x21a2 <__fp_split3>
    221e:	70 f3       	brcs	.-36     	; 0x21fc <__mulsf3+0x8>

00002220 <__mulsf3_pse>:
    2220:	95 9f       	mul	r25, r21
    2222:	c1 f3       	breq	.-16     	; 0x2214 <__mulsf3+0x20>
    2224:	95 0f       	add	r25, r21
    2226:	50 e0       	ldi	r21, 0x00	; 0
    2228:	55 1f       	adc	r21, r21
    222a:	62 9f       	mul	r22, r18
    222c:	f0 01       	movw	r30, r0
    222e:	72 9f       	mul	r23, r18
    2230:	bb 27       	eor	r27, r27
    2232:	f0 0d       	add	r31, r0
    2234:	b1 1d       	adc	r27, r1
    2236:	63 9f       	mul	r22, r19
    2238:	aa 27       	eor	r26, r26
    223a:	f0 0d       	add	r31, r0
    223c:	b1 1d       	adc	r27, r1
    223e:	aa 1f       	adc	r26, r26
    2240:	64 9f       	mul	r22, r20
    2242:	66 27       	eor	r22, r22
    2244:	b0 0d       	add	r27, r0
    2246:	a1 1d       	adc	r26, r1
    2248:	66 1f       	adc	r22, r22
    224a:	82 9f       	mul	r24, r18
    224c:	22 27       	eor	r18, r18
    224e:	b0 0d       	add	r27, r0
    2250:	a1 1d       	adc	r26, r1
    2252:	62 1f       	adc	r22, r18
    2254:	73 9f       	mul	r23, r19
    2256:	b0 0d       	add	r27, r0
    2258:	a1 1d       	adc	r26, r1
    225a:	62 1f       	adc	r22, r18
    225c:	83 9f       	mul	r24, r19
    225e:	a0 0d       	add	r26, r0
    2260:	61 1d       	adc	r22, r1
    2262:	22 1f       	adc	r18, r18
    2264:	74 9f       	mul	r23, r20
    2266:	33 27       	eor	r19, r19
    2268:	a0 0d       	add	r26, r0
    226a:	61 1d       	adc	r22, r1
    226c:	23 1f       	adc	r18, r19
    226e:	84 9f       	mul	r24, r20
    2270:	60 0d       	add	r22, r0
    2272:	21 1d       	adc	r18, r1
    2274:	82 2f       	mov	r24, r18
    2276:	76 2f       	mov	r23, r22
    2278:	6a 2f       	mov	r22, r26
    227a:	11 24       	eor	r1, r1
    227c:	9f 57       	subi	r25, 0x7F	; 127
    227e:	50 40       	sbci	r21, 0x00	; 0
    2280:	9a f0       	brmi	.+38     	; 0x22a8 <__mulsf3_pse+0x88>
    2282:	f1 f0       	breq	.+60     	; 0x22c0 <__mulsf3_pse+0xa0>
    2284:	88 23       	and	r24, r24
    2286:	4a f0       	brmi	.+18     	; 0x229a <__mulsf3_pse+0x7a>
    2288:	ee 0f       	add	r30, r30
    228a:	ff 1f       	adc	r31, r31
    228c:	bb 1f       	adc	r27, r27
    228e:	66 1f       	adc	r22, r22
    2290:	77 1f       	adc	r23, r23
    2292:	88 1f       	adc	r24, r24
    2294:	91 50       	subi	r25, 0x01	; 1
    2296:	50 40       	sbci	r21, 0x00	; 0
    2298:	a9 f7       	brne	.-22     	; 0x2284 <__mulsf3_pse+0x64>
    229a:	9e 3f       	cpi	r25, 0xFE	; 254
    229c:	51 05       	cpc	r21, r1
    229e:	80 f0       	brcs	.+32     	; 0x22c0 <__mulsf3_pse+0xa0>
    22a0:	0c 94 a9 10 	jmp	0x2152	; 0x2152 <__fp_inf>
    22a4:	0c 94 f4 10 	jmp	0x21e8	; 0x21e8 <__fp_szero>
    22a8:	5f 3f       	cpi	r21, 0xFF	; 255
    22aa:	e4 f3       	brlt	.-8      	; 0x22a4 <__mulsf3_pse+0x84>
    22ac:	98 3e       	cpi	r25, 0xE8	; 232
    22ae:	d4 f3       	brlt	.-12     	; 0x22a4 <__mulsf3_pse+0x84>
    22b0:	86 95       	lsr	r24
    22b2:	77 95       	ror	r23
    22b4:	67 95       	ror	r22
    22b6:	b7 95       	ror	r27
    22b8:	f7 95       	ror	r31
    22ba:	e7 95       	ror	r30
    22bc:	9f 5f       	subi	r25, 0xFF	; 255
    22be:	c1 f7       	brne	.-16     	; 0x22b0 <__mulsf3_pse+0x90>
    22c0:	fe 2b       	or	r31, r30
    22c2:	88 0f       	add	r24, r24
    22c4:	91 1d       	adc	r25, r1
    22c6:	96 95       	lsr	r25
    22c8:	87 95       	ror	r24
    22ca:	97 f9       	bld	r25, 7
    22cc:	08 95       	ret

000022ce <__udivmodsi4>:
    22ce:	a1 e2       	ldi	r26, 0x21	; 33
    22d0:	1a 2e       	mov	r1, r26
    22d2:	aa 1b       	sub	r26, r26
    22d4:	bb 1b       	sub	r27, r27
    22d6:	fd 01       	movw	r30, r26
    22d8:	0d c0       	rjmp	.+26     	; 0x22f4 <__udivmodsi4_ep>

000022da <__udivmodsi4_loop>:
    22da:	aa 1f       	adc	r26, r26
    22dc:	bb 1f       	adc	r27, r27
    22de:	ee 1f       	adc	r30, r30
    22e0:	ff 1f       	adc	r31, r31
    22e2:	a2 17       	cp	r26, r18
    22e4:	b3 07       	cpc	r27, r19
    22e6:	e4 07       	cpc	r30, r20
    22e8:	f5 07       	cpc	r31, r21
    22ea:	20 f0       	brcs	.+8      	; 0x22f4 <__udivmodsi4_ep>
    22ec:	a2 1b       	sub	r26, r18
    22ee:	b3 0b       	sbc	r27, r19
    22f0:	e4 0b       	sbc	r30, r20
    22f2:	f5 0b       	sbc	r31, r21

000022f4 <__udivmodsi4_ep>:
    22f4:	66 1f       	adc	r22, r22
    22f6:	77 1f       	adc	r23, r23
    22f8:	88 1f       	adc	r24, r24
    22fa:	99 1f       	adc	r25, r25
    22fc:	1a 94       	dec	r1
    22fe:	69 f7       	brne	.-38     	; 0x22da <__udivmodsi4_loop>
    2300:	60 95       	com	r22
    2302:	70 95       	com	r23
    2304:	80 95       	com	r24
    2306:	90 95       	com	r25
    2308:	9b 01       	movw	r18, r22
    230a:	ac 01       	movw	r20, r24
    230c:	bd 01       	movw	r22, r26
    230e:	cf 01       	movw	r24, r30
    2310:	08 95       	ret

00002312 <__divmodsi4>:
    2312:	05 2e       	mov	r0, r21
    2314:	97 fb       	bst	r25, 7
    2316:	1e f4       	brtc	.+6      	; 0x231e <__divmodsi4+0xc>
    2318:	00 94       	com	r0
    231a:	0e 94 a0 11 	call	0x2340	; 0x2340 <__negsi2>
    231e:	57 fd       	sbrc	r21, 7
    2320:	07 d0       	rcall	.+14     	; 0x2330 <__divmodsi4_neg2>
    2322:	0e 94 67 11 	call	0x22ce	; 0x22ce <__udivmodsi4>
    2326:	07 fc       	sbrc	r0, 7
    2328:	03 d0       	rcall	.+6      	; 0x2330 <__divmodsi4_neg2>
    232a:	4e f4       	brtc	.+18     	; 0x233e <__divmodsi4_exit>
    232c:	0c 94 a0 11 	jmp	0x2340	; 0x2340 <__negsi2>

00002330 <__divmodsi4_neg2>:
    2330:	50 95       	com	r21
    2332:	40 95       	com	r20
    2334:	30 95       	com	r19
    2336:	21 95       	neg	r18
    2338:	3f 4f       	sbci	r19, 0xFF	; 255
    233a:	4f 4f       	sbci	r20, 0xFF	; 255
    233c:	5f 4f       	sbci	r21, 0xFF	; 255

0000233e <__divmodsi4_exit>:
    233e:	08 95       	ret

00002340 <__negsi2>:
    2340:	90 95       	com	r25
    2342:	80 95       	com	r24
    2344:	70 95       	com	r23
    2346:	61 95       	neg	r22
    2348:	7f 4f       	sbci	r23, 0xFF	; 255
    234a:	8f 4f       	sbci	r24, 0xFF	; 255
    234c:	9f 4f       	sbci	r25, 0xFF	; 255
    234e:	08 95       	ret

00002350 <__umulhisi3>:
    2350:	a2 9f       	mul	r26, r18
    2352:	b0 01       	movw	r22, r0
    2354:	b3 9f       	mul	r27, r19
    2356:	c0 01       	movw	r24, r0
    2358:	a3 9f       	mul	r26, r19
    235a:	70 0d       	add	r23, r0
    235c:	81 1d       	adc	r24, r1
    235e:	11 24       	eor	r1, r1
    2360:	91 1d       	adc	r25, r1
    2362:	b2 9f       	mul	r27, r18
    2364:	70 0d       	add	r23, r0
    2366:	81 1d       	adc	r24, r1
    2368:	11 24       	eor	r1, r1
    236a:	91 1d       	adc	r25, r1
    236c:	08 95       	ret

0000236e <sprintf>:
    236e:	ae e0       	ldi	r26, 0x0E	; 14
    2370:	b0 e0       	ldi	r27, 0x00	; 0
    2372:	ed eb       	ldi	r30, 0xBD	; 189
    2374:	f1 e1       	ldi	r31, 0x11	; 17
    2376:	0c 94 8e 14 	jmp	0x291c	; 0x291c <__prologue_saves__+0x1c>
    237a:	0d 89       	ldd	r16, Y+21	; 0x15
    237c:	1e 89       	ldd	r17, Y+22	; 0x16
    237e:	86 e0       	ldi	r24, 0x06	; 6
    2380:	8c 83       	std	Y+4, r24	; 0x04
    2382:	1a 83       	std	Y+2, r17	; 0x02
    2384:	09 83       	std	Y+1, r16	; 0x01
    2386:	8f ef       	ldi	r24, 0xFF	; 255
    2388:	9f e7       	ldi	r25, 0x7F	; 127
    238a:	9e 83       	std	Y+6, r25	; 0x06
    238c:	8d 83       	std	Y+5, r24	; 0x05
    238e:	ae 01       	movw	r20, r28
    2390:	47 5e       	subi	r20, 0xE7	; 231
    2392:	5f 4f       	sbci	r21, 0xFF	; 255
    2394:	6f 89       	ldd	r22, Y+23	; 0x17
    2396:	78 8d       	ldd	r23, Y+24	; 0x18
    2398:	ce 01       	movw	r24, r28
    239a:	01 96       	adiw	r24, 0x01	; 1
    239c:	0e 94 d9 11 	call	0x23b2	; 0x23b2 <vfprintf>
    23a0:	ef 81       	ldd	r30, Y+7	; 0x07
    23a2:	f8 85       	ldd	r31, Y+8	; 0x08
    23a4:	e0 0f       	add	r30, r16
    23a6:	f1 1f       	adc	r31, r17
    23a8:	10 82       	st	Z, r1
    23aa:	2e 96       	adiw	r28, 0x0e	; 14
    23ac:	e4 e0       	ldi	r30, 0x04	; 4
    23ae:	0c 94 aa 14 	jmp	0x2954	; 0x2954 <__epilogue_restores__+0x1c>

000023b2 <vfprintf>:
    23b2:	ab e0       	ldi	r26, 0x0B	; 11
    23b4:	b0 e0       	ldi	r27, 0x00	; 0
    23b6:	ef ed       	ldi	r30, 0xDF	; 223
    23b8:	f1 e1       	ldi	r31, 0x11	; 17
    23ba:	0c 94 80 14 	jmp	0x2900	; 0x2900 <__prologue_saves__>
    23be:	6c 01       	movw	r12, r24
    23c0:	7b 01       	movw	r14, r22
    23c2:	8a 01       	movw	r16, r20
    23c4:	fc 01       	movw	r30, r24
    23c6:	17 82       	std	Z+7, r1	; 0x07
    23c8:	16 82       	std	Z+6, r1	; 0x06
    23ca:	83 81       	ldd	r24, Z+3	; 0x03
    23cc:	81 ff       	sbrs	r24, 1
    23ce:	cc c1       	rjmp	.+920    	; 0x2768 <vfprintf+0x3b6>
    23d0:	ce 01       	movw	r24, r28
    23d2:	01 96       	adiw	r24, 0x01	; 1
    23d4:	3c 01       	movw	r6, r24
    23d6:	f6 01       	movw	r30, r12
    23d8:	93 81       	ldd	r25, Z+3	; 0x03
    23da:	f7 01       	movw	r30, r14
    23dc:	93 fd       	sbrc	r25, 3
    23de:	85 91       	lpm	r24, Z+
    23e0:	93 ff       	sbrs	r25, 3
    23e2:	81 91       	ld	r24, Z+
    23e4:	7f 01       	movw	r14, r30
    23e6:	88 23       	and	r24, r24
    23e8:	09 f4       	brne	.+2      	; 0x23ec <vfprintf+0x3a>
    23ea:	ba c1       	rjmp	.+884    	; 0x2760 <vfprintf+0x3ae>
    23ec:	85 32       	cpi	r24, 0x25	; 37
    23ee:	39 f4       	brne	.+14     	; 0x23fe <vfprintf+0x4c>
    23f0:	93 fd       	sbrc	r25, 3
    23f2:	85 91       	lpm	r24, Z+
    23f4:	93 ff       	sbrs	r25, 3
    23f6:	81 91       	ld	r24, Z+
    23f8:	7f 01       	movw	r14, r30
    23fa:	85 32       	cpi	r24, 0x25	; 37
    23fc:	29 f4       	brne	.+10     	; 0x2408 <vfprintf+0x56>
    23fe:	b6 01       	movw	r22, r12
    2400:	90 e0       	ldi	r25, 0x00	; 0
    2402:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    2406:	e7 cf       	rjmp	.-50     	; 0x23d6 <vfprintf+0x24>
    2408:	91 2c       	mov	r9, r1
    240a:	21 2c       	mov	r2, r1
    240c:	31 2c       	mov	r3, r1
    240e:	ff e1       	ldi	r31, 0x1F	; 31
    2410:	f3 15       	cp	r31, r3
    2412:	d8 f0       	brcs	.+54     	; 0x244a <vfprintf+0x98>
    2414:	8b 32       	cpi	r24, 0x2B	; 43
    2416:	79 f0       	breq	.+30     	; 0x2436 <vfprintf+0x84>
    2418:	38 f4       	brcc	.+14     	; 0x2428 <vfprintf+0x76>
    241a:	80 32       	cpi	r24, 0x20	; 32
    241c:	79 f0       	breq	.+30     	; 0x243c <vfprintf+0x8a>
    241e:	83 32       	cpi	r24, 0x23	; 35
    2420:	a1 f4       	brne	.+40     	; 0x244a <vfprintf+0x98>
    2422:	23 2d       	mov	r18, r3
    2424:	20 61       	ori	r18, 0x10	; 16
    2426:	1d c0       	rjmp	.+58     	; 0x2462 <vfprintf+0xb0>
    2428:	8d 32       	cpi	r24, 0x2D	; 45
    242a:	61 f0       	breq	.+24     	; 0x2444 <vfprintf+0x92>
    242c:	80 33       	cpi	r24, 0x30	; 48
    242e:	69 f4       	brne	.+26     	; 0x244a <vfprintf+0x98>
    2430:	23 2d       	mov	r18, r3
    2432:	21 60       	ori	r18, 0x01	; 1
    2434:	16 c0       	rjmp	.+44     	; 0x2462 <vfprintf+0xb0>
    2436:	83 2d       	mov	r24, r3
    2438:	82 60       	ori	r24, 0x02	; 2
    243a:	38 2e       	mov	r3, r24
    243c:	e3 2d       	mov	r30, r3
    243e:	e4 60       	ori	r30, 0x04	; 4
    2440:	3e 2e       	mov	r3, r30
    2442:	2a c0       	rjmp	.+84     	; 0x2498 <vfprintf+0xe6>
    2444:	f3 2d       	mov	r31, r3
    2446:	f8 60       	ori	r31, 0x08	; 8
    2448:	1d c0       	rjmp	.+58     	; 0x2484 <vfprintf+0xd2>
    244a:	37 fc       	sbrc	r3, 7
    244c:	2d c0       	rjmp	.+90     	; 0x24a8 <vfprintf+0xf6>
    244e:	20 ed       	ldi	r18, 0xD0	; 208
    2450:	28 0f       	add	r18, r24
    2452:	2a 30       	cpi	r18, 0x0A	; 10
    2454:	40 f0       	brcs	.+16     	; 0x2466 <vfprintf+0xb4>
    2456:	8e 32       	cpi	r24, 0x2E	; 46
    2458:	b9 f4       	brne	.+46     	; 0x2488 <vfprintf+0xd6>
    245a:	36 fc       	sbrc	r3, 6
    245c:	81 c1       	rjmp	.+770    	; 0x2760 <vfprintf+0x3ae>
    245e:	23 2d       	mov	r18, r3
    2460:	20 64       	ori	r18, 0x40	; 64
    2462:	32 2e       	mov	r3, r18
    2464:	19 c0       	rjmp	.+50     	; 0x2498 <vfprintf+0xe6>
    2466:	36 fe       	sbrs	r3, 6
    2468:	06 c0       	rjmp	.+12     	; 0x2476 <vfprintf+0xc4>
    246a:	8a e0       	ldi	r24, 0x0A	; 10
    246c:	98 9e       	mul	r9, r24
    246e:	20 0d       	add	r18, r0
    2470:	11 24       	eor	r1, r1
    2472:	92 2e       	mov	r9, r18
    2474:	11 c0       	rjmp	.+34     	; 0x2498 <vfprintf+0xe6>
    2476:	ea e0       	ldi	r30, 0x0A	; 10
    2478:	2e 9e       	mul	r2, r30
    247a:	20 0d       	add	r18, r0
    247c:	11 24       	eor	r1, r1
    247e:	22 2e       	mov	r2, r18
    2480:	f3 2d       	mov	r31, r3
    2482:	f0 62       	ori	r31, 0x20	; 32
    2484:	3f 2e       	mov	r3, r31
    2486:	08 c0       	rjmp	.+16     	; 0x2498 <vfprintf+0xe6>
    2488:	8c 36       	cpi	r24, 0x6C	; 108
    248a:	21 f4       	brne	.+8      	; 0x2494 <vfprintf+0xe2>
    248c:	83 2d       	mov	r24, r3
    248e:	80 68       	ori	r24, 0x80	; 128
    2490:	38 2e       	mov	r3, r24
    2492:	02 c0       	rjmp	.+4      	; 0x2498 <vfprintf+0xe6>
    2494:	88 36       	cpi	r24, 0x68	; 104
    2496:	41 f4       	brne	.+16     	; 0x24a8 <vfprintf+0xf6>
    2498:	f7 01       	movw	r30, r14
    249a:	93 fd       	sbrc	r25, 3
    249c:	85 91       	lpm	r24, Z+
    249e:	93 ff       	sbrs	r25, 3
    24a0:	81 91       	ld	r24, Z+
    24a2:	7f 01       	movw	r14, r30
    24a4:	81 11       	cpse	r24, r1
    24a6:	b3 cf       	rjmp	.-154    	; 0x240e <vfprintf+0x5c>
    24a8:	98 2f       	mov	r25, r24
    24aa:	9f 7d       	andi	r25, 0xDF	; 223
    24ac:	95 54       	subi	r25, 0x45	; 69
    24ae:	93 30       	cpi	r25, 0x03	; 3
    24b0:	28 f4       	brcc	.+10     	; 0x24bc <vfprintf+0x10a>
    24b2:	0c 5f       	subi	r16, 0xFC	; 252
    24b4:	1f 4f       	sbci	r17, 0xFF	; 255
    24b6:	9f e3       	ldi	r25, 0x3F	; 63
    24b8:	99 83       	std	Y+1, r25	; 0x01
    24ba:	0d c0       	rjmp	.+26     	; 0x24d6 <vfprintf+0x124>
    24bc:	83 36       	cpi	r24, 0x63	; 99
    24be:	31 f0       	breq	.+12     	; 0x24cc <vfprintf+0x11a>
    24c0:	83 37       	cpi	r24, 0x73	; 115
    24c2:	71 f0       	breq	.+28     	; 0x24e0 <vfprintf+0x12e>
    24c4:	83 35       	cpi	r24, 0x53	; 83
    24c6:	09 f0       	breq	.+2      	; 0x24ca <vfprintf+0x118>
    24c8:	59 c0       	rjmp	.+178    	; 0x257c <vfprintf+0x1ca>
    24ca:	21 c0       	rjmp	.+66     	; 0x250e <vfprintf+0x15c>
    24cc:	f8 01       	movw	r30, r16
    24ce:	80 81       	ld	r24, Z
    24d0:	89 83       	std	Y+1, r24	; 0x01
    24d2:	0e 5f       	subi	r16, 0xFE	; 254
    24d4:	1f 4f       	sbci	r17, 0xFF	; 255
    24d6:	88 24       	eor	r8, r8
    24d8:	83 94       	inc	r8
    24da:	91 2c       	mov	r9, r1
    24dc:	53 01       	movw	r10, r6
    24de:	13 c0       	rjmp	.+38     	; 0x2506 <vfprintf+0x154>
    24e0:	28 01       	movw	r4, r16
    24e2:	f2 e0       	ldi	r31, 0x02	; 2
    24e4:	4f 0e       	add	r4, r31
    24e6:	51 1c       	adc	r5, r1
    24e8:	f8 01       	movw	r30, r16
    24ea:	a0 80       	ld	r10, Z
    24ec:	b1 80       	ldd	r11, Z+1	; 0x01
    24ee:	36 fe       	sbrs	r3, 6
    24f0:	03 c0       	rjmp	.+6      	; 0x24f8 <vfprintf+0x146>
    24f2:	69 2d       	mov	r22, r9
    24f4:	70 e0       	ldi	r23, 0x00	; 0
    24f6:	02 c0       	rjmp	.+4      	; 0x24fc <vfprintf+0x14a>
    24f8:	6f ef       	ldi	r22, 0xFF	; 255
    24fa:	7f ef       	ldi	r23, 0xFF	; 255
    24fc:	c5 01       	movw	r24, r10
    24fe:	0e 94 c5 13 	call	0x278a	; 0x278a <strnlen>
    2502:	4c 01       	movw	r8, r24
    2504:	82 01       	movw	r16, r4
    2506:	f3 2d       	mov	r31, r3
    2508:	ff 77       	andi	r31, 0x7F	; 127
    250a:	3f 2e       	mov	r3, r31
    250c:	16 c0       	rjmp	.+44     	; 0x253a <vfprintf+0x188>
    250e:	28 01       	movw	r4, r16
    2510:	22 e0       	ldi	r18, 0x02	; 2
    2512:	42 0e       	add	r4, r18
    2514:	51 1c       	adc	r5, r1
    2516:	f8 01       	movw	r30, r16
    2518:	a0 80       	ld	r10, Z
    251a:	b1 80       	ldd	r11, Z+1	; 0x01
    251c:	36 fe       	sbrs	r3, 6
    251e:	03 c0       	rjmp	.+6      	; 0x2526 <vfprintf+0x174>
    2520:	69 2d       	mov	r22, r9
    2522:	70 e0       	ldi	r23, 0x00	; 0
    2524:	02 c0       	rjmp	.+4      	; 0x252a <vfprintf+0x178>
    2526:	6f ef       	ldi	r22, 0xFF	; 255
    2528:	7f ef       	ldi	r23, 0xFF	; 255
    252a:	c5 01       	movw	r24, r10
    252c:	0e 94 ba 13 	call	0x2774	; 0x2774 <strnlen_P>
    2530:	4c 01       	movw	r8, r24
    2532:	f3 2d       	mov	r31, r3
    2534:	f0 68       	ori	r31, 0x80	; 128
    2536:	3f 2e       	mov	r3, r31
    2538:	82 01       	movw	r16, r4
    253a:	33 fc       	sbrc	r3, 3
    253c:	1b c0       	rjmp	.+54     	; 0x2574 <vfprintf+0x1c2>
    253e:	82 2d       	mov	r24, r2
    2540:	90 e0       	ldi	r25, 0x00	; 0
    2542:	88 16       	cp	r8, r24
    2544:	99 06       	cpc	r9, r25
    2546:	b0 f4       	brcc	.+44     	; 0x2574 <vfprintf+0x1c2>
    2548:	b6 01       	movw	r22, r12
    254a:	80 e2       	ldi	r24, 0x20	; 32
    254c:	90 e0       	ldi	r25, 0x00	; 0
    254e:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    2552:	2a 94       	dec	r2
    2554:	f4 cf       	rjmp	.-24     	; 0x253e <vfprintf+0x18c>
    2556:	f5 01       	movw	r30, r10
    2558:	37 fc       	sbrc	r3, 7
    255a:	85 91       	lpm	r24, Z+
    255c:	37 fe       	sbrs	r3, 7
    255e:	81 91       	ld	r24, Z+
    2560:	5f 01       	movw	r10, r30
    2562:	b6 01       	movw	r22, r12
    2564:	90 e0       	ldi	r25, 0x00	; 0
    2566:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    256a:	21 10       	cpse	r2, r1
    256c:	2a 94       	dec	r2
    256e:	21 e0       	ldi	r18, 0x01	; 1
    2570:	82 1a       	sub	r8, r18
    2572:	91 08       	sbc	r9, r1
    2574:	81 14       	cp	r8, r1
    2576:	91 04       	cpc	r9, r1
    2578:	71 f7       	brne	.-36     	; 0x2556 <vfprintf+0x1a4>
    257a:	e8 c0       	rjmp	.+464    	; 0x274c <vfprintf+0x39a>
    257c:	84 36       	cpi	r24, 0x64	; 100
    257e:	11 f0       	breq	.+4      	; 0x2584 <vfprintf+0x1d2>
    2580:	89 36       	cpi	r24, 0x69	; 105
    2582:	41 f5       	brne	.+80     	; 0x25d4 <vfprintf+0x222>
    2584:	f8 01       	movw	r30, r16
    2586:	37 fe       	sbrs	r3, 7
    2588:	07 c0       	rjmp	.+14     	; 0x2598 <vfprintf+0x1e6>
    258a:	60 81       	ld	r22, Z
    258c:	71 81       	ldd	r23, Z+1	; 0x01
    258e:	82 81       	ldd	r24, Z+2	; 0x02
    2590:	93 81       	ldd	r25, Z+3	; 0x03
    2592:	0c 5f       	subi	r16, 0xFC	; 252
    2594:	1f 4f       	sbci	r17, 0xFF	; 255
    2596:	08 c0       	rjmp	.+16     	; 0x25a8 <vfprintf+0x1f6>
    2598:	60 81       	ld	r22, Z
    259a:	71 81       	ldd	r23, Z+1	; 0x01
    259c:	07 2e       	mov	r0, r23
    259e:	00 0c       	add	r0, r0
    25a0:	88 0b       	sbc	r24, r24
    25a2:	99 0b       	sbc	r25, r25
    25a4:	0e 5f       	subi	r16, 0xFE	; 254
    25a6:	1f 4f       	sbci	r17, 0xFF	; 255
    25a8:	f3 2d       	mov	r31, r3
    25aa:	ff 76       	andi	r31, 0x6F	; 111
    25ac:	3f 2e       	mov	r3, r31
    25ae:	97 ff       	sbrs	r25, 7
    25b0:	09 c0       	rjmp	.+18     	; 0x25c4 <vfprintf+0x212>
    25b2:	90 95       	com	r25
    25b4:	80 95       	com	r24
    25b6:	70 95       	com	r23
    25b8:	61 95       	neg	r22
    25ba:	7f 4f       	sbci	r23, 0xFF	; 255
    25bc:	8f 4f       	sbci	r24, 0xFF	; 255
    25be:	9f 4f       	sbci	r25, 0xFF	; 255
    25c0:	f0 68       	ori	r31, 0x80	; 128
    25c2:	3f 2e       	mov	r3, r31
    25c4:	2a e0       	ldi	r18, 0x0A	; 10
    25c6:	30 e0       	ldi	r19, 0x00	; 0
    25c8:	a3 01       	movw	r20, r6
    25ca:	0e 94 0c 14 	call	0x2818	; 0x2818 <__ultoa_invert>
    25ce:	88 2e       	mov	r8, r24
    25d0:	86 18       	sub	r8, r6
    25d2:	45 c0       	rjmp	.+138    	; 0x265e <vfprintf+0x2ac>
    25d4:	85 37       	cpi	r24, 0x75	; 117
    25d6:	31 f4       	brne	.+12     	; 0x25e4 <vfprintf+0x232>
    25d8:	23 2d       	mov	r18, r3
    25da:	2f 7e       	andi	r18, 0xEF	; 239
    25dc:	b2 2e       	mov	r11, r18
    25de:	2a e0       	ldi	r18, 0x0A	; 10
    25e0:	30 e0       	ldi	r19, 0x00	; 0
    25e2:	25 c0       	rjmp	.+74     	; 0x262e <vfprintf+0x27c>
    25e4:	93 2d       	mov	r25, r3
    25e6:	99 7f       	andi	r25, 0xF9	; 249
    25e8:	b9 2e       	mov	r11, r25
    25ea:	8f 36       	cpi	r24, 0x6F	; 111
    25ec:	c1 f0       	breq	.+48     	; 0x261e <vfprintf+0x26c>
    25ee:	18 f4       	brcc	.+6      	; 0x25f6 <vfprintf+0x244>
    25f0:	88 35       	cpi	r24, 0x58	; 88
    25f2:	79 f0       	breq	.+30     	; 0x2612 <vfprintf+0x260>
    25f4:	b5 c0       	rjmp	.+362    	; 0x2760 <vfprintf+0x3ae>
    25f6:	80 37       	cpi	r24, 0x70	; 112
    25f8:	19 f0       	breq	.+6      	; 0x2600 <vfprintf+0x24e>
    25fa:	88 37       	cpi	r24, 0x78	; 120
    25fc:	21 f0       	breq	.+8      	; 0x2606 <vfprintf+0x254>
    25fe:	b0 c0       	rjmp	.+352    	; 0x2760 <vfprintf+0x3ae>
    2600:	e9 2f       	mov	r30, r25
    2602:	e0 61       	ori	r30, 0x10	; 16
    2604:	be 2e       	mov	r11, r30
    2606:	b4 fe       	sbrs	r11, 4
    2608:	0d c0       	rjmp	.+26     	; 0x2624 <vfprintf+0x272>
    260a:	fb 2d       	mov	r31, r11
    260c:	f4 60       	ori	r31, 0x04	; 4
    260e:	bf 2e       	mov	r11, r31
    2610:	09 c0       	rjmp	.+18     	; 0x2624 <vfprintf+0x272>
    2612:	34 fe       	sbrs	r3, 4
    2614:	0a c0       	rjmp	.+20     	; 0x262a <vfprintf+0x278>
    2616:	29 2f       	mov	r18, r25
    2618:	26 60       	ori	r18, 0x06	; 6
    261a:	b2 2e       	mov	r11, r18
    261c:	06 c0       	rjmp	.+12     	; 0x262a <vfprintf+0x278>
    261e:	28 e0       	ldi	r18, 0x08	; 8
    2620:	30 e0       	ldi	r19, 0x00	; 0
    2622:	05 c0       	rjmp	.+10     	; 0x262e <vfprintf+0x27c>
    2624:	20 e1       	ldi	r18, 0x10	; 16
    2626:	30 e0       	ldi	r19, 0x00	; 0
    2628:	02 c0       	rjmp	.+4      	; 0x262e <vfprintf+0x27c>
    262a:	20 e1       	ldi	r18, 0x10	; 16
    262c:	32 e0       	ldi	r19, 0x02	; 2
    262e:	f8 01       	movw	r30, r16
    2630:	b7 fe       	sbrs	r11, 7
    2632:	07 c0       	rjmp	.+14     	; 0x2642 <vfprintf+0x290>
    2634:	60 81       	ld	r22, Z
    2636:	71 81       	ldd	r23, Z+1	; 0x01
    2638:	82 81       	ldd	r24, Z+2	; 0x02
    263a:	93 81       	ldd	r25, Z+3	; 0x03
    263c:	0c 5f       	subi	r16, 0xFC	; 252
    263e:	1f 4f       	sbci	r17, 0xFF	; 255
    2640:	06 c0       	rjmp	.+12     	; 0x264e <vfprintf+0x29c>
    2642:	60 81       	ld	r22, Z
    2644:	71 81       	ldd	r23, Z+1	; 0x01
    2646:	80 e0       	ldi	r24, 0x00	; 0
    2648:	90 e0       	ldi	r25, 0x00	; 0
    264a:	0e 5f       	subi	r16, 0xFE	; 254
    264c:	1f 4f       	sbci	r17, 0xFF	; 255
    264e:	a3 01       	movw	r20, r6
    2650:	0e 94 0c 14 	call	0x2818	; 0x2818 <__ultoa_invert>
    2654:	88 2e       	mov	r8, r24
    2656:	86 18       	sub	r8, r6
    2658:	fb 2d       	mov	r31, r11
    265a:	ff 77       	andi	r31, 0x7F	; 127
    265c:	3f 2e       	mov	r3, r31
    265e:	36 fe       	sbrs	r3, 6
    2660:	0d c0       	rjmp	.+26     	; 0x267c <vfprintf+0x2ca>
    2662:	23 2d       	mov	r18, r3
    2664:	2e 7f       	andi	r18, 0xFE	; 254
    2666:	a2 2e       	mov	r10, r18
    2668:	89 14       	cp	r8, r9
    266a:	58 f4       	brcc	.+22     	; 0x2682 <vfprintf+0x2d0>
    266c:	34 fe       	sbrs	r3, 4
    266e:	0b c0       	rjmp	.+22     	; 0x2686 <vfprintf+0x2d4>
    2670:	32 fc       	sbrc	r3, 2
    2672:	09 c0       	rjmp	.+18     	; 0x2686 <vfprintf+0x2d4>
    2674:	83 2d       	mov	r24, r3
    2676:	8e 7e       	andi	r24, 0xEE	; 238
    2678:	a8 2e       	mov	r10, r24
    267a:	05 c0       	rjmp	.+10     	; 0x2686 <vfprintf+0x2d4>
    267c:	b8 2c       	mov	r11, r8
    267e:	a3 2c       	mov	r10, r3
    2680:	03 c0       	rjmp	.+6      	; 0x2688 <vfprintf+0x2d6>
    2682:	b8 2c       	mov	r11, r8
    2684:	01 c0       	rjmp	.+2      	; 0x2688 <vfprintf+0x2d6>
    2686:	b9 2c       	mov	r11, r9
    2688:	a4 fe       	sbrs	r10, 4
    268a:	0f c0       	rjmp	.+30     	; 0x26aa <vfprintf+0x2f8>
    268c:	fe 01       	movw	r30, r28
    268e:	e8 0d       	add	r30, r8
    2690:	f1 1d       	adc	r31, r1
    2692:	80 81       	ld	r24, Z
    2694:	80 33       	cpi	r24, 0x30	; 48
    2696:	21 f4       	brne	.+8      	; 0x26a0 <vfprintf+0x2ee>
    2698:	9a 2d       	mov	r25, r10
    269a:	99 7e       	andi	r25, 0xE9	; 233
    269c:	a9 2e       	mov	r10, r25
    269e:	09 c0       	rjmp	.+18     	; 0x26b2 <vfprintf+0x300>
    26a0:	a2 fe       	sbrs	r10, 2
    26a2:	06 c0       	rjmp	.+12     	; 0x26b0 <vfprintf+0x2fe>
    26a4:	b3 94       	inc	r11
    26a6:	b3 94       	inc	r11
    26a8:	04 c0       	rjmp	.+8      	; 0x26b2 <vfprintf+0x300>
    26aa:	8a 2d       	mov	r24, r10
    26ac:	86 78       	andi	r24, 0x86	; 134
    26ae:	09 f0       	breq	.+2      	; 0x26b2 <vfprintf+0x300>
    26b0:	b3 94       	inc	r11
    26b2:	a3 fc       	sbrc	r10, 3
    26b4:	11 c0       	rjmp	.+34     	; 0x26d8 <vfprintf+0x326>
    26b6:	a0 fe       	sbrs	r10, 0
    26b8:	06 c0       	rjmp	.+12     	; 0x26c6 <vfprintf+0x314>
    26ba:	b2 14       	cp	r11, r2
    26bc:	88 f4       	brcc	.+34     	; 0x26e0 <vfprintf+0x32e>
    26be:	28 0c       	add	r2, r8
    26c0:	92 2c       	mov	r9, r2
    26c2:	9b 18       	sub	r9, r11
    26c4:	0e c0       	rjmp	.+28     	; 0x26e2 <vfprintf+0x330>
    26c6:	b2 14       	cp	r11, r2
    26c8:	60 f4       	brcc	.+24     	; 0x26e2 <vfprintf+0x330>
    26ca:	b6 01       	movw	r22, r12
    26cc:	80 e2       	ldi	r24, 0x20	; 32
    26ce:	90 e0       	ldi	r25, 0x00	; 0
    26d0:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    26d4:	b3 94       	inc	r11
    26d6:	f7 cf       	rjmp	.-18     	; 0x26c6 <vfprintf+0x314>
    26d8:	b2 14       	cp	r11, r2
    26da:	18 f4       	brcc	.+6      	; 0x26e2 <vfprintf+0x330>
    26dc:	2b 18       	sub	r2, r11
    26de:	02 c0       	rjmp	.+4      	; 0x26e4 <vfprintf+0x332>
    26e0:	98 2c       	mov	r9, r8
    26e2:	21 2c       	mov	r2, r1
    26e4:	a4 fe       	sbrs	r10, 4
    26e6:	10 c0       	rjmp	.+32     	; 0x2708 <vfprintf+0x356>
    26e8:	b6 01       	movw	r22, r12
    26ea:	80 e3       	ldi	r24, 0x30	; 48
    26ec:	90 e0       	ldi	r25, 0x00	; 0
    26ee:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    26f2:	a2 fe       	sbrs	r10, 2
    26f4:	17 c0       	rjmp	.+46     	; 0x2724 <vfprintf+0x372>
    26f6:	a1 fc       	sbrc	r10, 1
    26f8:	03 c0       	rjmp	.+6      	; 0x2700 <vfprintf+0x34e>
    26fa:	88 e7       	ldi	r24, 0x78	; 120
    26fc:	90 e0       	ldi	r25, 0x00	; 0
    26fe:	02 c0       	rjmp	.+4      	; 0x2704 <vfprintf+0x352>
    2700:	88 e5       	ldi	r24, 0x58	; 88
    2702:	90 e0       	ldi	r25, 0x00	; 0
    2704:	b6 01       	movw	r22, r12
    2706:	0c c0       	rjmp	.+24     	; 0x2720 <vfprintf+0x36e>
    2708:	8a 2d       	mov	r24, r10
    270a:	86 78       	andi	r24, 0x86	; 134
    270c:	59 f0       	breq	.+22     	; 0x2724 <vfprintf+0x372>
    270e:	a1 fe       	sbrs	r10, 1
    2710:	02 c0       	rjmp	.+4      	; 0x2716 <vfprintf+0x364>
    2712:	8b e2       	ldi	r24, 0x2B	; 43
    2714:	01 c0       	rjmp	.+2      	; 0x2718 <vfprintf+0x366>
    2716:	80 e2       	ldi	r24, 0x20	; 32
    2718:	a7 fc       	sbrc	r10, 7
    271a:	8d e2       	ldi	r24, 0x2D	; 45
    271c:	b6 01       	movw	r22, r12
    271e:	90 e0       	ldi	r25, 0x00	; 0
    2720:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    2724:	89 14       	cp	r8, r9
    2726:	38 f4       	brcc	.+14     	; 0x2736 <vfprintf+0x384>
    2728:	b6 01       	movw	r22, r12
    272a:	80 e3       	ldi	r24, 0x30	; 48
    272c:	90 e0       	ldi	r25, 0x00	; 0
    272e:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    2732:	9a 94       	dec	r9
    2734:	f7 cf       	rjmp	.-18     	; 0x2724 <vfprintf+0x372>
    2736:	8a 94       	dec	r8
    2738:	f3 01       	movw	r30, r6
    273a:	e8 0d       	add	r30, r8
    273c:	f1 1d       	adc	r31, r1
    273e:	80 81       	ld	r24, Z
    2740:	b6 01       	movw	r22, r12
    2742:	90 e0       	ldi	r25, 0x00	; 0
    2744:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    2748:	81 10       	cpse	r8, r1
    274a:	f5 cf       	rjmp	.-22     	; 0x2736 <vfprintf+0x384>
    274c:	22 20       	and	r2, r2
    274e:	09 f4       	brne	.+2      	; 0x2752 <vfprintf+0x3a0>
    2750:	42 ce       	rjmp	.-892    	; 0x23d6 <vfprintf+0x24>
    2752:	b6 01       	movw	r22, r12
    2754:	80 e2       	ldi	r24, 0x20	; 32
    2756:	90 e0       	ldi	r25, 0x00	; 0
    2758:	0e 94 d0 13 	call	0x27a0	; 0x27a0 <fputc>
    275c:	2a 94       	dec	r2
    275e:	f6 cf       	rjmp	.-20     	; 0x274c <vfprintf+0x39a>
    2760:	f6 01       	movw	r30, r12
    2762:	86 81       	ldd	r24, Z+6	; 0x06
    2764:	97 81       	ldd	r25, Z+7	; 0x07
    2766:	02 c0       	rjmp	.+4      	; 0x276c <vfprintf+0x3ba>
    2768:	8f ef       	ldi	r24, 0xFF	; 255
    276a:	9f ef       	ldi	r25, 0xFF	; 255
    276c:	2b 96       	adiw	r28, 0x0b	; 11
    276e:	e2 e1       	ldi	r30, 0x12	; 18
    2770:	0c 94 9c 14 	jmp	0x2938	; 0x2938 <__epilogue_restores__>

00002774 <strnlen_P>:
    2774:	fc 01       	movw	r30, r24
    2776:	05 90       	lpm	r0, Z+
    2778:	61 50       	subi	r22, 0x01	; 1
    277a:	70 40       	sbci	r23, 0x00	; 0
    277c:	01 10       	cpse	r0, r1
    277e:	d8 f7       	brcc	.-10     	; 0x2776 <strnlen_P+0x2>
    2780:	80 95       	com	r24
    2782:	90 95       	com	r25
    2784:	8e 0f       	add	r24, r30
    2786:	9f 1f       	adc	r25, r31
    2788:	08 95       	ret

0000278a <strnlen>:
    278a:	fc 01       	movw	r30, r24
    278c:	61 50       	subi	r22, 0x01	; 1
    278e:	70 40       	sbci	r23, 0x00	; 0
    2790:	01 90       	ld	r0, Z+
    2792:	01 10       	cpse	r0, r1
    2794:	d8 f7       	brcc	.-10     	; 0x278c <strnlen+0x2>
    2796:	80 95       	com	r24
    2798:	90 95       	com	r25
    279a:	8e 0f       	add	r24, r30
    279c:	9f 1f       	adc	r25, r31
    279e:	08 95       	ret

000027a0 <fputc>:
    27a0:	0f 93       	push	r16
    27a2:	1f 93       	push	r17
    27a4:	cf 93       	push	r28
    27a6:	df 93       	push	r29
    27a8:	fb 01       	movw	r30, r22
    27aa:	23 81       	ldd	r18, Z+3	; 0x03
    27ac:	21 fd       	sbrc	r18, 1
    27ae:	03 c0       	rjmp	.+6      	; 0x27b6 <fputc+0x16>
    27b0:	8f ef       	ldi	r24, 0xFF	; 255
    27b2:	9f ef       	ldi	r25, 0xFF	; 255
    27b4:	2c c0       	rjmp	.+88     	; 0x280e <fputc+0x6e>
    27b6:	22 ff       	sbrs	r18, 2
    27b8:	16 c0       	rjmp	.+44     	; 0x27e6 <fputc+0x46>
    27ba:	46 81       	ldd	r20, Z+6	; 0x06
    27bc:	57 81       	ldd	r21, Z+7	; 0x07
    27be:	24 81       	ldd	r18, Z+4	; 0x04
    27c0:	35 81       	ldd	r19, Z+5	; 0x05
    27c2:	42 17       	cp	r20, r18
    27c4:	53 07       	cpc	r21, r19
    27c6:	44 f4       	brge	.+16     	; 0x27d8 <fputc+0x38>
    27c8:	a0 81       	ld	r26, Z
    27ca:	b1 81       	ldd	r27, Z+1	; 0x01
    27cc:	9d 01       	movw	r18, r26
    27ce:	2f 5f       	subi	r18, 0xFF	; 255
    27d0:	3f 4f       	sbci	r19, 0xFF	; 255
    27d2:	31 83       	std	Z+1, r19	; 0x01
    27d4:	20 83       	st	Z, r18
    27d6:	8c 93       	st	X, r24
    27d8:	26 81       	ldd	r18, Z+6	; 0x06
    27da:	37 81       	ldd	r19, Z+7	; 0x07
    27dc:	2f 5f       	subi	r18, 0xFF	; 255
    27de:	3f 4f       	sbci	r19, 0xFF	; 255
    27e0:	37 83       	std	Z+7, r19	; 0x07
    27e2:	26 83       	std	Z+6, r18	; 0x06
    27e4:	14 c0       	rjmp	.+40     	; 0x280e <fputc+0x6e>
    27e6:	8b 01       	movw	r16, r22
    27e8:	ec 01       	movw	r28, r24
    27ea:	fb 01       	movw	r30, r22
    27ec:	00 84       	ldd	r0, Z+8	; 0x08
    27ee:	f1 85       	ldd	r31, Z+9	; 0x09
    27f0:	e0 2d       	mov	r30, r0
    27f2:	09 95       	icall
    27f4:	89 2b       	or	r24, r25
    27f6:	e1 f6       	brne	.-72     	; 0x27b0 <fputc+0x10>
    27f8:	d8 01       	movw	r26, r16
    27fa:	16 96       	adiw	r26, 0x06	; 6
    27fc:	8d 91       	ld	r24, X+
    27fe:	9c 91       	ld	r25, X
    2800:	17 97       	sbiw	r26, 0x07	; 7
    2802:	01 96       	adiw	r24, 0x01	; 1
    2804:	17 96       	adiw	r26, 0x07	; 7
    2806:	9c 93       	st	X, r25
    2808:	8e 93       	st	-X, r24
    280a:	16 97       	sbiw	r26, 0x06	; 6
    280c:	ce 01       	movw	r24, r28
    280e:	df 91       	pop	r29
    2810:	cf 91       	pop	r28
    2812:	1f 91       	pop	r17
    2814:	0f 91       	pop	r16
    2816:	08 95       	ret

00002818 <__ultoa_invert>:
    2818:	fa 01       	movw	r30, r20
    281a:	aa 27       	eor	r26, r26
    281c:	28 30       	cpi	r18, 0x08	; 8
    281e:	51 f1       	breq	.+84     	; 0x2874 <__ultoa_invert+0x5c>
    2820:	20 31       	cpi	r18, 0x10	; 16
    2822:	81 f1       	breq	.+96     	; 0x2884 <__ultoa_invert+0x6c>
    2824:	e8 94       	clt
    2826:	6f 93       	push	r22
    2828:	6e 7f       	andi	r22, 0xFE	; 254
    282a:	6e 5f       	subi	r22, 0xFE	; 254
    282c:	7f 4f       	sbci	r23, 0xFF	; 255
    282e:	8f 4f       	sbci	r24, 0xFF	; 255
    2830:	9f 4f       	sbci	r25, 0xFF	; 255
    2832:	af 4f       	sbci	r26, 0xFF	; 255
    2834:	b1 e0       	ldi	r27, 0x01	; 1
    2836:	3e d0       	rcall	.+124    	; 0x28b4 <__ultoa_invert+0x9c>
    2838:	b4 e0       	ldi	r27, 0x04	; 4
    283a:	3c d0       	rcall	.+120    	; 0x28b4 <__ultoa_invert+0x9c>
    283c:	67 0f       	add	r22, r23
    283e:	78 1f       	adc	r23, r24
    2840:	89 1f       	adc	r24, r25
    2842:	9a 1f       	adc	r25, r26
    2844:	a1 1d       	adc	r26, r1
    2846:	68 0f       	add	r22, r24
    2848:	79 1f       	adc	r23, r25
    284a:	8a 1f       	adc	r24, r26
    284c:	91 1d       	adc	r25, r1
    284e:	a1 1d       	adc	r26, r1
    2850:	6a 0f       	add	r22, r26
    2852:	71 1d       	adc	r23, r1
    2854:	81 1d       	adc	r24, r1
    2856:	91 1d       	adc	r25, r1
    2858:	a1 1d       	adc	r26, r1
    285a:	20 d0       	rcall	.+64     	; 0x289c <__ultoa_invert+0x84>
    285c:	09 f4       	brne	.+2      	; 0x2860 <__ultoa_invert+0x48>
    285e:	68 94       	set
    2860:	3f 91       	pop	r19
    2862:	2a e0       	ldi	r18, 0x0A	; 10
    2864:	26 9f       	mul	r18, r22
    2866:	11 24       	eor	r1, r1
    2868:	30 19       	sub	r19, r0
    286a:	30 5d       	subi	r19, 0xD0	; 208
    286c:	31 93       	st	Z+, r19
    286e:	de f6       	brtc	.-74     	; 0x2826 <__ultoa_invert+0xe>
    2870:	cf 01       	movw	r24, r30
    2872:	08 95       	ret
    2874:	46 2f       	mov	r20, r22
    2876:	47 70       	andi	r20, 0x07	; 7
    2878:	40 5d       	subi	r20, 0xD0	; 208
    287a:	41 93       	st	Z+, r20
    287c:	b3 e0       	ldi	r27, 0x03	; 3
    287e:	0f d0       	rcall	.+30     	; 0x289e <__ultoa_invert+0x86>
    2880:	c9 f7       	brne	.-14     	; 0x2874 <__ultoa_invert+0x5c>
    2882:	f6 cf       	rjmp	.-20     	; 0x2870 <__ultoa_invert+0x58>
    2884:	46 2f       	mov	r20, r22
    2886:	4f 70       	andi	r20, 0x0F	; 15
    2888:	40 5d       	subi	r20, 0xD0	; 208
    288a:	4a 33       	cpi	r20, 0x3A	; 58
    288c:	18 f0       	brcs	.+6      	; 0x2894 <__ultoa_invert+0x7c>
    288e:	49 5d       	subi	r20, 0xD9	; 217
    2890:	31 fd       	sbrc	r19, 1
    2892:	40 52       	subi	r20, 0x20	; 32
    2894:	41 93       	st	Z+, r20
    2896:	02 d0       	rcall	.+4      	; 0x289c <__ultoa_invert+0x84>
    2898:	a9 f7       	brne	.-22     	; 0x2884 <__ultoa_invert+0x6c>
    289a:	ea cf       	rjmp	.-44     	; 0x2870 <__ultoa_invert+0x58>
    289c:	b4 e0       	ldi	r27, 0x04	; 4
    289e:	a6 95       	lsr	r26
    28a0:	97 95       	ror	r25
    28a2:	87 95       	ror	r24
    28a4:	77 95       	ror	r23
    28a6:	67 95       	ror	r22
    28a8:	ba 95       	dec	r27
    28aa:	c9 f7       	brne	.-14     	; 0x289e <__ultoa_invert+0x86>
    28ac:	00 97       	sbiw	r24, 0x00	; 0
    28ae:	61 05       	cpc	r22, r1
    28b0:	71 05       	cpc	r23, r1
    28b2:	08 95       	ret
    28b4:	9b 01       	movw	r18, r22
    28b6:	ac 01       	movw	r20, r24
    28b8:	0a 2e       	mov	r0, r26
    28ba:	06 94       	lsr	r0
    28bc:	57 95       	ror	r21
    28be:	47 95       	ror	r20
    28c0:	37 95       	ror	r19
    28c2:	27 95       	ror	r18
    28c4:	ba 95       	dec	r27
    28c6:	c9 f7       	brne	.-14     	; 0x28ba <__ultoa_invert+0xa2>
    28c8:	62 0f       	add	r22, r18
    28ca:	73 1f       	adc	r23, r19
    28cc:	84 1f       	adc	r24, r20
    28ce:	95 1f       	adc	r25, r21
    28d0:	a0 1d       	adc	r26, r0
    28d2:	08 95       	ret

000028d4 <eeprom_read_byte>:
    28d4:	f9 99       	sbic	0x1f, 1	; 31
    28d6:	fe cf       	rjmp	.-4      	; 0x28d4 <eeprom_read_byte>
    28d8:	92 bd       	out	0x22, r25	; 34
    28da:	81 bd       	out	0x21, r24	; 33
    28dc:	f8 9a       	sbi	0x1f, 0	; 31
    28de:	99 27       	eor	r25, r25
    28e0:	80 b5       	in	r24, 0x20	; 32
    28e2:	08 95       	ret

000028e4 <eeprom_write_byte>:
    28e4:	26 2f       	mov	r18, r22

000028e6 <eeprom_write_r18>:
    28e6:	f9 99       	sbic	0x1f, 1	; 31
    28e8:	fe cf       	rjmp	.-4      	; 0x28e6 <eeprom_write_r18>
    28ea:	1f ba       	out	0x1f, r1	; 31
    28ec:	92 bd       	out	0x22, r25	; 34
    28ee:	81 bd       	out	0x21, r24	; 33
    28f0:	20 bd       	out	0x20, r18	; 32
    28f2:	0f b6       	in	r0, 0x3f	; 63
    28f4:	f8 94       	cli
    28f6:	fa 9a       	sbi	0x1f, 2	; 31
    28f8:	f9 9a       	sbi	0x1f, 1	; 31
    28fa:	0f be       	out	0x3f, r0	; 63
    28fc:	01 96       	adiw	r24, 0x01	; 1
    28fe:	08 95       	ret

00002900 <__prologue_saves__>:
    2900:	2f 92       	push	r2
    2902:	3f 92       	push	r3
    2904:	4f 92       	push	r4
    2906:	5f 92       	push	r5
    2908:	6f 92       	push	r6
    290a:	7f 92       	push	r7
    290c:	8f 92       	push	r8
    290e:	9f 92       	push	r9
    2910:	af 92       	push	r10
    2912:	bf 92       	push	r11
    2914:	cf 92       	push	r12
    2916:	df 92       	push	r13
    2918:	ef 92       	push	r14
    291a:	ff 92       	push	r15
    291c:	0f 93       	push	r16
    291e:	1f 93       	push	r17
    2920:	cf 93       	push	r28
    2922:	df 93       	push	r29
    2924:	cd b7       	in	r28, 0x3d	; 61
    2926:	de b7       	in	r29, 0x3e	; 62
    2928:	ca 1b       	sub	r28, r26
    292a:	db 0b       	sbc	r29, r27
    292c:	0f b6       	in	r0, 0x3f	; 63
    292e:	f8 94       	cli
    2930:	de bf       	out	0x3e, r29	; 62
    2932:	0f be       	out	0x3f, r0	; 63
    2934:	cd bf       	out	0x3d, r28	; 61
    2936:	09 94       	ijmp

00002938 <__epilogue_restores__>:
    2938:	2a 88       	ldd	r2, Y+18	; 0x12
    293a:	39 88       	ldd	r3, Y+17	; 0x11
    293c:	48 88       	ldd	r4, Y+16	; 0x10
    293e:	5f 84       	ldd	r5, Y+15	; 0x0f
    2940:	6e 84       	ldd	r6, Y+14	; 0x0e
    2942:	7d 84       	ldd	r7, Y+13	; 0x0d
    2944:	8c 84       	ldd	r8, Y+12	; 0x0c
    2946:	9b 84       	ldd	r9, Y+11	; 0x0b
    2948:	aa 84       	ldd	r10, Y+10	; 0x0a
    294a:	b9 84       	ldd	r11, Y+9	; 0x09
    294c:	c8 84       	ldd	r12, Y+8	; 0x08
    294e:	df 80       	ldd	r13, Y+7	; 0x07
    2950:	ee 80       	ldd	r14, Y+6	; 0x06
    2952:	fd 80       	ldd	r15, Y+5	; 0x05
    2954:	0c 81       	ldd	r16, Y+4	; 0x04
    2956:	1b 81       	ldd	r17, Y+3	; 0x03
    2958:	aa 81       	ldd	r26, Y+2	; 0x02
    295a:	b9 81       	ldd	r27, Y+1	; 0x01
    295c:	ce 0f       	add	r28, r30
    295e:	d1 1d       	adc	r29, r1
    2960:	0f b6       	in	r0, 0x3f	; 63
    2962:	f8 94       	cli
    2964:	de bf       	out	0x3e, r29	; 62
    2966:	0f be       	out	0x3f, r0	; 63
    2968:	cd bf       	out	0x3d, r28	; 61
    296a:	ed 01       	movw	r28, r26
    296c:	08 95       	ret

0000296e <_exit>:
    296e:	f8 94       	cli

00002970 <__stop_program>:
    2970:	ff cf       	rjmp	.-2      	; 0x2970 <__stop_program>
